--
-- PostgreSQL database cluster dump
--

SET default_transaction_read_only = off;

SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;

--
-- Drop databases (except postgres and template1)
--





--
-- Drop roles
--

DROP ROLE postgres;


--
-- Roles
--

CREATE ROLE postgres;
ALTER ROLE postgres WITH SUPERUSER INHERIT CREATEROLE CREATEDB LOGIN REPLICATION BYPASSRLS PASSWORD 'SCRAM-SHA-256$4096:V3SlhzoIe/SNjmfK9SfjwQ==$5z8jm8NKSUggcd4nYsiYJ7C2BDMX7rYjOWzwJNzP6Is=:sErx3kMzw51+ohqoqsgZMIRn4TaVJO4wzrtgd4ACcMw=';

--
-- User Configurations
--








--
-- Databases
--

--
-- Database "template1" dump
--

--
-- PostgreSQL database dump
--

-- Dumped from database version 15.2 (Debian 15.2-1.pgdg110+1)
-- Dumped by pg_dump version 15.2 (Debian 15.2-1.pgdg110+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

UPDATE pg_catalog.pg_database SET datistemplate = false WHERE datname = 'template1';
DROP DATABASE template1;
--
-- Name: template1; Type: DATABASE; Schema: -; Owner: postgres
--

CREATE DATABASE template1 WITH TEMPLATE = template0 ENCODING = 'UTF8' LOCALE_PROVIDER = libc LOCALE = 'en_US.utf8';


ALTER DATABASE template1 OWNER TO postgres;

\connect template1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: DATABASE template1; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON DATABASE template1 IS 'default template for new databases';


--
-- Name: template1; Type: DATABASE PROPERTIES; Schema: -; Owner: postgres
--

ALTER DATABASE template1 IS_TEMPLATE = true;


\connect template1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: DATABASE template1; Type: ACL; Schema: -; Owner: postgres
--

REVOKE CONNECT,TEMPORARY ON DATABASE template1 FROM PUBLIC;
GRANT CONNECT ON DATABASE template1 TO PUBLIC;


--
-- PostgreSQL database dump complete
--

--
-- Database "postgres" dump
--

--
-- PostgreSQL database dump
--

-- Dumped from database version 15.2 (Debian 15.2-1.pgdg110+1)
-- Dumped by pg_dump version 15.2 (Debian 15.2-1.pgdg110+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

DROP DATABASE postgres;
--
-- Name: postgres; Type: DATABASE; Schema: -; Owner: postgres
--

CREATE DATABASE postgres WITH TEMPLATE = template0 ENCODING = 'UTF8' LOCALE_PROVIDER = libc LOCALE = 'en_US.utf8';


ALTER DATABASE postgres OWNER TO postgres;

\connect postgres

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: DATABASE postgres; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON DATABASE postgres IS 'default administrative connection database';


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: Advertise-with-well-plus-good; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Advertise-with-well-plus-good" (
    id bigint NOT NULL,
    title character varying(100) NOT NULL,
    content text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    author_advertise_well_good_id bigint NOT NULL
);


ALTER TABLE public."Advertise-with-well-plus-good" OWNER TO postgres;

--
-- Name: Advertise-with-well-plus-good_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."Advertise-with-well-plus-good" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Advertise-with-well-plus-good_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: Advertise-with-well-plus-good_paragraphs_advertise_well_good; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Advertise-with-well-plus-good_paragraphs_advertise_well_good" (
    id bigint NOT NULL,
    advertisewithwellplusgood_id bigint NOT NULL,
    paragraph_id bigint NOT NULL
);


ALTER TABLE public."Advertise-with-well-plus-good_paragraphs_advertise_well_good" OWNER TO postgres;

--
-- Name: Advertise-with-well-plus-good_paragraphs_advertise_well__id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."Advertise-with-well-plus-good_paragraphs_advertise_well_good" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Advertise-with-well-plus-good_paragraphs_advertise_well__id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: ContactUs_paragraph; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."ContactUs_paragraph" (
    id bigint NOT NULL,
    paragraph_title character varying(255),
    paragraph_content text,
    "order" integer,
    advertise_with_us_id bigint,
    contact_us_id bigint,
    CONSTRAINT "ContactUs_paragraph_order_check" CHECK (("order" >= 0))
);


ALTER TABLE public."ContactUs_paragraph" OWNER TO postgres;

--
-- Name: ContactUs_paragraph_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."ContactUs_paragraph" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."ContactUs_paragraph_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: ContactUs_paragraph_step_by_step_guide; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."ContactUs_paragraph_step_by_step_guide" (
    id bigint NOT NULL,
    paragraph_id bigint NOT NULL,
    stepbystepguide_id bigint NOT NULL
);


ALTER TABLE public."ContactUs_paragraph_step_by_step_guide" OWNER TO postgres;

--
-- Name: ContactUs_paragraph_step_by_step_guide_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."ContactUs_paragraph_step_by_step_guide" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."ContactUs_paragraph_step_by_step_guide_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: PageTemplate_followus; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."PageTemplate_followus" (
    id bigint NOT NULL,
    facebook_link character varying(255),
    twitter_link character varying(255),
    instagram_link character varying(255),
    youtube_link character varying(255),
    pinterest_link character varying(255)
);


ALTER TABLE public."PageTemplate_followus" OWNER TO postgres;

--
-- Name: PageTemplate_followus_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."PageTemplate_followus" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."PageTemplate_followus_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: PageTemplate_pagetemplate; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."PageTemplate_pagetemplate" (
    id bigint NOT NULL,
    logo_name character varying(255),
    logo_description character varying(255),
    logo_image character varying(100),
    copyright character varying(255),
    follow_us_id bigint
);


ALTER TABLE public."PageTemplate_pagetemplate" OWNER TO postgres;

--
-- Name: PageTemplate_pagetemplate_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."PageTemplate_pagetemplate" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."PageTemplate_pagetemplate_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: PrivacyPolicy; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."PrivacyPolicy" (
    id bigint NOT NULL,
    title character varying(100) NOT NULL,
    content text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    author_privacy_policy_id bigint
);


ALTER TABLE public."PrivacyPolicy" OWNER TO postgres;

--
-- Name: PrivacyPolicy_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."PrivacyPolicy" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."PrivacyPolicy_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: PrivacyPolicy_paragraphs_privacy_policy; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."PrivacyPolicy_paragraphs_privacy_policy" (
    id bigint NOT NULL,
    privacypolicy_id bigint NOT NULL,
    paragraph_id bigint NOT NULL
);


ALTER TABLE public."PrivacyPolicy_paragraphs_privacy_policy" OWNER TO postgres;

--
-- Name: PrivacyPolicy_paragraphs_privacy_policy_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."PrivacyPolicy_paragraphs_privacy_policy" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."PrivacyPolicy_paragraphs_privacy_policy_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: UserManagement_user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."UserManagement_user" (
    id bigint NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    email character varying(255) NOT NULL,
    first_name character varying(255) NOT NULL,
    last_name character varying(255) NOT NULL,
    user_slug character varying(255),
    profile_image character varying(100),
    tc boolean NOT NULL,
    is_active boolean NOT NULL,
    is_admin boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL
);


ALTER TABLE public."UserManagement_user" OWNER TO postgres;

--
-- Name: UserManagement_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."UserManagement_user" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."UserManagement_user_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: UserProfile_role; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."UserProfile_role" (
    id bigint NOT NULL,
    role_name character varying(100) NOT NULL
);


ALTER TABLE public."UserProfile_role" OWNER TO postgres;

--
-- Name: UserProfile_role_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."UserProfile_role" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."UserProfile_role_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: UserProfile_userprofile; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."UserProfile_userprofile" (
    id bigint NOT NULL,
    first_name character varying(255),
    last_name character varying(255) NOT NULL,
    email character varying(255),
    user_slug character varying(255),
    bio text,
    profile_image character varying(100),
    country character varying(150),
    city character varying(150),
    twitter_acc character varying(300),
    facebook_acc character varying(300),
    instagram_acc character varying(300),
    role_id bigint,
    user_id bigint NOT NULL
);


ALTER TABLE public."UserProfile_userprofile" OWNER TO postgres;

--
-- Name: UserProfile_userprofile_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."UserProfile_userprofile" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."UserProfile_userprofile_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO postgres;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO postgres;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO postgres;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_blogparagraph; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_blogparagraph (
    id bigint NOT NULL,
    paragraph_title character varying(255),
    paragraph_image character varying(100),
    paragraph_content text,
    "order" integer,
    blog_post_id bigint,
    paragraphs_self_refer_id bigint,
    CONSTRAINT blog_blogparagraph_order_check CHECK (("order" >= 0))
);


ALTER TABLE public.blog_blogparagraph OWNER TO postgres;

--
-- Name: blog_blogparagraph_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_blogparagraph ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_blogparagraph_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_blogparagraph_step_by_step_guide; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_blogparagraph_step_by_step_guide (
    id bigint NOT NULL,
    blogparagraph_id bigint NOT NULL,
    blogstepbystepguide_id bigint NOT NULL
);


ALTER TABLE public.blog_blogparagraph_step_by_step_guide OWNER TO postgres;

--
-- Name: blog_blogparagraph_step_by_step_guide_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_blogparagraph_step_by_step_guide ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_blogparagraph_step_by_step_guide_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_blogpostimage; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_blogpostimage (
    id bigint NOT NULL,
    images character varying(100)
);


ALTER TABLE public.blog_blogpostimage OWNER TO postgres;

--
-- Name: blog_blogpostimage_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_blogpostimage ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_blogpostimage_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_category; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_category (
    id bigint NOT NULL,
    category_name character varying(100) NOT NULL,
    category_slug character varying(255)
);


ALTER TABLE public.blog_category OWNER TO postgres;

--
-- Name: blog_category_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_category ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_comment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_comment (
    id bigint NOT NULL,
    created_date timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    comment_text text NOT NULL,
    author_id bigint NOT NULL,
    post_id bigint NOT NULL
);


ALTER TABLE public.blog_comment OWNER TO postgres;

--
-- Name: blog_comment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_comment ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_comment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_posts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_posts (
    id bigint NOT NULL,
    title character varying(100) NOT NULL,
    content text,
    status integer,
    slug character varying(255),
    cover_image character varying(100),
    quote character varying(255),
    quote_writer character varying(255),
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    most_recent_posts boolean,
    featured_posts boolean,
    older_posts boolean,
    author_id bigint NOT NULL,
    author_profile_id bigint,
    category_id bigint NOT NULL,
    topic_id bigint
);


ALTER TABLE public.blog_posts OWNER TO postgres;

--
-- Name: blog_posts_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_posts ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_posts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_posts_paragraphs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_posts_paragraphs (
    id bigint NOT NULL,
    blogpost_id bigint NOT NULL,
    blogparagraph_id bigint NOT NULL
);


ALTER TABLE public.blog_posts_paragraphs OWNER TO postgres;

--
-- Name: blog_posts_paragraphs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_posts_paragraphs ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_posts_paragraphs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_posts_post_images; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_posts_post_images (
    id bigint NOT NULL,
    blogpost_id bigint NOT NULL,
    blogpostimage_id bigint NOT NULL
);


ALTER TABLE public.blog_posts_post_images OWNER TO postgres;

--
-- Name: blog_posts_post_images_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_posts_post_images ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_posts_post_images_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_reply; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_reply (
    id bigint NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    reply_text text NOT NULL,
    author_id bigint NOT NULL,
    comment_id_id bigint NOT NULL
);


ALTER TABLE public.blog_reply OWNER TO postgres;

--
-- Name: blog_reply_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_reply ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_reply_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_topic; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_topic (
    id bigint NOT NULL,
    topic_name character varying(100),
    topic_slug character varying(255),
    category_id bigint
);


ALTER TABLE public.blog_topic OWNER TO postgres;

--
-- Name: blog_topic_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_topic ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_topic_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_topicfeaturedpost; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_topicfeaturedpost (
    id bigint NOT NULL,
    featured_topic_id bigint NOT NULL,
    post_id bigint NOT NULL
);


ALTER TABLE public.blog_topicfeaturedpost OWNER TO postgres;

--
-- Name: blog_topicfeaturedpost_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_topicfeaturedpost ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_topicfeaturedpost_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: contact_us; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.contact_us (
    id bigint NOT NULL,
    title character varying(100) NOT NULL,
    content text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    author_id bigint NOT NULL
);


ALTER TABLE public.contact_us OWNER TO postgres;

--
-- Name: contact_us_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.contact_us ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.contact_us_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: contact_us_paragraphs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.contact_us_paragraphs (
    id bigint NOT NULL,
    contactus_id bigint NOT NULL,
    paragraph_id bigint NOT NULL
);


ALTER TABLE public.contact_us_paragraphs OWNER TO postgres;

--
-- Name: contact_us_paragraphs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.contact_us_paragraphs ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.contact_us_paragraphs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id bigint NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO postgres;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO postgres;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO postgres;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO postgres;

--
-- Name: silk_profile; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.silk_profile (
    id integer NOT NULL,
    name character varying(300) NOT NULL,
    start_time timestamp with time zone NOT NULL,
    end_time timestamp with time zone,
    time_taken double precision,
    file_path character varying(300) NOT NULL,
    line_num integer,
    end_line_num integer,
    func_name character varying(300) NOT NULL,
    exception_raised boolean NOT NULL,
    dynamic boolean NOT NULL,
    request_id character varying(36)
);


ALTER TABLE public.silk_profile OWNER TO postgres;

--
-- Name: silk_profile_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.silk_profile ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.silk_profile_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: silk_profile_queries; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.silk_profile_queries (
    id bigint NOT NULL,
    profile_id integer NOT NULL,
    sqlquery_id integer NOT NULL
);


ALTER TABLE public.silk_profile_queries OWNER TO postgres;

--
-- Name: silk_profile_queries_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.silk_profile_queries ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.silk_profile_queries_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: silk_request; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.silk_request (
    id character varying(36) NOT NULL,
    path character varying(190) NOT NULL,
    query_params text NOT NULL,
    raw_body text NOT NULL,
    body text NOT NULL,
    method character varying(10) NOT NULL,
    start_time timestamp with time zone NOT NULL,
    view_name character varying(190),
    end_time timestamp with time zone,
    time_taken double precision,
    encoded_headers text NOT NULL,
    meta_time double precision,
    meta_num_queries integer,
    meta_time_spent_queries double precision,
    pyprofile text NOT NULL,
    num_sql_queries integer NOT NULL,
    prof_file character varying(300) NOT NULL
);


ALTER TABLE public.silk_request OWNER TO postgres;

--
-- Name: silk_response; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.silk_response (
    id character varying(36) NOT NULL,
    status_code integer NOT NULL,
    raw_body text NOT NULL,
    body text NOT NULL,
    encoded_headers text NOT NULL,
    request_id character varying(36) NOT NULL
);


ALTER TABLE public.silk_response OWNER TO postgres;

--
-- Name: silk_sqlquery; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.silk_sqlquery (
    id integer NOT NULL,
    query text NOT NULL,
    start_time timestamp with time zone,
    end_time timestamp with time zone,
    time_taken double precision,
    traceback text NOT NULL,
    request_id character varying(36),
    identifier integer NOT NULL,
    analysis text
);


ALTER TABLE public.silk_sqlquery OWNER TO postgres;

--
-- Name: silk_sqlquery_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.silk_sqlquery ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.silk_sqlquery_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: step_by_step_guides; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.step_by_step_guides (
    id bigint NOT NULL,
    list_style character varying(50),
    sbs_guide_number smallint,
    sbs_image character varying(100),
    sub_heading character varying(255),
    sub_content text,
    sbs_index smallint,
    blog_paragraphs_id bigint,
    blog_post_id bigint NOT NULL,
    sbs_self_refer_id bigint,
    CONSTRAINT step_by_step_guides_sbs_guide_number_check CHECK ((sbs_guide_number >= 0)),
    CONSTRAINT step_by_step_guides_sbs_index_check CHECK ((sbs_index >= 0))
);


ALTER TABLE public.step_by_step_guides OWNER TO postgres;

--
-- Name: step_by_step_guides_contact_us_specific; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.step_by_step_guides_contact_us_specific (
    id bigint NOT NULL,
    list_style character varying(50),
    sbs_guide_number smallint,
    sub_heading character varying(255),
    sub_content text,
    sbs_index smallint,
    blog_paragraphs_id bigint,
    contact_us_id bigint NOT NULL,
    privacy_policy_id bigint,
    sbs_self_refer_id bigint,
    CONSTRAINT step_by_step_guides_contact_us_specific_sbs_guide_number_check CHECK ((sbs_guide_number >= 0)),
    CONSTRAINT step_by_step_guides_contact_us_specific_sbs_index_check CHECK ((sbs_index >= 0))
);


ALTER TABLE public.step_by_step_guides_contact_us_specific OWNER TO postgres;

--
-- Name: step_by_step_guides_contact_us_specific_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.step_by_step_guides_contact_us_specific ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.step_by_step_guides_contact_us_specific_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: step_by_step_guides_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.step_by_step_guides ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.step_by_step_guides_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: Advertise-with-well-plus-good; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Advertise-with-well-plus-good" (id, title, content, created_at, updated_at, author_advertise_well_good_id) FROM stdin;
1	Advertise With Well+Good	Please contact us at advertising@wellandgood.com to\r\nlearn more about our advertising opportunities.	2023-03-31 10:48:25+00	2023-04-05 15:43:05.066227+00	1
\.


--
-- Data for Name: Advertise-with-well-plus-good_paragraphs_advertise_well_good; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Advertise-with-well-plus-good_paragraphs_advertise_well_good" (id, advertisewithwellplusgood_id, paragraph_id) FROM stdin;
3	1	10
\.


--
-- Data for Name: ContactUs_paragraph; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."ContactUs_paragraph" (id, paragraph_title, paragraph_content, "order", advertise_with_us_id, contact_us_id) FROM stdin;
1	Looking to advertise?	Well+Good works hand-in-hand with each of our partners to ensure their creative messaging resonates best with our audience. From editorial alignments, to custom content solutions, to social and email strategy, to live (or, ahem, virtual!) events, our sales and creative teams will help you generate some major good vibes in the wellness space. Visit our advertising page or write us at advertising@wellandgood.com.	0	\N	1
2	Are you a publicist looking for coverage of your product or client?	Please contact the appropriate editor below. Note that due to the volume of pitches we receive each day, we may not be able to respond to every request.	0	\N	1
3	Are you a journalist or a writer who wants to contribute to Well+Good?	You can find our complete pitching guidelines here.	0	\N	1
4	Do you have a media request?	Write us at susan.turner@leafgroup.com	0	\N	1
5	Do you have a question regarding your subscription to a Well+Good newsletter?	Please send an email to hello@wellandgood.com.	0	\N	1
6	Are you looking to license or reuse content published by Well+Good?	Contact our official partner, Wright’s Media about available usages, license fees, and award seal artwork at LeafGroup@wrightsmedia.com. Please note that Wright’s Media is the only authorized company that can provide Leaf Group brand materials.”	0	\N	1
7	Due to the COVID-19 pandemic, we are not currently accepting unsolicited packages by mail.		0	\N	1
10	Don’t forget to include:	+ Your name, email and phone\r\n+ Company name\r\n+ Business category/field\r\n+ Timing of your potential ad campaign (i.e. – Sept – Nov)\r\n+ High and low budget levels to craft a proposal\r\n+ How you will measure success (i.e. KPIs)\r\n+ Optional: how you found us?	0	1	\N
11	Last Updated: March 13, 2023	This Privacy Notice (“Privacy Notice” or “Notice”) describes how we collect, use, share, manage or disclose or generally process your personal information as a visitor or customer when you visit or use our websites, mobile apps, applications, digital services, or any related products, services, sites, features or functionalities (each a “Service“, collectively the “Services“) that link to this Privacy Notice, and how Leaf Group collects, uses, shares, processes and manages your personal information.\r\n\r\nWe collect and use your personal information and in accordance with applicable data protection and privacy laws (“Data Protection Laws“), to keep it secure and recognize and respect your privacy rights. We have included below specific provisions relevant to users in different regions.	0	\N	\N
\.


--
-- Data for Name: ContactUs_paragraph_step_by_step_guide; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."ContactUs_paragraph_step_by_step_guide" (id, paragraph_id, stepbystepguide_id) FROM stdin;
\.


--
-- Data for Name: PageTemplate_followus; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."PageTemplate_followus" (id, facebook_link, twitter_link, instagram_link, youtube_link, pinterest_link) FROM stdin;
1	http://facebook.com	http://instagram.com	http://com.qandeelhaider@gmail.com	http://youtube.com	http://pinterest.com
\.


--
-- Data for Name: PageTemplate_pagetemplate; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."PageTemplate_pagetemplate" (id, logo_name, logo_description, logo_image, copyright, follow_us_id) FROM stdin;
1	WELL PLUS GOOD	YOUR HEALTHIEST RELATIONSHIP Well+Good decodes and demystifies what it means to live a well life, inside and out. Get it daily.		© 2022 - You Blog	1
\.


--
-- Data for Name: PrivacyPolicy; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."PrivacyPolicy" (id, title, content, created_at, updated_at, author_privacy_policy_id) FROM stdin;
1	PRIVACY NOTICE		2023-03-31 11:14:37+00	2023-04-05 16:16:09.829954+00	1
\.


--
-- Data for Name: PrivacyPolicy_paragraphs_privacy_policy; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."PrivacyPolicy_paragraphs_privacy_policy" (id, privacypolicy_id, paragraph_id) FROM stdin;
3	1	11
\.


--
-- Data for Name: UserManagement_user; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."UserManagement_user" (id, password, last_login, email, first_name, last_name, user_slug, profile_image, tc, is_active, is_admin, created_at, updated_at) FROM stdin;
1	pbkdf2_sha256$390000$f6DmMskWtqZRg3sKbzIE9l$sg+LIgSoIYhfqSMYOP7D0n0o71y5Pfe8k8Int9eLeSg=	2023-03-30 16:14:37.809408+00	com.qandeelhaider@gmail.com	qandeel	haider	qandeel		t	t	t	2023-03-30 16:14:27.218969+00	2023-03-30 16:14:27.225514+00
\.


--
-- Data for Name: UserProfile_role; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."UserProfile_role" (id, role_name) FROM stdin;
\.


--
-- Data for Name: UserProfile_userprofile; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."UserProfile_userprofile" (id, first_name, last_name, email, user_slug, bio, profile_image, country, city, twitter_acc, facebook_acc, instagram_acc, role_id, user_id) FROM stdin;
1	qandeel	haider	com.qandeelhaider@gmail.com	qandeel	\N		\N	\N	\N	\N	\N	\N	1
\.


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add content type	4	add_contenttype
14	Can change content type	4	change_contenttype
15	Can delete content type	4	delete_contenttype
16	Can view content type	4	view_contenttype
17	Can add session	5	add_session
18	Can change session	5	change_session
19	Can delete session	5	delete_session
20	Can view session	5	view_session
21	Can add profile	6	add_profile
22	Can change profile	6	change_profile
23	Can delete profile	6	delete_profile
24	Can view profile	6	view_profile
25	Can add request	7	add_request
26	Can change request	7	change_request
27	Can delete request	7	delete_request
28	Can view request	7	view_request
29	Can add response	8	add_response
30	Can change response	8	change_response
31	Can delete response	8	delete_response
32	Can view response	8	view_response
33	Can add sql query	9	add_sqlquery
34	Can change sql query	9	change_sqlquery
35	Can delete sql query	9	delete_sqlquery
36	Can view sql query	9	view_sqlquery
37	Can add advertise with well plus good	10	add_advertisewithwellplusgood
38	Can change advertise with well plus good	10	change_advertisewithwellplusgood
39	Can delete advertise with well plus good	10	delete_advertisewithwellplusgood
40	Can view advertise with well plus good	10	view_advertisewithwellplusgood
41	Can add contact us	11	add_contactus
42	Can change contact us	11	change_contactus
43	Can delete contact us	11	delete_contactus
44	Can view contact us	11	view_contactus
45	Can add paragraph	12	add_paragraph
46	Can change paragraph	12	change_paragraph
47	Can delete paragraph	12	delete_paragraph
48	Can view paragraph	12	view_paragraph
49	Can add privacy policy	13	add_privacypolicy
50	Can change privacy policy	13	change_privacypolicy
51	Can delete privacy policy	13	delete_privacypolicy
52	Can view privacy policy	13	view_privacypolicy
53	Can add step-by-step guide	14	add_stepbystepguide
54	Can change step-by-step guide	14	change_stepbystepguide
55	Can delete step-by-step guide	14	delete_stepbystepguide
56	Can view step-by-step guide	14	view_stepbystepguide
57	Can add role	15	add_role
58	Can change role	15	change_role
59	Can delete role	15	delete_role
60	Can view role	15	view_role
61	Can add user profile	16	add_userprofile
62	Can change user profile	16	change_userprofile
63	Can delete user profile	16	delete_userprofile
64	Can view user profile	16	view_userprofile
65	Can add user	17	add_user
66	Can change user	17	change_user
67	Can delete user	17	delete_user
68	Can view user	17	view_user
69	Can add blog paragraph	18	add_blogparagraph
70	Can change blog paragraph	18	change_blogparagraph
71	Can delete blog paragraph	18	delete_blogparagraph
72	Can view blog paragraph	18	view_blogparagraph
73	Can add blog post	19	add_blogpost
74	Can change blog post	19	change_blogpost
75	Can delete blog post	19	delete_blogpost
76	Can view blog post	19	view_blogpost
77	Can add blog post image	20	add_blogpostimage
78	Can change blog post image	20	change_blogpostimage
79	Can delete blog post image	20	delete_blogpostimage
80	Can view blog post image	20	view_blogpostimage
81	Can add category	21	add_category
82	Can change category	21	change_category
83	Can delete category	21	delete_category
84	Can view category	21	view_category
85	Can add comment	22	add_comment
86	Can change comment	22	change_comment
87	Can delete comment	22	delete_comment
88	Can view comment	22	view_comment
89	Can add topic	23	add_topic
90	Can change topic	23	change_topic
91	Can delete topic	23	delete_topic
92	Can view topic	23	view_topic
93	Can add topic featured post	24	add_topicfeaturedpost
94	Can change topic featured post	24	change_topicfeaturedpost
95	Can delete topic featured post	24	delete_topicfeaturedpost
96	Can view topic featured post	24	view_topicfeaturedpost
97	Can add reply	25	add_reply
98	Can change reply	25	change_reply
99	Can delete reply	25	delete_reply
100	Can view reply	25	view_reply
101	Can add step-by-step guide	26	add_blogstepbystepguide
102	Can change step-by-step guide	26	change_blogstepbystepguide
103	Can delete step-by-step guide	26	delete_blogstepbystepguide
104	Can view step-by-step guide	26	view_blogstepbystepguide
105	Can add terms and conditions	27	add_termsandconditions
106	Can change terms and conditions	27	change_termsandconditions
107	Can delete terms and conditions	27	delete_termsandconditions
108	Can view terms and conditions	27	view_termsandconditions
109	Can add clause	28	add_clause
110	Can change clause	28	change_clause
111	Can delete clause	28	delete_clause
112	Can view clause	28	view_clause
113	Can add user agreement	29	add_useragreement
114	Can change user agreement	29	change_useragreement
115	Can delete user agreement	29	delete_useragreement
116	Can view user agreement	29	view_useragreement
117	Can add follow us	30	add_followus
118	Can change follow us	30	change_followus
119	Can delete follow us	30	delete_followus
120	Can view follow us	30	view_followus
121	Can add page template	31	add_pagetemplate
122	Can change page template	31	change_pagetemplate
123	Can delete page template	31	delete_pagetemplate
124	Can view page template	31	view_pagetemplate
\.


--
-- Data for Name: blog_blogparagraph; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_blogparagraph (id, paragraph_title, paragraph_image, paragraph_content, "order", blog_post_id, paragraphs_self_refer_id) FROM stdin;
1	I tried taking the coffee quiz—here's what I learned		Frankly, I haven’t been this excited about a test since the time I was sorted into house Gryffindor on the Harry Potter sorting quiz. So, when given the opportunity to learn more about my favorite gut-healthy drink of all time, you bet I hopped right on it.\r\n\r\nHere’s exactly what I learned from my test. When it comes to coffee, I’m team sweet, hands down. For the sake of the quiz, I narrowed it down to coffees with a chocolate flavor profile—since I could only choose one option. In terms of mouthfeel, I prefer a medium-bodied coffee that’s not too light and watery but not too heavy either. In terms of method, although I typically use my Nespresso coffee machine for a quick and easy cup of joe, I’ll admit that pour-over coffee might be my all-time favorite. That said, I chose the pour-over as my equipment of choice. As for my expertise level, I went with intermediate.\r\n\r\nNow the big reveal. According to my test, not one but two coffee choices are best suited for my palate—the Brooklyn and Colombia - El Ramo. The Brooklyn medium coffee has notes of milk chocolate, toffee, and dried fruit, which is very much up my alley when it comes to flavor. Meanwhile, the Colombia - El Ramo coffee has a medium-light body and has notes of peach, fresh cream, and vanilla. Yes, yes, and yes.\r\n\r\ncoffee quiz Brooklyn	0	1	\N
2	How your gut health and energy levels are linked		While the two may not seem directly related, the microorganisms in the lining of your digestive tract play a large role in your mood, sleep, and how much energy you absorb from the food you eat.\r\n\r\nA healthy gut leads to happier hormones, specifically serotonin, a hormone and neurotransmitter that carries messages from the brain to different cells in your body. And 95 percent of this chemical messenger is produced in the gut. This connection is known as the gut-brain axis.\r\n\r\n    A healthy gut leads to happier hormones, specifically serotonin, a hormone and neurotransmitter that carries messages from the brain to different cells in your body. And 95 percent of this chemical messenger is produced in the gut. This connection is known as the gut-brain axis.\r\n\r\nSerotonin is a “feel good” chemical, and when levels are normal, you’ll tend to feel calmer, more focused, and happier. It also works with another chemical messenger, dopamine, to promote quality sleep. Melatonin often gets all the credit as the sleepy-time hormone, but your body needs serotonin to make melatonin, which then regulates your sleep-wake cycles.\r\nRelated Stories\r\nPrebiotics Are Just As Important as Probiotics When It Comes to Improving Your Gut Health, Energy Levels, and Mood—Here Are the Top 16 Food Sources\r\nPrebiotics Are Just As Important as Probiotics When It Comes to Improving...\r\n\r\n'I’m a Dietitian, and These Are the Dishes I Eat When I Want To Boost My Own Gut and Hormonal Health'\r\n'I’m a Dietitian, and These Are the Dishes I Eat When I...\r\n\r\n5 Easy-To-Bake Bread Recipes That Promote Gut Health and Regularity\r\n5 Easy-To-Bake Bread Recipes That Promote Gut Health and Regularity\r\n\r\nWhen the "bad" gut bacteria start to overtake the good bacteria, the balance in the gut microbiome is disrupted and could alter the amount of serotonin produced, affecting mood and sleep in a negative way.	0	2	\N
3	How well do water filters actually clean water?		Most point-of-use filtration systems use granular activated carbon, designed to transform what comes out of your tap into higher-quality and better-tasting water. These filters are primarily used to remove non-biological contaminants based on the certifications they hold. Certification of water quality through NSF/ANSI Standards 53 and 42 targets the removal of things like heavy metals, fluoride, and a range of volatile organic chemicals, as well as aesthetic contaminants such as chlorine (for taste and odor concerns), chloramine, iron, and zinc.\r\nRelated Stories\r\n‘I’m an ENT, and Here’s How Your Ability To Taste Food—And Your Palate—Changes As You Age’\r\n‘I’m an ENT, and Here’s How Your Ability To Taste Food—And Your...\r\n\r\nDentists Agree: This Is the Best Type of Water for Dental Health\r\nDentists Agree: This Is the Best Type of Water for Dental Health\r\n\r\nThe Reason Water Tastes Bad To You Isn't Just in Your Head\r\nThe Reason Water Tastes Bad To You Isn't Just in Your Head\r\n\r\nWhat they don’t remove is bacteria. “You cannot assume that if the filter removes chemicals, it will also remove germs,” stresses Samantha Nazareth, MD, board-certified gastroenterologist.\r\n\r\nIt’s important not to mistake filtration for purification. Brita makes it clear that their filters are not intended to purify water, and filter manufacturers include in their documentation that they shouldn’t be used with water that is microbiologically unsafe—though most consumers won’t know if this is the case.	0	3	\N
4	The formula		There are three main ingredients that give Comfort Zone Sublime Skin Intensive Serum its ability to mimic the effects of injectables. The first is a biomimetic hexapeptide (a compound made up of five peptides that are structurally similar to the ones that naturally occur in our skin) that's typically found in Botox. When used topically, it's said to deliver "Botox-like activity" while targeting expression lines and wrinkles.\r\nNext on the list is Achillea Millefolium, aka yarrow flower, which is cultivated through regenerative agriculture at Comfort Zone's headquarters in Parma, Italy. The botanical extract is known for its ability to improve skin thickness and decrease wrinkles, and has been clinically studied to stimulate collagen synthesis by 35 percent or more, “and reduce collagenase, the enzymes which cause the loss of native collagen.”\r\n\r\nFinally, there's macro hyaluronic acid, which instantly plumps and hydrates the skin while creating a suppleness that allows the other ingredients to really get in there. It also gives that immediate ‘filler effect’ appearance.\r\n\r\nThree more key ingredients round out the concoction: Paeonia albiflora extract, which supports the skin barrier; Plantago lanceolata, which stimulates and protects skin proteins; and acetyl hexapeptide 9 and 11, which increase collagen production.\r\n\r\nTo confirm the efficacy of the formula, Comfort Zone's team ran an in-house clinical trial with 40 women as well as a self-assessment survey with 60 additional women. After 28 days, the clinical trial crew saw a 25 percent reduction in wrinkle depth, while 93 percent of the self-assessed women confirmed their faces looked younger.	0	4	\N
5	Getting into the celeb skin-care machine		Getting involved with celebrity skin-care brands isn’t always easy. On one hand, a partnership can get a skin care professional the recognition and notoriety that comes with hitching their wagon to a star, but on the other, these brands are often written off from the jump because it’s often assumed that they’re no more than a money grab. In a way, these experts have to work even harder to come up with efficacious products that can stand up to any backlash that may come their way. Although it can be a bit of a gamble, for someone who already works with celebrities and has products or treatments that could help a way bigger market than their Beverly Hills spa is able to, teaming up with a celebrity client can be just the ticket.\r\n\r\nFor Joanna Czech, an esthetician and longtime friend and facialist for Kim Kardashian, it was a no-brainer to get in on the ground floor with SKKN by Kim (launched in 2022). “I was honored that she asked me,” says Czech, who has her own eponymous skincare range. “She could have worked with anyone in the world.” This organic partnership stemmed from Kardashian’s appreciation for the work that Czech does after experiencing her own positive skin results with the celebrity esthetician. “There is nothing more gratifying than a happy client,” she says.\r\n\r\nSimilarly, Cindy Crawford’s brand, Meaningful Beauty (launched in 2004), was born during a mesotherapy session with Jean-Louis Sebagh, MD, a cosmetic doctor and skin-care specialist in France. “Cindy asked me if it was possible to ‘bottle the cocktail,’ as she wanted to continue with treatments in the U.S,” he says. That was all it took for the two of them to start working together on formulations for the line. “Cindy and I were similar as we both agreed that quality and accessibility were paramount.”\r\n\r\nThe origin story behind Naomi Watts’ new brand Stripes, a skin-care line for women going through menopause (launched in 2022), follows the same trajectory. “I was very, very touched by Naomi's [Watts] story,” says Sarv Zand, MD, a dermatologist in Mill Valley, CA, who is the medical advisor for Stripes. As someone who struggled with infertility, Dr. Zand related to Naomi, “I got to hear about her journey in fertility, and how that kind of segued in her journey in menopause.” And it’s worthwhile to note that this partnership was not a snap decision and came about after the brand spoke with 14 other celebrity derms before going with Dr. Zand.\r\n\r\nThough the exact reason why certain skin pros have chosen involved in the celebrity skin-care machine varies from person to person, there’s a common thread that unites them: They believe in the founder and their mission, and want to help them make it better	0	7	\N
\.


--
-- Data for Name: blog_blogparagraph_step_by_step_guide; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_blogparagraph_step_by_step_guide (id, blogparagraph_id, blogstepbystepguide_id) FROM stdin;
\.


--
-- Data for Name: blog_blogpostimage; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_blogpostimage (id, images) FROM stdin;
\.


--
-- Data for Name: blog_category; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_category (id, category_name, category_slug) FROM stdin;
1	SKIN CARE TIPS	skin-care-tips
2	FOOD AND NUTRITION	food-and-nutrition
\.


--
-- Data for Name: blog_comment; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_comment (id, created_date, updated_at, comment_text, author_id, post_id) FROM stdin;
\.


--
-- Data for Name: blog_posts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_posts (id, title, content, status, slug, cover_image, quote, quote_writer, created_at, updated_at, most_recent_posts, featured_posts, older_posts, author_id, author_profile_id, category_id, topic_id) FROM stdin;
2	I’m an RD, and Here’s How Your Gut Health Impacts Your Energy Levels—Plus How To Boost Both	f you’re feeling sluggish, unmotivated, or having a tough time staying energized throughout the day, it might be beneficial to take a quite look at your gut—specifically the microbes living in it. Given the fact that there are 300 to 400 trillion microorganisms making your gut their home, it’s no surprise that they have a say in how you feel, including how much energy you have.\r\n\r\nA diverse and healthy microbiome influences your immune system, mood, and energy levels, helping you feel your best. So in the spirit of upping your inertia and being your most productive self throughout the day, let's try incorporating more gut-healing foods and living a more well-balanced lifestyle. Here's how.	1	gut-health-energy	blog-images/gut-health-energy.jpg	\N	\N	2023-03-30 16:17:22+00	2023-03-30 16:19:34.460482+00	t	t	f	1	1	2	1
1	Take This Buzzy Coffee Quiz To Figure Out the Best Roast, Bean, and Brew Method for Your Palate	M.A.S.H., but instead of figuring out your life partner, you’re learning the perfect type of coffee for you? Why, yes...yes it is.\r\n\r\nNeedless to say, coffee is a very personal topic—we all have specific preferences regarding how we like it. So, what better way to learn even more about what we do (and don’t) want from our non-negotiable daily cup of coffee than with the help of an interactive quiz that determines the best roast, bean, and brew method for your palate? Head over to the quiz here to find your caffeine soulmate.\r\nWhy coffee drinks of all kind will benefit from taking this quiz\r\n\r\nThe folks at Partners Coffee, a Brooklyn-based small-batch coffee roaster, have crafted the perfect coffee quiz that helps you determine the correct type of java for you. The simple four-question test analyzes your preferred taste, body or mouthfeel, brewing method, and expertise level. Upon completing the exam, you’ll get a personalized recommendation for the type of coffee that is best-suited to you and your test preferences.\r\n\r\nThough the quiz is simple and takes no more than two minutes to complete, the questions break down the anatomy of coffee to help you make the right choice. For starters, to best understand the flavors of coffee you might like, you're given several familiar options to choose from, like chocolatey, fruity, or nutty notes. To further delve into the nuances of coffee, the exam assesses your preferred “body” or mouthfeel and the way coffee tends to settle on your tongue. For this, the options include light, medium, or heavy.\r\nRelated Stories\r\nWhy Coffee Always Tastes Better at a Coffee Shop, According to a Barista—And How To Up Your Coffee Brewing Game at Home\r\nWhy Coffee Always Tastes Better at a Coffee Shop, According to a...\r\n\r\n‘I’m a Barista, and This Is the Exact Coffee-To-Water Ratio To Follow To Make the Best-Quality Cup of Coffee’\r\n‘I’m a Barista, and This Is the Exact Coffee-To-Water Ratio To Follow...\r\n\r\nI Was Today Years Old When I Learned That Light Roast Coffee Has More Caffeine *and* Acid Than Dark Roast\r\nI Was Today Years Old When I Learned That Light Roast Coffee...\r\n\r\nUp next, the quiz also takes into consideration the type of equipment you have at hand, which correlates to the kind of coffee you’ll need. In this section, they offer six different methods for brewing, including a Chemex, pour-over method, or cold brewing, to name a few. And lastly, the quiz will ask you for your expertise level, which ranges from beginner to master brewer, further helping to hone in on the perfect beans for you. (And the amount of time you likely want—or not—to spend making your morning brew.)	0	coffee-quiz	blog-images/coffee-quiz_LtsQU6l.jpg	\N	\N	2023-03-30 16:14:46+00	2023-03-30 16:20:50.193671+00	t	t	f	1	1	2	1
3	Is Your Water Filter Doing More Harm Than Good? Here’s How To Safeguard Your Drinking Water	My hotel room was conveniently outfitted with a water filtration tap for filtered water on demand. I thought, great! But after quickly chugging a glass, I immediately noticed that the water smelled and tasted overwhelmingly algal and swamp-like—like what you’d equate with a fish tank. Coincidentally, I began experiencing acute gastrointestinal symptoms in the weeks that followed, with tests eventually confirming a diagnosis of an intestinal parasitic infection.\r\n\r\nWas the filtered water the culprit? There’s no way of knowing for sure, but it certainly stands out as a red flag, and science says it’s possible. The experience compelled me to take a closer look at water filters—when they can help us, and when they can fall short and harm us.\r\n\r\nWater filtration devices are increasingly being used as a countermeasure to deal with tap water quality concerns by removing unwanted chemicals, tastes, and odors from the public water supply. While they can contribute to increased water safety and an enhancement of water quality, if they're not adequately maintained, they could actually be doing more harm than good.	1	water-filters	blog-images/water-filters.jpg	How well do water filters actually clean water?	\N	2023-03-30 16:21:18+00	2023-03-30 16:27:54.376659+00	t	t	f	1	1	2	2
4	This Skin-Firming Serum Is So Powerful, My Mom Asked if I Got Filler 2 Days After I Started Using It	Over the past few years, I’ve tested a lot of skin-care products, and am always excited when I see even the smallest improvement in my complexion and skin health. It takes a lot for a product to deliver any noticeable changes, let alone for one to do it in a short period of time, which is why I was so utterly blown away the first time I tried Comfort Zone Sublime Skin Intensive Serum ($139).\r\n\r\nTo put it simply, this product is on a whole other level. It's a literal time machine for your face, and what it's able to achieve is nothing short of magic. Honestly, calling it a "facial in a bottle" would be an insulting understatement. After just a handful of days of using it, I noticed a radical visible difference in the appearance and feel of my skin. Not to be dramatic, but hands down, this is *the* single most significant difference I’ve seen from a product in my career.\r\n\r\nThis stuff is so good that my mom recently asked, unironically, if I'd gotten work done after I sent her a photo of my face, and my friends kept asking me what makeup I was wearing when I wasn't wearing anything at all. At that point, I had just applied the serum for the second time—like I said, *magic.*\r\n\r\nStress, dry weather, and Southern California's hard water have been unkind to my complexion, and this formula feels like the save my skin has needed for years. Ever since adding it into my routine, my visage has looked plump and supple, and has taken on a glow that I fully believe comes as a result of rejuvenating the health of my skin as opposed to focusing on a short-term aesthetic fix. What's more, it's filled in some of my smile lines, which explains why people keep asking if I got filler.	1	comfort-zone-sublime-skin-intensive-serum	blog-images/comfort-zone-sublime-skin-intensive-serum.jpg	\N	\N	2023-03-30 16:27:56+00	2023-03-30 16:30:52.935269+00	t	t	f	1	1	2	2
6	One 65-Year-Old Shopper Calls This Derm-Approved Moisturizer the ‘Dream Cream for Mature Skin’—And t	Spring is just around the corner, and with it, longer, brighter days (finally!). While winter's cold, dry air calls for heftier hydration, warmer temps call for lighter moisturizers, oil-absorbing masks, and of course, SPF. To put it briefly, a spring cleaning is in order, and Three Ships has just the thing. If you haven't heard of Three Ships, it's a beauty brand that prioritizes more plant-based ingredients at a more affordable price point—and it truly delivers results (you'll see what we mean soon, but many 65+ shoppers have stated they have stopped using all other products in lieu of Three Ships—impressive).\r\n\r\nThe natural beauty brand—which is beloved by dermatologist and celebrities alike—happens to be celebrating its 6th birthday with a super-sale, taking 20 percent off almost its entire inventory. This includes everything you need to hit "reset" on your beauty routine, including featherlight (but long-lasting) day creams, brightening serums, replenishing treatments, lip masks, and more. There's even a few bundles marked down, like the Set Sail Discovery Kit ($15) that allows you to dip your toe into Three Ships beauty if you're not ready to make the full plunge.\r\n\r\nThere's just one catch—the sale is this weekend only. Come Sunday (March 19) at midnight, price tags go back up, which means you gotta act fast. That shouldn't be hard though, since spring is approaching faster than this sale lasts, right? Right. Spring clean your beauty routine, below.	1	three-ships-birthday-sale	blog-images/three-ships-sale.jpg	\N	\N	2023-03-30 16:36:54+00	2023-03-30 16:39:07.461035+00	t	t	f	1	1	1	3
7	Meet The Skin-Care Pros Working Behind the Scenes To Ensure Not All Celebrity Beauty Brands Are B.S.	No matter where you land on the pop-culture spectrum, chances are you’ve about reached the brink of celebrity skin-care fatigue. It seems like every month (heck, every week!), a new celeb is announcing the launch of their brand. If you’re nodding your head, we feel you. Since we’re on the same page so far, it’s probably fair to say that you, too, are starting to question the legitimacy of these products. Fair. Because frankly, other than sitting in glam for hours on end, what gives these A-listers the authority to formulate actual products? Well, they happen to have access to some of the best skin pros around.\r\n\r\nThough there certainly are celebrities out there who simply slap their names onto products and let their marketing teams do the rest, there are a select few brands out there that have done the work to create truly efficacious products—and in nearly every case, that’s meant partnering with a skin-care professional. Certain celeb founders have chosen to work with renowned estheticians and dermatologists who see real people in their practices, which means they have a better sense of understanding of what the everyday consumer wants and needs from their products.\r\n\r\nIt’s actually quite genius to merge the worlds of science and celebrities because one has the knowledge and experience to formulate truly incredible products while the other has the reach to get those products into the hands of millions. And what’s one without the other? A skin-care expert might launch a line, but it’s not going to get nearly as far as say, Brad Pitt’s line would; and an A-lister’s products can only go so far before someone calls B.S. With these two pieces of the puzzle in place, celeb brands have the power—and the legitimacy—to compete with the best of the best.	1	celeb-skin-care	blog-images/WG_Editorial_-Celeb-Skin-Care-Pros.jpg	\N	\N	2023-03-30 16:39:44+00	2023-03-30 16:42:30.434077+00	t	t	f	1	1	1	3
8	A Jar of this ‘Magic’ Cream Sells Every Minute—Here’s What Happened When I Tried the New, Firming Bo	London-born celebrity makeup artist Charlotte Tilbury is known for delivering red-carpet-worthy glamour to legions of loyal followers—or “darlings,” as she calls them—through her eponymous makeup and skin-care line. One of the “stars” of the lineup is the award-winning Magic Cream Moisturizer ($100). A jar of the stuff sells every minute, and many of its fans (including Charlotte herself), have been so pleased with the facial product that they didn’t want the rest of their bodies to miss out.\r\n\r\n“So many people used it not only on their faces, but their arms, shoulders, and legs,” says celebrity makeup artist (and Charlotte’s niece) Sofia Tilbury. “Charlotte herself would carry a travel-size Magic Cream with her to moisturize her hands on the go, and she even released her XL 150 milliliter Magic Cream jar to supersize everyone’s skin care.”\r\n\r\nFor years, Sofia says fans have been asking Charlotte to create a body cream with the same transformative benefits and instant glow of the moisturizer. Well, “darlings,” the wait is over thanks to the newly launched Charlotte Tilbury Magic Body Cream ($65). The cream hydrates, smooths, and lifts using the same hero ingredients as the iconic moisturizer—along with some new additions to the formula.\r\n\r\ncharlotte tilbury magic body cream\r\nCharlotte's Magic Body Cream, 200ML — $65.00\r\n\r\n \r\nShop Now\r\n\r\n“We worked closely with the labs to formulate a body cream that could give the same effect that Magic Cream is loved around the world for: immediate skin revival without being heavy or greasy with a hydrated, nourished, radiant glow from head to toe,” says Sofia. “Magic Body Cream has the same Magic 8 matrix as Magic Cream including hyaluronic acid, vitamins C and E, and shea butter, plus new body-targeted actives to help reduce the look of stretch marks and cellulite for brighter, tighter, more toned-looking skin over time.”\r\nRelated Stories\r\nThis Moisturizing Cream Is Like a Humidifier for Your Body (and It’s Been Saving My Skin This Winter)\r\nThis Moisturizing Cream Is Like a Humidifier for Your Body (and It’s...\r\n\r\nA Tube of Weleda's Skin Food Body Cream Sells Every 5 Seconds—And It Now Comes in Facial-Care Form\r\nA Tube of Weleda's Skin Food Body Cream Sells Every 5 Seconds—And...\r\n\r\nThe Skin On My Body Gets *So* Much Drier Now That I’m In My 40s, but This $19 'Age Embrace' Duo Keeps It Soft and Smooth\r\nThe Skin On My Body Gets *So* Much Drier Now That I’m...\r\n\r\nIn just eight weeks, the cream is clinically proven to make skin look and feel 40 percent firmer thanks to ingredients such as caffeine, known to tighten and brighten skin, and Algaktive Uplift Technology, derived from an antioxidant-rich algae.\r\n\r\nPart of the cream’s (literal) magic is it delivers certain results really quickly. “Magic Body Cream boosts hydration in just 28 seconds thanks to hyaluronic acid to effectively deliver water to the skin and instantly hydrate it, whilst the shea butter and oils in the formula act as smoothing emollients that help to soften the feel of skin to lock in that hydration,” says Sofia.\r\n\r\nThe cream’s delivery of immediate benefits—nearly all testers agreed it instantly shaped the appearance of body contours—made it a celebrity staple even before the official release. “We’ve been using it on every runway and red carpet in secret for months from Paris Fashion Week to the Golden Globes and all our celebrity clients, from Lily James to Michaela Jaé Rodriguez, are obsessed,” says Tilbury. (Just days after launch, the cream was sported by celebs on the Oscars’ red carpet as well.)	1	charlotte-tilbury-magic-body-cream	blog-images/stockey.jpg	\N	\N	2023-03-30 16:43:40+00	2023-03-30 16:44:54.259761+00	t	t	f	1	1	1	3
5	Found: A $12 Retinol Body Lotion That Firms Skin Just as Well as Its Luxury Counterparts	Though most of us have entire regimens dedicated to caring for our faces, our bodies don't seem to get the same sort of attention. A quick wash and (hopefully) a layer of lotion are typically all they're ever treated to, despite the fact that 90 percent of our skin is located below our necks. Thankfully, giving your body a full routine of its own doesn't require adding a zillion extra products—all you need is a $12 bottle of Gold Bond Age Renew Retinol Overnight Body & Face Lotion.\r\n\r\nGold Bond Age Renew Retinol Overnight Body & Face Lotion — $12.00\r\nShop now\r\n\r\nAs someone who has no less than a dozen different body lotions, creams, and oils in her bathroom at any given time (many of which are capital "L" luxury), this has become the only product I reach for to finish off my p.m. shower. Like any good lotion, it hydrates the skin, but it goes above and beyond to deliver an entire anti-aging regimen in a single step. To do this, it combines two of the most-potent, skin-firming ingredients money can buy—retinol and peptides—with nourishing butters like shea and jojoba.\r\n\r\nRetinol, which has become a buzzy ingredient in body care of late, works by stimulating cellular turnover to bring fresh, healthy cells to the surface of your skin to replace dead, dull ones. "Retinol body cream can help improve the evenness of the skin’s texture and soften the skin while also reducing the appearance of fine lines," David Petrillo, a cosmetic chemist and founder of Perfect Image, a beauty and skin-care company, previously told Well+Good. In addition to smoothing out discoloration and texture, it's also got powerful acne-fighting abilities, which makes it an A+ pick for anyone trying to get rid of rogue zits on their back, chest, and butt (#itme).\r\nRelated Stories\r\nThe Skin On My Body Gets *So* Much Drier Now That I’m In My 40s, but This $19 'Age Embrace' Duo Keeps It Soft and Smooth\r\nThe Skin On My Body Gets *So* Much Drier Now That I’m...\r\n\r\nThis Fine-Line-Fading Serum Contains an Antioxidant You Naturally Produce Less of as You Age\r\nThis Fine-Line-Fading Serum Contains an Antioxidant You Naturally Produce Less of as...\r\n\r\nThe Star Ingredient in This 'Resurrection' Cream Boosts Collagen and Firms Skin Overnight—And It's 25% Off\r\nThe Star Ingredient in This 'Resurrection' Cream Boosts Collagen and Firms Skin...\r\n\r\nFor their part, peptides work by ramping up your body's natural production of collagen to diminish the appearance of fine lines and wrinkles, leaving skin plump and supple. "As we age, our body’s collagen starts to degrade and becomes less dense under our skin," board-certified dermatologist Shirley Chi, MD, previously told Well+Good. "This process is worsened by sun exposure, as ultraviolet radiation from the sun causes collagen to break down faster. We can see the signs in fine lines and wrinkles on our skin, the puckering of skin around our elbows and knees, and the crepe-like texture of our arms, legs, and torsos. With regular use, collagen-stimulating body lotions can increase the level of collagen in your dermis and minimize fine lines and crepey skin."\r\n\r\nAs someone who doesn't love applying body lotion (it's always so sticky and greasy!), what initially got me on board with this particular product was its texture. It's got the heft of an occlusive balm (think: Vaseline) with the slip of a traditional lotion, and glides beautifully onto my skin. It's thick, but not goopy, and melts so quickly into the skin that I sometimes have to remind myself that I've already applied. All's to say: It feels a whole lot more luxe than its drugstore price tag implies, and delivers the type of results you'd expect from something triple the cost.\r\n\r\nAnd in case the draw of $12 for a skin-firming body lotion wasn't enough to convince you to add this stuff to your cart, it comes with the added bonus of being gentle enough to use on your face. Talk about bang for your buck! I have yet to try it on my own visage (I'm a prescription-grade girlie), but plenty of others have sung its praises on that front.\r\n\r\n"I bought this and all it took was three days to firm and help diminish wrinkles. I will be 70 next month, [and] my 47-year-old daughter complimented me how firm and healthy my face looked. I have never gotten that from her before!" writes one reviewer. "I saw a definite difference in my skin within a week of using this! I tested this product on my face and the deep wrinkles I have in my neck. I thought the results were great after six days of use!" shares another. Hard to argue with that.	1	acne-care	blog-images/gold-bond-retinol.jpg	\N	\N	2023-03-30 16:34:05+00	2023-03-30 16:47:15.510599+00	t	t	f	1	1	1	4
\.


--
-- Data for Name: blog_posts_paragraphs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_posts_paragraphs (id, blogpost_id, blogparagraph_id) FROM stdin;
\.


--
-- Data for Name: blog_posts_post_images; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_posts_post_images (id, blogpost_id, blogpostimage_id) FROM stdin;
\.


--
-- Data for Name: blog_reply; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_reply (id, created_at, updated_at, reply_text, author_id, comment_id_id) FROM stdin;
\.


--
-- Data for Name: blog_topic; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_topic (id, topic_name, topic_slug, category_id) FROM stdin;
1	HEALTHY DRINKS	healthy-drinks	2
3	BODY CARE	body-care	1
4	ACNE CARE	acne-care	1
2	PLANT BASED	plant-based	2
\.


--
-- Data for Name: blog_topicfeaturedpost; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_topicfeaturedpost (id, featured_topic_id, post_id) FROM stdin;
\.


--
-- Data for Name: contact_us; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.contact_us (id, title, content, created_at, updated_at, author_id) FROM stdin;
1	Contact Us		2023-03-31 10:31:14+00	2023-03-31 10:36:29.550976+00	1
\.


--
-- Data for Name: contact_us_paragraphs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.contact_us_paragraphs (id, contactus_id, paragraph_id) FROM stdin;
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2023-03-30 16:16:00.404003+00	1	SKIN CARE TIPS	1	[{"added": {}}]	21	1
2	2023-03-30 16:16:18.123552+00	1	HEALTHY DRINKS	1	[{"added": {}}]	23	1
3	2023-03-30 16:16:52.361234+00	1	Take This Buzzy Coffee Quiz To Figure Out the Best Roast, Bean, and Brew Method for Your Palate	1	[{"added": {}}, {"added": {"name": "blog paragraph", "object": "I tried taking the coffee quiz\\u2014here's what I learned"}}]	19	1
4	2023-03-30 16:19:00.702203+00	2	FOOD AND NUTRITION	1	[{"added": {}}]	21	1
5	2023-03-30 16:19:34.476138+00	2	I’m an RD, and Here’s How Your Gut Health Impacts Your Energy Levels—Plus How To Boost Both	1	[{"added": {}}, {"added": {"name": "blog paragraph", "object": "How your gut health and energy levels are linked"}}]	19	1
6	2023-03-30 16:20:04.194186+00	1	HEALTHY DRINKS	2	[{"changed": {"fields": ["Category"]}}]	23	1
7	2023-03-30 16:20:50.206042+00	1	Take This Buzzy Coffee Quiz To Figure Out the Best Roast, Bean, and Brew Method for Your Palate	2	[{"changed": {"fields": ["Category"]}}]	19	1
8	2023-03-30 16:27:50.737218+00	2	PLANT BASED	1	[{"added": {}}]	23	1
9	2023-03-30 16:27:54.389182+00	3	Is Your Water Filter Doing More Harm Than Good? Here’s How To Safeguard Your Drinking Water	1	[{"added": {}}, {"added": {"name": "blog paragraph", "object": "How well do water filters actually clean water?"}}]	19	1
10	2023-03-30 16:30:52.944083+00	4	This Skin-Firming Serum Is So Powerful, My Mom Asked if I Got Filler 2 Days After I Started Using It	1	[{"added": {}}, {"added": {"name": "blog paragraph", "object": "The formula"}}]	19	1
11	2023-03-30 16:36:12.167118+00	3	ACNE CARE	1	[{"added": {}}]	23	1
12	2023-03-30 16:36:16.880348+00	5	Found: A $12 Retinol Body Lotion That Firms Skin Just as Well as Its Luxury Counterparts	1	[{"added": {}}]	19	1
13	2023-03-30 16:38:35.535652+00	6	One 65-Year-Old Shopper Calls This Derm-Approved Moisturizer the ‘Dream Cream for Mature Skin’—And t	1	[{"added": {}}]	19	1
14	2023-03-30 16:39:07.467017+00	6	One 65-Year-Old Shopper Calls This Derm-Approved Moisturizer the ‘Dream Cream for Mature Skin’—And t	2	[{"changed": {"fields": ["Featured posts"]}}]	19	1
15	2023-03-30 16:42:30.444207+00	7	Meet The Skin-Care Pros Working Behind the Scenes To Ensure Not All Celebrity Beauty Brands Are B.S.	1	[{"added": {}}, {"added": {"name": "blog paragraph", "object": "Getting into the celeb skin-care machine"}}]	19	1
16	2023-03-30 16:44:54.263883+00	8	A Jar of this ‘Magic’ Cream Sells Every Minute—Here’s What Happened When I Tried the New, Firming Bo	1	[{"added": {}}]	19	1
17	2023-03-30 16:46:07.915252+00	3	BODY CARE	2	[{"changed": {"fields": ["Topic name", "Topic slug"]}}]	23	1
18	2023-03-30 16:46:48.911322+00	4	ACNE CARE	1	[{"added": {}}]	23	1
19	2023-03-30 16:46:51.002887+00	5	Found: A $12 Retinol Body Lotion That Firms Skin Just as Well as Its Luxury Counterparts	2	[{"changed": {"fields": ["Topic"]}}]	19	1
20	2023-03-30 16:47:15.513362+00	5	Found: A $12 Retinol Body Lotion That Firms Skin Just as Well as Its Luxury Counterparts	2	[{"changed": {"fields": ["Featured posts"]}}]	19	1
21	2023-03-30 17:55:00.64719+00	1	FollowUs object (1)	1	[{"added": {}}]	30	1
22	2023-03-30 17:55:07.039256+00	1	PageTemplate object (1)	1	[{"added": {}}]	31	1
23	2023-03-30 18:20:36.70133+00	1	FollowUs object (1)	2	[{"changed": {"fields": ["Facebook link", "Twitter link", "Instagram link", "Youtube link", "Pinterest link"]}}]	30	1
24	2023-03-30 18:20:39.897262+00	1	PageTemplate object (1)	2	[]	31	1
25	2023-03-30 18:31:51.296005+00	1	PageTemplate object (1)	2	[]	31	1
26	2023-03-30 19:19:33.4211+00	2	PLANT BASED	2	[]	23	1
27	2023-03-31 10:34:56.45156+00	1	Contact Us	1	[{"added": {}}, {"added": {"name": "paragraph", "object": "Looking to advertise?"}}, {"added": {"name": "paragraph", "object": "Are you a publicist looking for coverage of your product or client?"}}, {"added": {"name": "paragraph", "object": "Are you a journalist or a writer who wants to contribute to Well+Good?"}}, {"added": {"name": "paragraph", "object": "Do you have a media request?"}}, {"added": {"name": "paragraph", "object": "Do you have a question regarding your subscription to a Well+Good newsletter?"}}, {"added": {"name": "paragraph", "object": "Are you looking to license or reuse content published by Well+Good?"}}, {"added": {"name": "paragraph", "object": "Due to the COVID-19 pandemic, we are not currently accepting unsolicited packages by mail."}}]	11	1
28	2023-03-31 10:36:29.553403+00	1	Contact Us	2	[]	11	1
29	2023-03-31 10:38:26.400197+00	1	StepByStepGuide object (1)	1	[{"added": {}}]	14	1
30	2023-03-31 10:38:31.928256+00	1	StepByStepGuide object (1)	2	[]	14	1
31	2023-03-31 10:39:09.743323+00	2	StepByStepGuide object (2)	1	[{"added": {}}]	14	1
32	2023-03-31 10:39:41.676343+00	3	StepByStepGuide object (3)	1	[{"added": {}}]	14	1
33	2023-03-31 10:40:32.182961+00	4	StepByStepGuide object (4)	1	[{"added": {}}]	14	1
34	2023-03-31 10:41:26.135838+00	5	StepByStepGuide object (5)	1	[{"added": {}}]	14	1
35	2023-03-31 10:41:58.613767+00	6	StepByStepGuide object (6)	1	[{"added": {}}]	14	1
36	2023-03-31 10:42:27.524447+00	7	StepByStepGuide object (7)	1	[{"added": {}}]	14	1
37	2023-03-31 10:43:06.414572+00	8	StepByStepGuide object (8)	1	[{"added": {}}]	14	1
38	2023-03-31 10:48:56.003176+00	1	Advertise With Well+Good	1	[{"added": {}}]	10	1
39	2023-03-31 10:53:10.514615+00	1	Advertise With Well+Good	2	[]	10	1
40	2023-03-31 11:17:43.725884+00	8	Last Updated: March 13, 2023	1	[{"added": {}}]	12	1
41	2023-03-31 11:17:51.791903+00	1	PRIVACY NOTICE	1	[{"added": {}}]	13	1
42	2023-03-31 11:22:40.858039+00	9	Advertise	1	[{"added": {}}]	12	1
43	2023-03-31 11:22:43.704084+00	1	Advertise With Well+Good	2	[{"changed": {"fields": ["Paragraphs advertise well good"]}}]	10	1
44	2023-04-05 15:30:23.974074+00	9	Advertise	3		12	1
45	2023-04-05 15:30:23.98275+00	8	Last Updated: March 13, 2023	3		12	1
46	2023-04-05 15:32:09.220293+00	1	Advertise With Well+Good	2	[{"changed": {"fields": ["Content"]}}]	10	1
47	2023-04-05 15:42:09.704778+00	10	Don’t forget to include:	1	[{"added": {}}]	12	1
48	2023-04-05 15:43:05.076507+00	1	Advertise With Well+Good	2	[{"changed": {"fields": ["Paragraphs advertise well good"]}}]	10	1
49	2023-04-05 16:15:58.676273+00	11	Last Updated: March 13, 2023	1	[{"added": {}}]	12	1
50	2023-04-05 16:16:09.843043+00	1	PRIVACY NOTICE	2	[{"changed": {"fields": ["Paragraphs privacy policy"]}}]	13	1
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	contenttypes	contenttype
5	sessions	session
6	silk	profile
7	silk	request
8	silk	response
9	silk	sqlquery
10	ContactUs	advertisewithwellplusgood
11	ContactUs	contactus
12	ContactUs	paragraph
13	ContactUs	privacypolicy
14	ContactUs	stepbystepguide
15	UserProfile	role
16	UserProfile	userprofile
17	UserManagement	user
18	blog	blogparagraph
19	blog	blogpost
20	blog	blogpostimage
21	blog	category
22	blog	comment
23	blog	topic
24	blog	topicfeaturedpost
25	blog	reply
26	blog	blogstepbystepguide
27	legal	termsandconditions
28	legal	clause
29	legal	useragreement
30	PageTemplate	followus
31	PageTemplate	pagetemplate
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	UserManagement	0001_initial	2023-03-30 16:09:16.700805+00
2	UserProfile	0001_initial	2023-03-30 16:09:19.611245+00
3	blog	0001_initial	2023-03-30 16:09:22.745656+00
4	ContactUs	0001_initial	2023-03-30 16:09:26.15874+00
5	contenttypes	0001_initial	2023-03-30 16:09:29.455498+00
6	admin	0001_initial	2023-03-30 16:09:29.50612+00
7	admin	0002_logentry_remove_auto_add	2023-03-30 16:09:29.52856+00
8	admin	0003_logentry_add_action_flag_choices	2023-03-30 16:09:29.553661+00
9	contenttypes	0002_remove_content_type_name	2023-03-30 16:09:29.602715+00
10	auth	0001_initial	2023-03-30 16:09:29.732006+00
11	auth	0002_alter_permission_name_max_length	2023-03-30 16:09:29.766298+00
12	auth	0003_alter_user_email_max_length	2023-03-30 16:09:29.776977+00
13	auth	0004_alter_user_username_opts	2023-03-30 16:09:29.790556+00
14	auth	0005_alter_user_last_login_null	2023-03-30 16:09:29.803655+00
15	auth	0006_require_contenttypes_0002	2023-03-30 16:09:29.811222+00
16	auth	0007_alter_validators_add_error_messages	2023-03-30 16:09:29.824456+00
17	auth	0008_alter_user_username_max_length	2023-03-30 16:09:29.835492+00
18	auth	0009_alter_user_last_name_max_length	2023-03-30 16:09:29.852981+00
19	auth	0010_alter_group_name_max_length	2023-03-30 16:09:29.892448+00
20	auth	0011_update_proxy_permissions	2023-03-30 16:09:29.935639+00
21	auth	0012_alter_user_first_name_max_length	2023-03-30 16:09:29.952954+00
22	sessions	0001_initial	2023-03-30 16:09:29.979242+00
23	silk	0001_initial	2023-03-30 16:09:30.129154+00
24	silk	0002_auto_update_uuid4_id_field	2023-03-30 16:09:30.143815+00
25	silk	0003_request_prof_file	2023-03-30 16:09:30.15789+00
26	silk	0004_request_prof_file_storage	2023-03-30 16:09:30.172675+00
27	silk	0005_increase_request_prof_file_length	2023-03-30 16:09:30.185965+00
28	silk	0006_fix_request_prof_file_blank	2023-03-30 16:09:30.198884+00
29	silk	0007_sqlquery_identifier	2023-03-30 16:09:30.213578+00
30	silk	0008_sqlquery_analysis	2023-03-30 16:09:30.225398+00
31	PageTemplate	0001_initial	2023-03-30 17:47:34.607517+00
32	PageTemplate	0002_alter_followus_facebook_link_and_more	2023-03-30 18:19:23.655432+00
33	ContactUs	0002_alter_advertisewithwellplusgood_options	2023-03-31 11:24:36.131285+00
34	ContactUs	0003_alter_privacypolicy_options	2023-03-31 11:25:22.020053+00
35	ContactUs	0004_alter_privacypolicy_options	2023-03-31 11:26:16.613046+00
36	ContactUs	0005_alter_contactus_author_alter_contactus_paragraphs_and_more	2023-03-31 12:28:13.744636+00
37	ContactUs	0006_alter_privacypolicy_author_privacy_policy_and_more	2023-04-05 16:29:51.958207+00
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
lfhorgc6c89ly0nb0737iity0gfgxvkv	.eJxVjDsOwjAQBe_iGlm2418o6XMGa7274ACypTipEHeHSCmgfTPzXiLBtpa0dV7STOIstDj9bhnwwXUHdId6axJbXZc5y12RB-1yasTPy-H-HRTo5VtfYfSonfHBKgNoPGRtwAfkUYXBDDEGx8oiKPIYLCFC5OiICKJDsOL9AdcKOCk:1phuv7:VDEhP1yvdhFIaFbnbw6bF-shFpinQmf1AQ8zGqt8IW4	2023-04-13 16:14:37.814913+00
\.


--
-- Data for Name: silk_profile; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.silk_profile (id, name, start_time, end_time, time_taken, file_path, line_num, end_line_num, func_name, exception_raised, dynamic, request_id) FROM stdin;
\.


--
-- Data for Name: silk_profile_queries; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.silk_profile_queries (id, profile_id, sqlquery_id) FROM stdin;
\.


--
-- Data for Name: silk_request; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.silk_request (id, path, query_params, raw_body, body, method, start_time, view_name, end_time, time_taken, encoded_headers, meta_time, meta_num_queries, meta_time_spent_queries, pyprofile, num_sql_queries, prof_file) FROM stdin;
\.


--
-- Data for Name: silk_response; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.silk_response (id, status_code, raw_body, body, encoded_headers, request_id) FROM stdin;
\.


--
-- Data for Name: silk_sqlquery; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.silk_sqlquery (id, query, start_time, end_time, time_taken, traceback, request_id, identifier, analysis) FROM stdin;
\.


--
-- Data for Name: step_by_step_guides; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.step_by_step_guides (id, list_style, sbs_guide_number, sbs_image, sub_heading, sub_content, sbs_index, blog_paragraphs_id, blog_post_id, sbs_self_refer_id) FROM stdin;
\.


--
-- Data for Name: step_by_step_guides_contact_us_specific; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.step_by_step_guides_contact_us_specific (id, list_style, sbs_guide_number, sub_heading, sub_content, sbs_index, blog_paragraphs_id, contact_us_id, privacy_policy_id, sbs_self_refer_id) FROM stdin;
1	simple	\N	Beauty:	Senior Beauty Editor Zoe Weiner (zoe.weiner@wellandgood.com) and/or Senior Commerce Editor Gina Vaynshteyn (gina.vaynshteyn@wellandgood.com)	\N	2	1	\N	\N
2	simple	\N	Fitness:	Senior Fitness Editor Jennifer Heimlick (jennifer.heimlich@wellandgood.com)	\N	2	1	\N	\N
3	simple	\N	Food:	Senior Food Editor Betty Gold (betty.gold@wellandgood.com)	\N	2	1	\N	\N
4	simple	\N	Health:	Senior Health Editor Allison Tsai (allison.tsai@wellandgood.com)	\N	2	1	\N	\N
5	simple	\N	Lifestyle	(including Sex and Relationships, Travel, Personal Finance, Mindfulness): Deputy Editor Alexis Berger (alexis.berger@wellandgood.com)	\N	2	1	\N	\N
6	simple	\N	Any other product or client pitches:	Senior Commerce Editor Gina Vaynshteyn (gina.vaynshteyn@wellandgood.com) or Deputy Editor Samantha Leal (samantha.leal@wellandgood.com)	\N	\N	1	\N	\N
7	simple	\N	Talent for Events:	experiences@wellandgood.com	\N	2	1	\N	\N
8	simple	\N	Talent for Video:	video@wellandgood.com	\N	2	1	\N	\N
\.


--
-- Name: Advertise-with-well-plus-good_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."Advertise-with-well-plus-good_id_seq"', 1, true);


--
-- Name: Advertise-with-well-plus-good_paragraphs_advertise_well__id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."Advertise-with-well-plus-good_paragraphs_advertise_well__id_seq"', 3, true);


--
-- Name: ContactUs_paragraph_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."ContactUs_paragraph_id_seq"', 11, true);


--
-- Name: ContactUs_paragraph_step_by_step_guide_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."ContactUs_paragraph_step_by_step_guide_id_seq"', 1, false);


--
-- Name: PageTemplate_followus_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."PageTemplate_followus_id_seq"', 1, true);


--
-- Name: PageTemplate_pagetemplate_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."PageTemplate_pagetemplate_id_seq"', 1, true);


--
-- Name: PrivacyPolicy_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."PrivacyPolicy_id_seq"', 1, true);


--
-- Name: PrivacyPolicy_paragraphs_privacy_policy_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."PrivacyPolicy_paragraphs_privacy_policy_id_seq"', 3, true);


--
-- Name: UserManagement_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."UserManagement_user_id_seq"', 1, true);


--
-- Name: UserProfile_role_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."UserProfile_role_id_seq"', 1, false);


--
-- Name: UserProfile_userprofile_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."UserProfile_userprofile_id_seq"', 1, true);


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 124, true);


--
-- Name: blog_blogparagraph_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_blogparagraph_id_seq', 5, true);


--
-- Name: blog_blogparagraph_step_by_step_guide_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_blogparagraph_step_by_step_guide_id_seq', 1, false);


--
-- Name: blog_blogpostimage_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_blogpostimage_id_seq', 1, false);


--
-- Name: blog_category_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_category_id_seq', 2, true);


--
-- Name: blog_comment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_comment_id_seq', 1, false);


--
-- Name: blog_posts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_posts_id_seq', 8, true);


--
-- Name: blog_posts_paragraphs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_posts_paragraphs_id_seq', 1, false);


--
-- Name: blog_posts_post_images_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_posts_post_images_id_seq', 1, false);


--
-- Name: blog_reply_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_reply_id_seq', 1, false);


--
-- Name: blog_topic_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_topic_id_seq', 4, true);


--
-- Name: blog_topicfeaturedpost_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_topicfeaturedpost_id_seq', 1, false);


--
-- Name: contact_us_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.contact_us_id_seq', 1, true);


--
-- Name: contact_us_paragraphs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.contact_us_paragraphs_id_seq', 1, false);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 50, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 31, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 37, true);


--
-- Name: silk_profile_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.silk_profile_id_seq', 1, false);


--
-- Name: silk_profile_queries_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.silk_profile_queries_id_seq', 1, false);


--
-- Name: silk_sqlquery_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.silk_sqlquery_id_seq', 1, false);


--
-- Name: step_by_step_guides_contact_us_specific_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.step_by_step_guides_contact_us_specific_id_seq', 8, true);


--
-- Name: step_by_step_guides_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.step_by_step_guides_id_seq', 1, false);


--
-- Name: Advertise-with-well-plus-good_paragraphs_advertise_well_good Advertise-with-well-plus-good_paragraphs_advertise_well_go_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Advertise-with-well-plus-good_paragraphs_advertise_well_good"
    ADD CONSTRAINT "Advertise-with-well-plus-good_paragraphs_advertise_well_go_pkey" PRIMARY KEY (id);


--
-- Name: Advertise-with-well-plus-good Advertise-with-well-plus-good_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Advertise-with-well-plus-good"
    ADD CONSTRAINT "Advertise-with-well-plus-good_pkey" PRIMARY KEY (id);


--
-- Name: Advertise-with-well-plus-good_paragraphs_advertise_well_good Advertise-with-well-plus_advertisewithwellplusgoo_0035f0f5_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Advertise-with-well-plus-good_paragraphs_advertise_well_good"
    ADD CONSTRAINT "Advertise-with-well-plus_advertisewithwellplusgoo_0035f0f5_uniq" UNIQUE (advertisewithwellplusgood_id, paragraph_id);


--
-- Name: ContactUs_paragraph ContactUs_paragraph_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ContactUs_paragraph"
    ADD CONSTRAINT "ContactUs_paragraph_pkey" PRIMARY KEY (id);


--
-- Name: ContactUs_paragraph_step_by_step_guide ContactUs_paragraph_step_by_step_guide_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ContactUs_paragraph_step_by_step_guide"
    ADD CONSTRAINT "ContactUs_paragraph_step_by_step_guide_pkey" PRIMARY KEY (id);


--
-- Name: ContactUs_paragraph_step_by_step_guide ContactUs_paragraph_step_paragraph_id_stepbystepg_316b4871_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ContactUs_paragraph_step_by_step_guide"
    ADD CONSTRAINT "ContactUs_paragraph_step_paragraph_id_stepbystepg_316b4871_uniq" UNIQUE (paragraph_id, stepbystepguide_id);


--
-- Name: PageTemplate_followus PageTemplate_followus_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."PageTemplate_followus"
    ADD CONSTRAINT "PageTemplate_followus_pkey" PRIMARY KEY (id);


--
-- Name: PageTemplate_pagetemplate PageTemplate_pagetemplate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."PageTemplate_pagetemplate"
    ADD CONSTRAINT "PageTemplate_pagetemplate_pkey" PRIMARY KEY (id);


--
-- Name: PrivacyPolicy_paragraphs_privacy_policy PrivacyPolicy_paragraphs_privacy_policy_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."PrivacyPolicy_paragraphs_privacy_policy"
    ADD CONSTRAINT "PrivacyPolicy_paragraphs_privacy_policy_pkey" PRIMARY KEY (id);


--
-- Name: PrivacyPolicy_paragraphs_privacy_policy PrivacyPolicy_paragraphs_privacypolicy_id_paragra_012f2caa_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."PrivacyPolicy_paragraphs_privacy_policy"
    ADD CONSTRAINT "PrivacyPolicy_paragraphs_privacypolicy_id_paragra_012f2caa_uniq" UNIQUE (privacypolicy_id, paragraph_id);


--
-- Name: PrivacyPolicy PrivacyPolicy_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."PrivacyPolicy"
    ADD CONSTRAINT "PrivacyPolicy_pkey" PRIMARY KEY (id);


--
-- Name: UserManagement_user UserManagement_user_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserManagement_user"
    ADD CONSTRAINT "UserManagement_user_email_key" UNIQUE (email);


--
-- Name: UserManagement_user UserManagement_user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserManagement_user"
    ADD CONSTRAINT "UserManagement_user_pkey" PRIMARY KEY (id);


--
-- Name: UserManagement_user UserManagement_user_user_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserManagement_user"
    ADD CONSTRAINT "UserManagement_user_user_slug_key" UNIQUE (user_slug);


--
-- Name: UserProfile_role UserProfile_role_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserProfile_role"
    ADD CONSTRAINT "UserProfile_role_pkey" PRIMARY KEY (id);


--
-- Name: UserProfile_userprofile UserProfile_userprofile_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserProfile_userprofile"
    ADD CONSTRAINT "UserProfile_userprofile_email_key" UNIQUE (email);


--
-- Name: UserProfile_userprofile UserProfile_userprofile_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserProfile_userprofile"
    ADD CONSTRAINT "UserProfile_userprofile_pkey" PRIMARY KEY (id);


--
-- Name: UserProfile_userprofile UserProfile_userprofile_role_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserProfile_userprofile"
    ADD CONSTRAINT "UserProfile_userprofile_role_id_key" UNIQUE (role_id);


--
-- Name: UserProfile_userprofile UserProfile_userprofile_user_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserProfile_userprofile"
    ADD CONSTRAINT "UserProfile_userprofile_user_slug_key" UNIQUE (user_slug);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: blog_blogparagraph blog_blogparagraph_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_blogparagraph
    ADD CONSTRAINT blog_blogparagraph_pkey PRIMARY KEY (id);


--
-- Name: blog_blogparagraph_step_by_step_guide blog_blogparagraph_step__blogparagraph_id_blogste_a1c9acad_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_blogparagraph_step_by_step_guide
    ADD CONSTRAINT blog_blogparagraph_step__blogparagraph_id_blogste_a1c9acad_uniq UNIQUE (blogparagraph_id, blogstepbystepguide_id);


--
-- Name: blog_blogparagraph_step_by_step_guide blog_blogparagraph_step_by_step_guide_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_blogparagraph_step_by_step_guide
    ADD CONSTRAINT blog_blogparagraph_step_by_step_guide_pkey PRIMARY KEY (id);


--
-- Name: blog_blogpostimage blog_blogpostimage_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_blogpostimage
    ADD CONSTRAINT blog_blogpostimage_pkey PRIMARY KEY (id);


--
-- Name: blog_category blog_category_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_category
    ADD CONSTRAINT blog_category_pkey PRIMARY KEY (id);


--
-- Name: blog_comment blog_comment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_comment
    ADD CONSTRAINT blog_comment_pkey PRIMARY KEY (id);


--
-- Name: blog_posts_paragraphs blog_posts_paragraphs_blogpost_id_blogparagrap_293720d1_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts_paragraphs
    ADD CONSTRAINT blog_posts_paragraphs_blogpost_id_blogparagrap_293720d1_uniq UNIQUE (blogpost_id, blogparagraph_id);


--
-- Name: blog_posts_paragraphs blog_posts_paragraphs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts_paragraphs
    ADD CONSTRAINT blog_posts_paragraphs_pkey PRIMARY KEY (id);


--
-- Name: blog_posts blog_posts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts
    ADD CONSTRAINT blog_posts_pkey PRIMARY KEY (id);


--
-- Name: blog_posts_post_images blog_posts_post_images_blogpost_id_blogpostimag_ee4f6bc8_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts_post_images
    ADD CONSTRAINT blog_posts_post_images_blogpost_id_blogpostimag_ee4f6bc8_uniq UNIQUE (blogpost_id, blogpostimage_id);


--
-- Name: blog_posts_post_images blog_posts_post_images_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts_post_images
    ADD CONSTRAINT blog_posts_post_images_pkey PRIMARY KEY (id);


--
-- Name: blog_posts blog_posts_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts
    ADD CONSTRAINT blog_posts_slug_key UNIQUE (slug);


--
-- Name: blog_reply blog_reply_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_reply
    ADD CONSTRAINT blog_reply_pkey PRIMARY KEY (id);


--
-- Name: blog_topic blog_topic_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_topic
    ADD CONSTRAINT blog_topic_pkey PRIMARY KEY (id);


--
-- Name: blog_topicfeaturedpost blog_topicfeaturedpost_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_topicfeaturedpost
    ADD CONSTRAINT blog_topicfeaturedpost_pkey PRIMARY KEY (id);


--
-- Name: contact_us_paragraphs contact_us_paragraphs_contactus_id_paragraph_id_9871ed5d_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_us_paragraphs
    ADD CONSTRAINT contact_us_paragraphs_contactus_id_paragraph_id_9871ed5d_uniq UNIQUE (contactus_id, paragraph_id);


--
-- Name: contact_us_paragraphs contact_us_paragraphs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_us_paragraphs
    ADD CONSTRAINT contact_us_paragraphs_pkey PRIMARY KEY (id);


--
-- Name: contact_us contact_us_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_us
    ADD CONSTRAINT contact_us_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: silk_profile silk_profile_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_profile
    ADD CONSTRAINT silk_profile_pkey PRIMARY KEY (id);


--
-- Name: silk_profile_queries silk_profile_queries_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_profile_queries
    ADD CONSTRAINT silk_profile_queries_pkey PRIMARY KEY (id);


--
-- Name: silk_profile_queries silk_profile_queries_profile_id_sqlquery_id_b2403d9b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_profile_queries
    ADD CONSTRAINT silk_profile_queries_profile_id_sqlquery_id_b2403d9b_uniq UNIQUE (profile_id, sqlquery_id);


--
-- Name: silk_request silk_request_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_request
    ADD CONSTRAINT silk_request_pkey PRIMARY KEY (id);


--
-- Name: silk_response silk_response_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_response
    ADD CONSTRAINT silk_response_pkey PRIMARY KEY (id);


--
-- Name: silk_response silk_response_request_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_response
    ADD CONSTRAINT silk_response_request_id_key UNIQUE (request_id);


--
-- Name: silk_sqlquery silk_sqlquery_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_sqlquery
    ADD CONSTRAINT silk_sqlquery_pkey PRIMARY KEY (id);


--
-- Name: step_by_step_guides_contact_us_specific step_by_step_guides_contact_us_specific_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.step_by_step_guides_contact_us_specific
    ADD CONSTRAINT step_by_step_guides_contact_us_specific_pkey PRIMARY KEY (id);


--
-- Name: step_by_step_guides step_by_step_guides_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.step_by_step_guides
    ADD CONSTRAINT step_by_step_guides_pkey PRIMARY KEY (id);


--
-- Name: Advertise-with-well-plus-g_advertisewithwellplusgood__acb0181f; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "Advertise-with-well-plus-g_advertisewithwellplusgood__acb0181f" ON public."Advertise-with-well-plus-good_paragraphs_advertise_well_good" USING btree (advertisewithwellplusgood_id);


--
-- Name: Advertise-with-well-plus-g_author_advertise_well_good_1d6b4089; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "Advertise-with-well-plus-g_author_advertise_well_good_1d6b4089" ON public."Advertise-with-well-plus-good" USING btree (author_advertise_well_good_id);


--
-- Name: Advertise-with-well-plus-g_paragraph_id_b73260b6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "Advertise-with-well-plus-g_paragraph_id_b73260b6" ON public."Advertise-with-well-plus-good_paragraphs_advertise_well_good" USING btree (paragraph_id);


--
-- Name: ContactUs_paragraph_advertise_with_us_id_831f2a83; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "ContactUs_paragraph_advertise_with_us_id_831f2a83" ON public."ContactUs_paragraph" USING btree (advertise_with_us_id);


--
-- Name: ContactUs_paragraph_contact_us_id_ebbe2d78; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "ContactUs_paragraph_contact_us_id_ebbe2d78" ON public."ContactUs_paragraph" USING btree (contact_us_id);


--
-- Name: ContactUs_paragraph_step_b_stepbystepguide_id_58b10e85; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "ContactUs_paragraph_step_b_stepbystepguide_id_58b10e85" ON public."ContactUs_paragraph_step_by_step_guide" USING btree (stepbystepguide_id);


--
-- Name: ContactUs_paragraph_step_by_step_guide_paragraph_id_311e4cfa; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "ContactUs_paragraph_step_by_step_guide_paragraph_id_311e4cfa" ON public."ContactUs_paragraph_step_by_step_guide" USING btree (paragraph_id);


--
-- Name: PageTemplate_pagetemplate_follow_us_id_4dc7597a; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "PageTemplate_pagetemplate_follow_us_id_4dc7597a" ON public."PageTemplate_pagetemplate" USING btree (follow_us_id);


--
-- Name: PrivacyPolicy_author_privacy_policy_id_4095f766; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "PrivacyPolicy_author_privacy_policy_id_4095f766" ON public."PrivacyPolicy" USING btree (author_privacy_policy_id);


--
-- Name: PrivacyPolicy_paragraphs_p_privacypolicy_id_f81daa91; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "PrivacyPolicy_paragraphs_p_privacypolicy_id_f81daa91" ON public."PrivacyPolicy_paragraphs_privacy_policy" USING btree (privacypolicy_id);


--
-- Name: PrivacyPolicy_paragraphs_privacy_policy_paragraph_id_7fc7e3a9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "PrivacyPolicy_paragraphs_privacy_policy_paragraph_id_7fc7e3a9" ON public."PrivacyPolicy_paragraphs_privacy_policy" USING btree (paragraph_id);


--
-- Name: UserManagement_user_email_6674a52f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "UserManagement_user_email_6674a52f_like" ON public."UserManagement_user" USING btree (email varchar_pattern_ops);


--
-- Name: UserManagement_user_user_slug_54903cb1_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "UserManagement_user_user_slug_54903cb1_like" ON public."UserManagement_user" USING btree (user_slug varchar_pattern_ops);


--
-- Name: UserProfile_userprofile_email_9b07eb8b_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "UserProfile_userprofile_email_9b07eb8b_like" ON public."UserProfile_userprofile" USING btree (email varchar_pattern_ops);


--
-- Name: UserProfile_userprofile_user_id_28edbd3a; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "UserProfile_userprofile_user_id_28edbd3a" ON public."UserProfile_userprofile" USING btree (user_id);


--
-- Name: UserProfile_userprofile_user_slug_a2291342_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "UserProfile_userprofile_user_slug_a2291342_like" ON public."UserProfile_userprofile" USING btree (user_slug varchar_pattern_ops);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: blog_blogparagraph_blog_post_id_eeb81534; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_blogparagraph_blog_post_id_eeb81534 ON public.blog_blogparagraph USING btree (blog_post_id);


--
-- Name: blog_blogparagraph_paragraphs_self_refer_id_46301407; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_blogparagraph_paragraphs_self_refer_id_46301407 ON public.blog_blogparagraph USING btree (paragraphs_self_refer_id);


--
-- Name: blog_blogparagraph_step_by_blogstepbystepguide_id_62ef3a47; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_blogparagraph_step_by_blogstepbystepguide_id_62ef3a47 ON public.blog_blogparagraph_step_by_step_guide USING btree (blogstepbystepguide_id);


--
-- Name: blog_blogparagraph_step_by_step_guide_blogparagraph_id_726fe9db; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_blogparagraph_step_by_step_guide_blogparagraph_id_726fe9db ON public.blog_blogparagraph_step_by_step_guide USING btree (blogparagraph_id);


--
-- Name: blog_category_category_slug_c1412d96; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_category_category_slug_c1412d96 ON public.blog_category USING btree (category_slug);


--
-- Name: blog_category_category_slug_c1412d96_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_category_category_slug_c1412d96_like ON public.blog_category USING btree (category_slug varchar_pattern_ops);


--
-- Name: blog_comment_author_id_4f11e2e0; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_comment_author_id_4f11e2e0 ON public.blog_comment USING btree (author_id);


--
-- Name: blog_comment_post_id_580e96ef; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_comment_post_id_580e96ef ON public.blog_comment USING btree (post_id);


--
-- Name: blog_posts_author_id_6f561d00; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_posts_author_id_6f561d00 ON public.blog_posts USING btree (author_id);


--
-- Name: blog_posts_author_profile_id_e8cc67e3; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_posts_author_profile_id_e8cc67e3 ON public.blog_posts USING btree (author_profile_id);


--
-- Name: blog_posts_category_id_4316690d; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_posts_category_id_4316690d ON public.blog_posts USING btree (category_id);


--
-- Name: blog_posts_paragraphs_blogparagraph_id_b41e2b18; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_posts_paragraphs_blogparagraph_id_b41e2b18 ON public.blog_posts_paragraphs USING btree (blogparagraph_id);


--
-- Name: blog_posts_paragraphs_blogpost_id_c2fc2394; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_posts_paragraphs_blogpost_id_c2fc2394 ON public.blog_posts_paragraphs USING btree (blogpost_id);


--
-- Name: blog_posts_post_images_blogpost_id_2c233c46; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_posts_post_images_blogpost_id_2c233c46 ON public.blog_posts_post_images USING btree (blogpost_id);


--
-- Name: blog_posts_post_images_blogpostimage_id_08331e5c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_posts_post_images_blogpostimage_id_08331e5c ON public.blog_posts_post_images USING btree (blogpostimage_id);


--
-- Name: blog_posts_slug_93227477_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_posts_slug_93227477_like ON public.blog_posts USING btree (slug varchar_pattern_ops);


--
-- Name: blog_posts_topic_id_323d72ad; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_posts_topic_id_323d72ad ON public.blog_posts USING btree (topic_id);


--
-- Name: blog_reply_author_id_7641dac7; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_reply_author_id_7641dac7 ON public.blog_reply USING btree (author_id);


--
-- Name: blog_reply_comment_id_id_4d0f35cc; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_reply_comment_id_id_4d0f35cc ON public.blog_reply USING btree (comment_id_id);


--
-- Name: blog_topic_category_id_3818a921; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_topic_category_id_3818a921 ON public.blog_topic USING btree (category_id);


--
-- Name: blog_topic_topic_slug_97dd1583; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_topic_topic_slug_97dd1583 ON public.blog_topic USING btree (topic_slug);


--
-- Name: blog_topic_topic_slug_97dd1583_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_topic_topic_slug_97dd1583_like ON public.blog_topic USING btree (topic_slug varchar_pattern_ops);


--
-- Name: blog_topicfeaturedpost_featured_topic_id_422d9a8c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_topicfeaturedpost_featured_topic_id_422d9a8c ON public.blog_topicfeaturedpost USING btree (featured_topic_id);


--
-- Name: blog_topicfeaturedpost_post_id_990f8c67; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_topicfeaturedpost_post_id_990f8c67 ON public.blog_topicfeaturedpost USING btree (post_id);


--
-- Name: contact_us_author_id_3da91a74; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX contact_us_author_id_3da91a74 ON public.contact_us USING btree (author_id);


--
-- Name: contact_us_paragraphs_contactus_id_9f9cdc14; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX contact_us_paragraphs_contactus_id_9f9cdc14 ON public.contact_us_paragraphs USING btree (contactus_id);


--
-- Name: contact_us_paragraphs_paragraph_id_e28b4597; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX contact_us_paragraphs_paragraph_id_e28b4597 ON public.contact_us_paragraphs USING btree (paragraph_id);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: silk_profile_queries_profile_id_a3d76db8; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_profile_queries_profile_id_a3d76db8 ON public.silk_profile_queries USING btree (profile_id);


--
-- Name: silk_profile_queries_sqlquery_id_155df455; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_profile_queries_sqlquery_id_155df455 ON public.silk_profile_queries USING btree (sqlquery_id);


--
-- Name: silk_profile_request_id_7b81bd69; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_profile_request_id_7b81bd69 ON public.silk_profile USING btree (request_id);


--
-- Name: silk_profile_request_id_7b81bd69_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_profile_request_id_7b81bd69_like ON public.silk_profile USING btree (request_id varchar_pattern_ops);


--
-- Name: silk_request_id_5a356c4f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_request_id_5a356c4f_like ON public.silk_request USING btree (id varchar_pattern_ops);


--
-- Name: silk_request_path_9f3d798e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_request_path_9f3d798e ON public.silk_request USING btree (path);


--
-- Name: silk_request_path_9f3d798e_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_request_path_9f3d798e_like ON public.silk_request USING btree (path varchar_pattern_ops);


--
-- Name: silk_request_start_time_1300bc58; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_request_start_time_1300bc58 ON public.silk_request USING btree (start_time);


--
-- Name: silk_request_view_name_68559f7b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_request_view_name_68559f7b ON public.silk_request USING btree (view_name);


--
-- Name: silk_request_view_name_68559f7b_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_request_view_name_68559f7b_like ON public.silk_request USING btree (view_name varchar_pattern_ops);


--
-- Name: silk_response_id_dda88710_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_response_id_dda88710_like ON public.silk_response USING btree (id varchar_pattern_ops);


--
-- Name: silk_response_request_id_1e8e2776_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_response_request_id_1e8e2776_like ON public.silk_response USING btree (request_id varchar_pattern_ops);


--
-- Name: silk_sqlquery_request_id_6f8f0527; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_sqlquery_request_id_6f8f0527 ON public.silk_sqlquery USING btree (request_id);


--
-- Name: silk_sqlquery_request_id_6f8f0527_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_sqlquery_request_id_6f8f0527_like ON public.silk_sqlquery USING btree (request_id varchar_pattern_ops);


--
-- Name: step_by_step_guides_blog_paragraphs_id_a2568528; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX step_by_step_guides_blog_paragraphs_id_a2568528 ON public.step_by_step_guides USING btree (blog_paragraphs_id);


--
-- Name: step_by_step_guides_blog_post_id_61ddf0a6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX step_by_step_guides_blog_post_id_61ddf0a6 ON public.step_by_step_guides USING btree (blog_post_id);


--
-- Name: step_by_step_guides_contac_blog_paragraphs_id_4aa7b4a8; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX step_by_step_guides_contac_blog_paragraphs_id_4aa7b4a8 ON public.step_by_step_guides_contact_us_specific USING btree (blog_paragraphs_id);


--
-- Name: step_by_step_guides_contac_privacy_policy_id_c604c3c7; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX step_by_step_guides_contac_privacy_policy_id_c604c3c7 ON public.step_by_step_guides_contact_us_specific USING btree (privacy_policy_id);


--
-- Name: step_by_step_guides_contac_sbs_self_refer_id_c988fb55; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX step_by_step_guides_contac_sbs_self_refer_id_c988fb55 ON public.step_by_step_guides_contact_us_specific USING btree (sbs_self_refer_id);


--
-- Name: step_by_step_guides_contact_us_specific_contact_us_id_6e48cae2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX step_by_step_guides_contact_us_specific_contact_us_id_6e48cae2 ON public.step_by_step_guides_contact_us_specific USING btree (contact_us_id);


--
-- Name: step_by_step_guides_sbs_self_refer_id_ce29408e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX step_by_step_guides_sbs_self_refer_id_ce29408e ON public.step_by_step_guides USING btree (sbs_self_refer_id);


--
-- Name: Advertise-with-well-plus-good_paragraphs_advertise_well_good Advertise-with-well-_advertisewithwellplu_acb0181f_fk_Advertise; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Advertise-with-well-plus-good_paragraphs_advertise_well_good"
    ADD CONSTRAINT "Advertise-with-well-_advertisewithwellplu_acb0181f_fk_Advertise" FOREIGN KEY (advertisewithwellplusgood_id) REFERENCES public."Advertise-with-well-plus-good"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: Advertise-with-well-plus-good Advertise-with-well-_author_advertise_wel_1d6b4089_fk_UserManag; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Advertise-with-well-plus-good"
    ADD CONSTRAINT "Advertise-with-well-_author_advertise_wel_1d6b4089_fk_UserManag" FOREIGN KEY (author_advertise_well_good_id) REFERENCES public."UserManagement_user"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: Advertise-with-well-plus-good_paragraphs_advertise_well_good Advertise-with-well-_paragraph_id_b73260b6_fk_ContactUs; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Advertise-with-well-plus-good_paragraphs_advertise_well_good"
    ADD CONSTRAINT "Advertise-with-well-_paragraph_id_b73260b6_fk_ContactUs" FOREIGN KEY (paragraph_id) REFERENCES public."ContactUs_paragraph"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ContactUs_paragraph_step_by_step_guide ContactUs_paragraph__paragraph_id_311e4cfa_fk_ContactUs; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ContactUs_paragraph_step_by_step_guide"
    ADD CONSTRAINT "ContactUs_paragraph__paragraph_id_311e4cfa_fk_ContactUs" FOREIGN KEY (paragraph_id) REFERENCES public."ContactUs_paragraph"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ContactUs_paragraph_step_by_step_guide ContactUs_paragraph__stepbystepguide_id_58b10e85_fk_step_by_s; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ContactUs_paragraph_step_by_step_guide"
    ADD CONSTRAINT "ContactUs_paragraph__stepbystepguide_id_58b10e85_fk_step_by_s" FOREIGN KEY (stepbystepguide_id) REFERENCES public.step_by_step_guides_contact_us_specific(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ContactUs_paragraph ContactUs_paragraph_advertise_with_us_id_831f2a83_fk_Advertise; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ContactUs_paragraph"
    ADD CONSTRAINT "ContactUs_paragraph_advertise_with_us_id_831f2a83_fk_Advertise" FOREIGN KEY (advertise_with_us_id) REFERENCES public."Advertise-with-well-plus-good"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ContactUs_paragraph ContactUs_paragraph_contact_us_id_ebbe2d78_fk_contact_us_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ContactUs_paragraph"
    ADD CONSTRAINT "ContactUs_paragraph_contact_us_id_ebbe2d78_fk_contact_us_id" FOREIGN KEY (contact_us_id) REFERENCES public.contact_us(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: PageTemplate_pagetemplate PageTemplate_pagetem_follow_us_id_4dc7597a_fk_PageTempl; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."PageTemplate_pagetemplate"
    ADD CONSTRAINT "PageTemplate_pagetem_follow_us_id_4dc7597a_fk_PageTempl" FOREIGN KEY (follow_us_id) REFERENCES public."PageTemplate_followus"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: PrivacyPolicy PrivacyPolicy_author_privacy_polic_4095f766_fk_UserManag; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."PrivacyPolicy"
    ADD CONSTRAINT "PrivacyPolicy_author_privacy_polic_4095f766_fk_UserManag" FOREIGN KEY (author_privacy_policy_id) REFERENCES public."UserManagement_user"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: PrivacyPolicy_paragraphs_privacy_policy PrivacyPolicy_paragr_paragraph_id_7fc7e3a9_fk_ContactUs; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."PrivacyPolicy_paragraphs_privacy_policy"
    ADD CONSTRAINT "PrivacyPolicy_paragr_paragraph_id_7fc7e3a9_fk_ContactUs" FOREIGN KEY (paragraph_id) REFERENCES public."ContactUs_paragraph"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: PrivacyPolicy_paragraphs_privacy_policy PrivacyPolicy_paragr_privacypolicy_id_f81daa91_fk_PrivacyPo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."PrivacyPolicy_paragraphs_privacy_policy"
    ADD CONSTRAINT "PrivacyPolicy_paragr_privacypolicy_id_f81daa91_fk_PrivacyPo" FOREIGN KEY (privacypolicy_id) REFERENCES public."PrivacyPolicy"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: UserProfile_userprofile UserProfile_userprof_user_id_28edbd3a_fk_UserManag; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserProfile_userprofile"
    ADD CONSTRAINT "UserProfile_userprof_user_id_28edbd3a_fk_UserManag" FOREIGN KEY (user_id) REFERENCES public."UserManagement_user"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: UserProfile_userprofile UserProfile_userprofile_role_id_78ffcdd4_fk_UserProfile_role_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserProfile_userprofile"
    ADD CONSTRAINT "UserProfile_userprofile_role_id_78ffcdd4_fk_UserProfile_role_id" FOREIGN KEY (role_id) REFERENCES public."UserProfile_role"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_blogparagraph blog_blogparagraph_blog_post_id_eeb81534_fk_blog_posts_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_blogparagraph
    ADD CONSTRAINT blog_blogparagraph_blog_post_id_eeb81534_fk_blog_posts_id FOREIGN KEY (blog_post_id) REFERENCES public.blog_posts(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_blogparagraph blog_blogparagraph_paragraphs_self_refe_46301407_fk_blog_blog; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_blogparagraph
    ADD CONSTRAINT blog_blogparagraph_paragraphs_self_refe_46301407_fk_blog_blog FOREIGN KEY (paragraphs_self_refer_id) REFERENCES public.blog_blogparagraph(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_blogparagraph_step_by_step_guide blog_blogparagraph_s_blogparagraph_id_726fe9db_fk_blog_blog; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_blogparagraph_step_by_step_guide
    ADD CONSTRAINT blog_blogparagraph_s_blogparagraph_id_726fe9db_fk_blog_blog FOREIGN KEY (blogparagraph_id) REFERENCES public.blog_blogparagraph(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_blogparagraph_step_by_step_guide blog_blogparagraph_s_blogstepbystepguide__62ef3a47_fk_step_by_s; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_blogparagraph_step_by_step_guide
    ADD CONSTRAINT blog_blogparagraph_s_blogstepbystepguide__62ef3a47_fk_step_by_s FOREIGN KEY (blogstepbystepguide_id) REFERENCES public.step_by_step_guides(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_comment blog_comment_author_id_4f11e2e0_fk_UserManagement_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_comment
    ADD CONSTRAINT "blog_comment_author_id_4f11e2e0_fk_UserManagement_user_id" FOREIGN KEY (author_id) REFERENCES public."UserManagement_user"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_comment blog_comment_post_id_580e96ef_fk_blog_posts_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_comment
    ADD CONSTRAINT blog_comment_post_id_580e96ef_fk_blog_posts_id FOREIGN KEY (post_id) REFERENCES public.blog_posts(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_posts blog_posts_author_id_6f561d00_fk_UserManagement_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts
    ADD CONSTRAINT "blog_posts_author_id_6f561d00_fk_UserManagement_user_id" FOREIGN KEY (author_id) REFERENCES public."UserManagement_user"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_posts blog_posts_author_profile_id_e8cc67e3_fk_UserProfi; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts
    ADD CONSTRAINT "blog_posts_author_profile_id_e8cc67e3_fk_UserProfi" FOREIGN KEY (author_profile_id) REFERENCES public."UserProfile_userprofile"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_posts blog_posts_category_id_4316690d_fk_blog_category_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts
    ADD CONSTRAINT blog_posts_category_id_4316690d_fk_blog_category_id FOREIGN KEY (category_id) REFERENCES public.blog_category(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_posts_paragraphs blog_posts_paragraph_blogparagraph_id_b41e2b18_fk_blog_blog; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts_paragraphs
    ADD CONSTRAINT blog_posts_paragraph_blogparagraph_id_b41e2b18_fk_blog_blog FOREIGN KEY (blogparagraph_id) REFERENCES public.blog_blogparagraph(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_posts_paragraphs blog_posts_paragraphs_blogpost_id_c2fc2394_fk_blog_posts_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts_paragraphs
    ADD CONSTRAINT blog_posts_paragraphs_blogpost_id_c2fc2394_fk_blog_posts_id FOREIGN KEY (blogpost_id) REFERENCES public.blog_posts(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_posts_post_images blog_posts_post_imag_blogpostimage_id_08331e5c_fk_blog_blog; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts_post_images
    ADD CONSTRAINT blog_posts_post_imag_blogpostimage_id_08331e5c_fk_blog_blog FOREIGN KEY (blogpostimage_id) REFERENCES public.blog_blogpostimage(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_posts_post_images blog_posts_post_images_blogpost_id_2c233c46_fk_blog_posts_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts_post_images
    ADD CONSTRAINT blog_posts_post_images_blogpost_id_2c233c46_fk_blog_posts_id FOREIGN KEY (blogpost_id) REFERENCES public.blog_posts(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_posts blog_posts_topic_id_323d72ad_fk_blog_topic_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts
    ADD CONSTRAINT blog_posts_topic_id_323d72ad_fk_blog_topic_id FOREIGN KEY (topic_id) REFERENCES public.blog_topic(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_reply blog_reply_author_id_7641dac7_fk_UserManagement_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_reply
    ADD CONSTRAINT "blog_reply_author_id_7641dac7_fk_UserManagement_user_id" FOREIGN KEY (author_id) REFERENCES public."UserManagement_user"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_reply blog_reply_comment_id_id_4d0f35cc_fk_blog_comment_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_reply
    ADD CONSTRAINT blog_reply_comment_id_id_4d0f35cc_fk_blog_comment_id FOREIGN KEY (comment_id_id) REFERENCES public.blog_comment(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_topic blog_topic_category_id_3818a921_fk_blog_category_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_topic
    ADD CONSTRAINT blog_topic_category_id_3818a921_fk_blog_category_id FOREIGN KEY (category_id) REFERENCES public.blog_category(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_topicfeaturedpost blog_topicfeaturedpo_featured_topic_id_422d9a8c_fk_blog_topi; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_topicfeaturedpost
    ADD CONSTRAINT blog_topicfeaturedpo_featured_topic_id_422d9a8c_fk_blog_topi FOREIGN KEY (featured_topic_id) REFERENCES public.blog_topic(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_topicfeaturedpost blog_topicfeaturedpost_post_id_990f8c67_fk_blog_posts_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_topicfeaturedpost
    ADD CONSTRAINT blog_topicfeaturedpost_post_id_990f8c67_fk_blog_posts_id FOREIGN KEY (post_id) REFERENCES public.blog_posts(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: contact_us contact_us_author_id_3da91a74_fk_UserManagement_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_us
    ADD CONSTRAINT "contact_us_author_id_3da91a74_fk_UserManagement_user_id" FOREIGN KEY (author_id) REFERENCES public."UserManagement_user"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: contact_us_paragraphs contact_us_paragraph_paragraph_id_e28b4597_fk_ContactUs; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_us_paragraphs
    ADD CONSTRAINT "contact_us_paragraph_paragraph_id_e28b4597_fk_ContactUs" FOREIGN KEY (paragraph_id) REFERENCES public."ContactUs_paragraph"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: contact_us_paragraphs contact_us_paragraphs_contactus_id_9f9cdc14_fk_contact_us_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_us_paragraphs
    ADD CONSTRAINT contact_us_paragraphs_contactus_id_9f9cdc14_fk_contact_us_id FOREIGN KEY (contactus_id) REFERENCES public.contact_us(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_UserManagement_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_UserManagement_user_id" FOREIGN KEY (user_id) REFERENCES public."UserManagement_user"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: silk_profile_queries silk_profile_queries_profile_id_a3d76db8_fk_silk_profile_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_profile_queries
    ADD CONSTRAINT silk_profile_queries_profile_id_a3d76db8_fk_silk_profile_id FOREIGN KEY (profile_id) REFERENCES public.silk_profile(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: silk_profile_queries silk_profile_queries_sqlquery_id_155df455_fk_silk_sqlquery_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_profile_queries
    ADD CONSTRAINT silk_profile_queries_sqlquery_id_155df455_fk_silk_sqlquery_id FOREIGN KEY (sqlquery_id) REFERENCES public.silk_sqlquery(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: silk_profile silk_profile_request_id_7b81bd69_fk_silk_request_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_profile
    ADD CONSTRAINT silk_profile_request_id_7b81bd69_fk_silk_request_id FOREIGN KEY (request_id) REFERENCES public.silk_request(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: silk_response silk_response_request_id_1e8e2776_fk_silk_request_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_response
    ADD CONSTRAINT silk_response_request_id_1e8e2776_fk_silk_request_id FOREIGN KEY (request_id) REFERENCES public.silk_request(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: silk_sqlquery silk_sqlquery_request_id_6f8f0527_fk_silk_request_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_sqlquery
    ADD CONSTRAINT silk_sqlquery_request_id_6f8f0527_fk_silk_request_id FOREIGN KEY (request_id) REFERENCES public.silk_request(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: step_by_step_guides_contact_us_specific step_by_step_guides__blog_paragraphs_id_4aa7b4a8_fk_ContactUs; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.step_by_step_guides_contact_us_specific
    ADD CONSTRAINT "step_by_step_guides__blog_paragraphs_id_4aa7b4a8_fk_ContactUs" FOREIGN KEY (blog_paragraphs_id) REFERENCES public."ContactUs_paragraph"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: step_by_step_guides_contact_us_specific step_by_step_guides__contact_us_id_6e48cae2_fk_contact_u; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.step_by_step_guides_contact_us_specific
    ADD CONSTRAINT step_by_step_guides__contact_us_id_6e48cae2_fk_contact_u FOREIGN KEY (contact_us_id) REFERENCES public.contact_us(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: step_by_step_guides_contact_us_specific step_by_step_guides__privacy_policy_id_c604c3c7_fk_PrivacyPo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.step_by_step_guides_contact_us_specific
    ADD CONSTRAINT "step_by_step_guides__privacy_policy_id_c604c3c7_fk_PrivacyPo" FOREIGN KEY (privacy_policy_id) REFERENCES public."PrivacyPolicy"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: step_by_step_guides_contact_us_specific step_by_step_guides__sbs_self_refer_id_c988fb55_fk_step_by_s; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.step_by_step_guides_contact_us_specific
    ADD CONSTRAINT step_by_step_guides__sbs_self_refer_id_c988fb55_fk_step_by_s FOREIGN KEY (sbs_self_refer_id) REFERENCES public.step_by_step_guides_contact_us_specific(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: step_by_step_guides step_by_step_guides_blog_paragraphs_id_a2568528_fk_blog_blog; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.step_by_step_guides
    ADD CONSTRAINT step_by_step_guides_blog_paragraphs_id_a2568528_fk_blog_blog FOREIGN KEY (blog_paragraphs_id) REFERENCES public.blog_blogparagraph(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: step_by_step_guides step_by_step_guides_blog_post_id_61ddf0a6_fk_blog_posts_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.step_by_step_guides
    ADD CONSTRAINT step_by_step_guides_blog_post_id_61ddf0a6_fk_blog_posts_id FOREIGN KEY (blog_post_id) REFERENCES public.blog_posts(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: step_by_step_guides step_by_step_guides_sbs_self_refer_id_ce29408e_fk_step_by_s; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.step_by_step_guides
    ADD CONSTRAINT step_by_step_guides_sbs_self_refer_id_ce29408e_fk_step_by_s FOREIGN KEY (sbs_self_refer_id) REFERENCES public.step_by_step_guides(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database cluster dump complete
--

