--
-- PostgreSQL database cluster dump
--

SET default_transaction_read_only = off;

SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;

--
-- Drop databases (except postgres and template1)
--





--
-- Drop roles
--

DROP ROLE postgres;


--
-- Roles
--

CREATE ROLE postgres;
ALTER ROLE postgres WITH SUPERUSER INHERIT CREATEROLE CREATEDB LOGIN REPLICATION BYPASSRLS PASSWORD 'SCRAM-SHA-256$4096:D9I0+TlZu4P8S343/G0YvQ==$7dD7RK8EhGpw2uHZyGcy6CadCxjxwhfZJ55JgDBuQwQ=:htBGnDYa686zVA6VAf3L9xNV8BWtuSc5RrJQiqp9HWg=';

--
-- User Configurations
--








--
-- Databases
--

--
-- Database "template1" dump
--

--
-- PostgreSQL database dump
--

-- Dumped from database version 15.2 (Debian 15.2-1.pgdg110+1)
-- Dumped by pg_dump version 15.2 (Debian 15.2-1.pgdg110+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

UPDATE pg_catalog.pg_database SET datistemplate = false WHERE datname = 'template1';
DROP DATABASE template1;
--
-- Name: template1; Type: DATABASE; Schema: -; Owner: postgres
--

CREATE DATABASE template1 WITH TEMPLATE = template0 ENCODING = 'UTF8' LOCALE_PROVIDER = libc LOCALE = 'en_US.utf8';


ALTER DATABASE template1 OWNER TO postgres;

\connect template1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: DATABASE template1; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON DATABASE template1 IS 'default template for new databases';


--
-- Name: template1; Type: DATABASE PROPERTIES; Schema: -; Owner: postgres
--

ALTER DATABASE template1 IS_TEMPLATE = true;


\connect template1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: DATABASE template1; Type: ACL; Schema: -; Owner: postgres
--

REVOKE CONNECT,TEMPORARY ON DATABASE template1 FROM PUBLIC;
GRANT CONNECT ON DATABASE template1 TO PUBLIC;


--
-- PostgreSQL database dump complete
--

--
-- Database "postgres" dump
--

--
-- PostgreSQL database dump
--

-- Dumped from database version 15.2 (Debian 15.2-1.pgdg110+1)
-- Dumped by pg_dump version 15.2 (Debian 15.2-1.pgdg110+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

DROP DATABASE postgres;
--
-- Name: postgres; Type: DATABASE; Schema: -; Owner: postgres
--

CREATE DATABASE postgres WITH TEMPLATE = template0 ENCODING = 'UTF8' LOCALE_PROVIDER = libc LOCALE = 'en_US.utf8';


ALTER DATABASE postgres OWNER TO postgres;

\connect postgres

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: DATABASE postgres; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON DATABASE postgres IS 'default administrative connection database';


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: Advertise-with-well-plus-good; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Advertise-with-well-plus-good" (
    id bigint NOT NULL,
    title character varying(100) NOT NULL,
    content text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    author_advertise_well_good_id bigint NOT NULL
);


ALTER TABLE public."Advertise-with-well-plus-good" OWNER TO postgres;

--
-- Name: Advertise-with-well-plus-good_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."Advertise-with-well-plus-good" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Advertise-with-well-plus-good_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: Advertise-with-well-plus-good_paragraphs_advertise_well_good; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Advertise-with-well-plus-good_paragraphs_advertise_well_good" (
    id bigint NOT NULL,
    advertisewithwellplusgood_id bigint NOT NULL,
    paragraph_id bigint NOT NULL
);


ALTER TABLE public."Advertise-with-well-plus-good_paragraphs_advertise_well_good" OWNER TO postgres;

--
-- Name: Advertise-with-well-plus-good_paragraphs_advertise_well__id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."Advertise-with-well-plus-good_paragraphs_advertise_well_good" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Advertise-with-well-plus-good_paragraphs_advertise_well__id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: ContactUs_paragraph; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."ContactUs_paragraph" (
    id bigint NOT NULL,
    paragraph_title character varying(255),
    paragraph_content text,
    "order" integer,
    advertise_with_us_id bigint,
    contact_us_id bigint,
    CONSTRAINT "ContactUs_paragraph_order_check" CHECK (("order" >= 0))
);


ALTER TABLE public."ContactUs_paragraph" OWNER TO postgres;

--
-- Name: ContactUs_paragraph_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."ContactUs_paragraph" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."ContactUs_paragraph_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: ContactUs_paragraph_step_by_step_guide; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."ContactUs_paragraph_step_by_step_guide" (
    id bigint NOT NULL,
    paragraph_id bigint NOT NULL,
    stepbystepguide_id bigint NOT NULL
);


ALTER TABLE public."ContactUs_paragraph_step_by_step_guide" OWNER TO postgres;

--
-- Name: ContactUs_paragraph_step_by_step_guide_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."ContactUs_paragraph_step_by_step_guide" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."ContactUs_paragraph_step_by_step_guide_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: PrivacyPolicy; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."PrivacyPolicy" (
    id bigint NOT NULL,
    title character varying(100) NOT NULL,
    content text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    author_privacy_policy_id bigint
);


ALTER TABLE public."PrivacyPolicy" OWNER TO postgres;

--
-- Name: PrivacyPolicy_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."PrivacyPolicy" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."PrivacyPolicy_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: PrivacyPolicy_paragraphs_privacy_policy; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."PrivacyPolicy_paragraphs_privacy_policy" (
    id bigint NOT NULL,
    privacypolicy_id bigint NOT NULL,
    paragraph_id bigint NOT NULL
);


ALTER TABLE public."PrivacyPolicy_paragraphs_privacy_policy" OWNER TO postgres;

--
-- Name: PrivacyPolicy_paragraphs_privacy_policy_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."PrivacyPolicy_paragraphs_privacy_policy" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."PrivacyPolicy_paragraphs_privacy_policy_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: UserManagement_user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."UserManagement_user" (
    id bigint NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    email character varying(255) NOT NULL,
    first_name character varying(255) NOT NULL,
    last_name character varying(255) NOT NULL,
    tc boolean NOT NULL,
    is_active boolean NOT NULL,
    is_admin boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL
);


ALTER TABLE public."UserManagement_user" OWNER TO postgres;

--
-- Name: UserManagement_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."UserManagement_user" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."UserManagement_user_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: UserProfile_role; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."UserProfile_role" (
    id bigint NOT NULL,
    role_name character varying(100) NOT NULL
);


ALTER TABLE public."UserProfile_role" OWNER TO postgres;

--
-- Name: UserProfile_role_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."UserProfile_role" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."UserProfile_role_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: UserProfile_userprofile; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."UserProfile_userprofile" (
    id bigint NOT NULL,
    bio text,
    profile_image character varying(100),
    country character varying(150),
    city character varying(150),
    twitter_acc character varying(300),
    facebook_acc character varying(300),
    instagram_acc character varying(300),
    role_id bigint NOT NULL,
    user_id bigint NOT NULL
);


ALTER TABLE public."UserProfile_userprofile" OWNER TO postgres;

--
-- Name: UserProfile_userprofile_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."UserProfile_userprofile" ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."UserProfile_userprofile_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO postgres;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO postgres;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO postgres;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_blogparagraph; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_blogparagraph (
    id bigint NOT NULL,
    paragraph_title character varying(255),
    paragraph_content text,
    "order" integer,
    blog_post_id bigint,
    paragraphs_self_refer_id bigint,
    CONSTRAINT blog_blogparagraph_order_check CHECK (("order" >= 0))
);


ALTER TABLE public.blog_blogparagraph OWNER TO postgres;

--
-- Name: blog_blogparagraph_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_blogparagraph ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_blogparagraph_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_blogparagraph_step_by_step_guide; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_blogparagraph_step_by_step_guide (
    id bigint NOT NULL,
    blogparagraph_id bigint NOT NULL,
    blogstepbystepguide_id bigint NOT NULL
);


ALTER TABLE public.blog_blogparagraph_step_by_step_guide OWNER TO postgres;

--
-- Name: blog_blogparagraph_step_by_step_guide_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_blogparagraph_step_by_step_guide ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_blogparagraph_step_by_step_guide_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_blogpostimage; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_blogpostimage (
    id bigint NOT NULL,
    images character varying(100)
);


ALTER TABLE public.blog_blogpostimage OWNER TO postgres;

--
-- Name: blog_blogpostimage_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_blogpostimage ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_blogpostimage_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_category; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_category (
    id bigint NOT NULL,
    category_name character varying(100) NOT NULL
);


ALTER TABLE public.blog_category OWNER TO postgres;

--
-- Name: blog_category_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_category ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_category_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_comment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_comment (
    id bigint NOT NULL,
    created_date timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    comment_text text NOT NULL,
    author_id bigint NOT NULL,
    post_id bigint NOT NULL
);


ALTER TABLE public.blog_comment OWNER TO postgres;

--
-- Name: blog_comment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_comment ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_comment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_posts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_posts (
    id bigint NOT NULL,
    title character varying(100) NOT NULL,
    content text,
    status integer,
    slug character varying(255),
    cover_image character varying(100),
    quote character varying(255),
    quote_writer character varying(255),
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    most_recent_posts boolean,
    featured_posts boolean,
    older_posts boolean,
    author_id bigint NOT NULL,
    category_id bigint NOT NULL,
    topic_type_id bigint
);


ALTER TABLE public.blog_posts OWNER TO postgres;

--
-- Name: blog_posts_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_posts ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_posts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_posts_paragraphs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_posts_paragraphs (
    id bigint NOT NULL,
    blogpost_id bigint NOT NULL,
    blogparagraph_id bigint NOT NULL
);


ALTER TABLE public.blog_posts_paragraphs OWNER TO postgres;

--
-- Name: blog_posts_paragraphs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_posts_paragraphs ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_posts_paragraphs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_posts_post_images; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_posts_post_images (
    id bigint NOT NULL,
    blogpost_id bigint NOT NULL,
    blogpostimage_id bigint NOT NULL
);


ALTER TABLE public.blog_posts_post_images OWNER TO postgres;

--
-- Name: blog_posts_post_images_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_posts_post_images ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_posts_post_images_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_reply; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_reply (
    id bigint NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    reply_text text NOT NULL,
    author_id bigint NOT NULL,
    comment_id_id bigint NOT NULL
);


ALTER TABLE public.blog_reply OWNER TO postgres;

--
-- Name: blog_reply_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_reply ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_reply_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: blog_topictype; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.blog_topictype (
    id bigint NOT NULL,
    topic character varying(100)
);


ALTER TABLE public.blog_topictype OWNER TO postgres;

--
-- Name: blog_topictype_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.blog_topictype ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.blog_topictype_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: contact_us; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.contact_us (
    id bigint NOT NULL,
    title character varying(100) NOT NULL,
    content text,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    author_id bigint NOT NULL
);


ALTER TABLE public.contact_us OWNER TO postgres;

--
-- Name: contact_us_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.contact_us ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.contact_us_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: contact_us_paragraphs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.contact_us_paragraphs (
    id bigint NOT NULL,
    contactus_id bigint NOT NULL,
    paragraph_id bigint NOT NULL
);


ALTER TABLE public.contact_us_paragraphs OWNER TO postgres;

--
-- Name: contact_us_paragraphs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.contact_us_paragraphs ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.contact_us_paragraphs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id bigint NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO postgres;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO postgres;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO postgres;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO postgres;

--
-- Name: legal_clause; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.legal_clause (
    id bigint NOT NULL,
    clue_title character varying(255) NOT NULL,
    clue_content text NOT NULL,
    "order" integer NOT NULL,
    terms_and_conditions_id bigint NOT NULL,
    CONSTRAINT legal_clause_order_check CHECK (("order" >= 0))
);


ALTER TABLE public.legal_clause OWNER TO postgres;

--
-- Name: legal_clause_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.legal_clause ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.legal_clause_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: legal_termsandconditions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.legal_termsandconditions (
    id bigint NOT NULL,
    title character varying(255) NOT NULL,
    content text NOT NULL,
    date_created timestamp with time zone NOT NULL,
    date_updated timestamp with time zone NOT NULL
);


ALTER TABLE public.legal_termsandconditions OWNER TO postgres;

--
-- Name: legal_termsandconditions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.legal_termsandconditions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.legal_termsandconditions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: legal_useragreement; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.legal_useragreement (
    id bigint NOT NULL,
    agreed_date timestamp with time zone NOT NULL,
    terms_and_conditions_id bigint NOT NULL,
    user_id bigint NOT NULL
);


ALTER TABLE public.legal_useragreement OWNER TO postgres;

--
-- Name: legal_useragreement_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.legal_useragreement ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.legal_useragreement_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: silk_profile; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.silk_profile (
    id integer NOT NULL,
    name character varying(300) NOT NULL,
    start_time timestamp with time zone NOT NULL,
    end_time timestamp with time zone,
    time_taken double precision,
    file_path character varying(300) NOT NULL,
    line_num integer,
    end_line_num integer,
    func_name character varying(300) NOT NULL,
    exception_raised boolean NOT NULL,
    dynamic boolean NOT NULL,
    request_id character varying(36)
);


ALTER TABLE public.silk_profile OWNER TO postgres;

--
-- Name: silk_profile_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.silk_profile ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.silk_profile_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: silk_profile_queries; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.silk_profile_queries (
    id bigint NOT NULL,
    profile_id integer NOT NULL,
    sqlquery_id integer NOT NULL
);


ALTER TABLE public.silk_profile_queries OWNER TO postgres;

--
-- Name: silk_profile_queries_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.silk_profile_queries ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.silk_profile_queries_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: silk_request; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.silk_request (
    id character varying(36) NOT NULL,
    path character varying(190) NOT NULL,
    query_params text NOT NULL,
    raw_body text NOT NULL,
    body text NOT NULL,
    method character varying(10) NOT NULL,
    start_time timestamp with time zone NOT NULL,
    view_name character varying(190),
    end_time timestamp with time zone,
    time_taken double precision,
    encoded_headers text NOT NULL,
    meta_time double precision,
    meta_num_queries integer,
    meta_time_spent_queries double precision,
    pyprofile text NOT NULL,
    num_sql_queries integer NOT NULL,
    prof_file character varying(300) NOT NULL
);


ALTER TABLE public.silk_request OWNER TO postgres;

--
-- Name: silk_response; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.silk_response (
    id character varying(36) NOT NULL,
    status_code integer NOT NULL,
    raw_body text NOT NULL,
    body text NOT NULL,
    encoded_headers text NOT NULL,
    request_id character varying(36) NOT NULL
);


ALTER TABLE public.silk_response OWNER TO postgres;

--
-- Name: silk_sqlquery; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.silk_sqlquery (
    id integer NOT NULL,
    query text NOT NULL,
    start_time timestamp with time zone,
    end_time timestamp with time zone,
    time_taken double precision,
    traceback text NOT NULL,
    request_id character varying(36),
    identifier integer NOT NULL,
    analysis text
);


ALTER TABLE public.silk_sqlquery OWNER TO postgres;

--
-- Name: silk_sqlquery_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.silk_sqlquery ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.silk_sqlquery_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: step_by_step_guides; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.step_by_step_guides (
    id bigint NOT NULL,
    sbs_guide_number smallint,
    sub_heading character varying(255),
    sub_content text,
    sbs_index smallint,
    blog_paragraphs_id bigint,
    blog_post_id bigint NOT NULL,
    sbs_self_refer_id bigint,
    list_style character varying(50),
    CONSTRAINT step_by_step_guides_sbs_guide_number_check CHECK ((sbs_guide_number >= 0)),
    CONSTRAINT step_by_step_guides_sbs_index_check CHECK ((sbs_index >= 0))
);


ALTER TABLE public.step_by_step_guides OWNER TO postgres;

--
-- Name: step_by_step_guides_contact_us_specific; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.step_by_step_guides_contact_us_specific (
    id bigint NOT NULL,
    list_style character varying(50),
    sbs_guide_number smallint,
    sub_heading character varying(255),
    sub_content text,
    sbs_index smallint,
    blog_paragraphs_id bigint,
    contact_us_id bigint NOT NULL,
    sbs_self_refer_id bigint,
    privacy_policy_id bigint,
    CONSTRAINT step_by_step_guides_contact_us_specific_sbs_guide_number_check CHECK ((sbs_guide_number >= 0)),
    CONSTRAINT step_by_step_guides_contact_us_specific_sbs_index_check CHECK ((sbs_index >= 0))
);


ALTER TABLE public.step_by_step_guides_contact_us_specific OWNER TO postgres;

--
-- Name: step_by_step_guides_contact_us_specific_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.step_by_step_guides_contact_us_specific ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.step_by_step_guides_contact_us_specific_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: step_by_step_guides_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.step_by_step_guides ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.step_by_step_guides_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: Advertise-with-well-plus-good; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Advertise-with-well-plus-good" (id, title, content, created_at, updated_at, author_advertise_well_good_id) FROM stdin;
\.


--
-- Data for Name: Advertise-with-well-plus-good_paragraphs_advertise_well_good; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Advertise-with-well-plus-good_paragraphs_advertise_well_good" (id, advertisewithwellplusgood_id, paragraph_id) FROM stdin;
\.


--
-- Data for Name: ContactUs_paragraph; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."ContactUs_paragraph" (id, paragraph_title, paragraph_content, "order", advertise_with_us_id, contact_us_id) FROM stdin;
1	Looking to advertise?	Well+Good works hand-in-hand with each of our partners to ensure their creative messaging resonates best with our audience. From editorial alignments, to custom content solutions, to social and email strategy, to live (or, ahem, virtual!) events, our sales and creative teams will help you generate some major good vibes in the wellness space. Visit our advertising page or write us at advertising@wellandgood.com.	0	\N	1
2	Are you a publicist looking for coverage of your product or client?	Please contact the appropriate editor below. Note that due to the volume of pitches we receive each day, we may not be able to respond to every request.	0	\N	1
3	Are you a journalist or a writer who wants to contribute to Well+Good?	You can find our complete pitching guidelines here.	0	\N	1
4	Do you have a media request?	Write us at susan.turner@leafgroup.com	0	\N	1
5	Do you have a question regarding your subscription to a Well+Good newsletter?	Please send an email to hello@wellandgood.com.	0	\N	1
6	Are you looking to license or reuse content published by Well+Good?	Contact our official partner, Wright’s Media about available usages, license fees, and award seal artwork at LeafGroup@wrightsmedia.com. Please note that Wright’s Media is the only authorized company that can provide Leaf Group brand materials.”	0	\N	1
7	Due to the COVID-19 pandemic, we are not currently accepting unsolicited packages by mail.		0	\N	1
\.


--
-- Data for Name: ContactUs_paragraph_step_by_step_guide; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."ContactUs_paragraph_step_by_step_guide" (id, paragraph_id, stepbystepguide_id) FROM stdin;
\.


--
-- Data for Name: PrivacyPolicy; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."PrivacyPolicy" (id, title, content, created_at, updated_at, author_privacy_policy_id) FROM stdin;
\.


--
-- Data for Name: PrivacyPolicy_paragraphs_privacy_policy; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."PrivacyPolicy_paragraphs_privacy_policy" (id, privacypolicy_id, paragraph_id) FROM stdin;
\.


--
-- Data for Name: UserManagement_user; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."UserManagement_user" (id, password, last_login, email, first_name, last_name, tc, is_active, is_admin, created_at, updated_at) FROM stdin;
1	pbkdf2_sha256$390000$6JsqVUkKsRNn7FhvcwNsGi$HqxnhD5cqgk9UI3Kw+/JK7QcDeDHD3DPf9DqVuGkC6U=	2023-03-20 15:04:46.876398+00	com.qandeelhaider@gmail.com	qandeel	haider	t	t	t	2023-03-20 15:04:35.329479+00	2023-03-20 15:04:35.332233+00
\.


--
-- Data for Name: UserProfile_role; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."UserProfile_role" (id, role_name) FROM stdin;
1	SENIOR BEAUTY EDITOR
\.


--
-- Data for Name: UserProfile_userprofile; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."UserProfile_userprofile" (id, bio, profile_image, country, city, twitter_acc, facebook_acc, instagram_acc, role_id, user_id) FROM stdin;
1	oë Weiner is senior beauty editor at Well+Good, where she guides coverage of skin care, hair care, cosmetics, and the beauty industry at large. A versatile writer and editor, she is also the host of Well+Good YouTube series Zoë Tries It All, testing the latest and greatest wellness experiences, beauty products, physical fitness routines, home technology, and more.\r\nBefore joining the team at W+G in 2018, Zoë covered a wide range of lifestyle topics for Glamour, Allure, Marie Claire, SELF, Teen Vogue, CNN, and Bustle. She received a bachelor’s degree from Georgetown University and master’s degree from Columbia University’s Graduate School of Journalism. She lives in New York City.	profile-images/500-_Portrait_Pictures_-HD-_-_Download_Free_Images_on_Unsplash_10-7-2022__PGzYFJz.png	Pakistan	Sargodha	com.qandeelhaider@gmail.com	com.qandeelhaider@gmail.com	com.qandeelhaider@gmail.com	1	1
\.


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add content type	4	add_contenttype
14	Can change content type	4	change_contenttype
15	Can delete content type	4	delete_contenttype
16	Can view content type	4	view_contenttype
17	Can add session	5	add_session
18	Can change session	5	change_session
19	Can delete session	5	delete_session
20	Can view session	5	view_session
21	Can add profile	6	add_profile
22	Can change profile	6	change_profile
23	Can delete profile	6	delete_profile
24	Can view profile	6	view_profile
25	Can add request	7	add_request
26	Can change request	7	change_request
27	Can delete request	7	delete_request
28	Can view request	7	view_request
29	Can add response	8	add_response
30	Can change response	8	change_response
31	Can delete response	8	delete_response
32	Can view response	8	view_response
33	Can add sql query	9	add_sqlquery
34	Can change sql query	9	change_sqlquery
35	Can delete sql query	9	delete_sqlquery
36	Can view sql query	9	view_sqlquery
37	Can add advertise with well plus good	10	add_advertisewithwellplusgood
38	Can change advertise with well plus good	10	change_advertisewithwellplusgood
39	Can delete advertise with well plus good	10	delete_advertisewithwellplusgood
40	Can view advertise with well plus good	10	view_advertisewithwellplusgood
41	Can add contact us	11	add_contactus
42	Can change contact us	11	change_contactus
43	Can delete contact us	11	delete_contactus
44	Can view contact us	11	view_contactus
45	Can add paragraph	12	add_paragraph
46	Can change paragraph	12	change_paragraph
47	Can delete paragraph	12	delete_paragraph
48	Can view paragraph	12	view_paragraph
49	Can add step-by-step guide	13	add_stepbystepguide
50	Can change step-by-step guide	13	change_stepbystepguide
51	Can delete step-by-step guide	13	delete_stepbystepguide
52	Can view step-by-step guide	13	view_stepbystepguide
53	Can add role	14	add_role
54	Can change role	14	change_role
55	Can delete role	14	delete_role
56	Can view role	14	view_role
57	Can add user profile	15	add_userprofile
58	Can change user profile	15	change_userprofile
59	Can delete user profile	15	delete_userprofile
60	Can view user profile	15	view_userprofile
61	Can add user	16	add_user
62	Can change user	16	change_user
63	Can delete user	16	delete_user
64	Can view user	16	view_user
65	Can add blog paragraph	17	add_blogparagraph
66	Can change blog paragraph	17	change_blogparagraph
67	Can delete blog paragraph	17	delete_blogparagraph
68	Can view blog paragraph	17	view_blogparagraph
69	Can add blog post	18	add_blogpost
70	Can change blog post	18	change_blogpost
71	Can delete blog post	18	delete_blogpost
72	Can view blog post	18	view_blogpost
73	Can add blog post image	19	add_blogpostimage
74	Can change blog post image	19	change_blogpostimage
75	Can delete blog post image	19	delete_blogpostimage
76	Can view blog post image	19	view_blogpostimage
77	Can add category	20	add_category
78	Can change category	20	change_category
79	Can delete category	20	delete_category
80	Can view category	20	view_category
81	Can add comment	21	add_comment
82	Can change comment	21	change_comment
83	Can delete comment	21	delete_comment
84	Can view comment	21	view_comment
85	Can add topic type	22	add_topictype
86	Can change topic type	22	change_topictype
87	Can delete topic type	22	delete_topictype
88	Can view topic type	22	view_topictype
89	Can add reply	23	add_reply
90	Can change reply	23	change_reply
91	Can delete reply	23	delete_reply
92	Can view reply	23	view_reply
93	Can add step-by-step guide	24	add_blogstepbystepguide
94	Can change step-by-step guide	24	change_blogstepbystepguide
95	Can delete step-by-step guide	24	delete_blogstepbystepguide
96	Can view step-by-step guide	24	view_blogstepbystepguide
97	Can add terms and conditions	25	add_termsandconditions
98	Can change terms and conditions	25	change_termsandconditions
99	Can delete terms and conditions	25	delete_termsandconditions
100	Can view terms and conditions	25	view_termsandconditions
101	Can add user agreement	26	add_useragreement
102	Can change user agreement	26	change_useragreement
103	Can delete user agreement	26	delete_useragreement
104	Can view user agreement	26	view_useragreement
105	Can add clause	27	add_clause
106	Can change clause	27	change_clause
107	Can delete clause	27	delete_clause
108	Can view clause	27	view_clause
109	Can add privacy policy	28	add_privacypolicy
110	Can change privacy policy	28	change_privacypolicy
111	Can delete privacy policy	28	delete_privacypolicy
112	Can view privacy policy	28	view_privacypolicy
\.


--
-- Data for Name: blog_blogparagraph; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_blogparagraph (id, paragraph_title, paragraph_content, "order", blog_post_id, paragraphs_self_refer_id) FROM stdin;
1	Why financial expert Farnoosh Torabi says we need to create a new workplace playbook to achieve gender equity at work	It's often implied that to get ahead at work and in life, women should emulate traditionally masculine behaviors. As historian and author Blair Imani noted on last week's episode of The Well+Good Podcast, our patriarchal society tends to pit women against each other on the basis that there are only so many seats at the table for them. And this reality can lead women to internalize certain toxic and classically masculine behaviors like ruthless competitiveness.\r\n\r\nThe result is a workplace playbook that prioritizes and promotes these kinds of behaviors without acknowledging their limitations. As an example, take former Meta COO Sheryl Sandberg's popular book Lean In: Women, Work, and the Will to Lead, which, soon after publication and for a while thereafter, became the authority for women looking to ascend the rungs of the corporate ladder. While Torabi acknowledges that the book does have its merits (one of them being its recommendation for women to look at a job description that's relevant to their experience and believe that they qualify), it “is very much a playbook that stemmed from how the men were doing things,” she says. (And since its publication, it's been widely criticized for its lack of intersectionality and promotion of 'girl boss feminism.')\r\nThe message? Enlist your allies, says Torabi. Though gender inequity at work is still a major issue in 2023, what she says has changed in recent years is the discourse around it—it's become a lot stronger, she says. "To bring up pay equity during a pay or salary negotiation is no longer unheard of or unusual." And the next time you're considering asking for a raise or promotion, that cultural context is something you can leverage, she adds. "Bring that into your conversation."	0	1	\N
2	What to look for in best tasting protein powders	Beyond the amount of protein per serving—which usually ranges between 20 and 30 grams of protein per scoop—I look at the flavors and ingredients because it's easier to consume when tasty. Common flavors include vanilla, chocolate, or strawberry, but there are fun and unique ones, too. For example, Ora Organic's Vegan Protein Powder (now $39) takes a fun twist on vanilla with its chai infusion and is powered by fruits and vegetables like organic blueberries, apples, strawberries, broccoli, kale, and spices like turmeric. More unique flavors include Dymatize's ISO100 Hydrolyzed Protein Powder (now $33)—one of my all-time favorites—which is flavored with a mix of natural and artificial ingredients to taste just like a bowl of Fruity Pebbles (yum).\r\n\r\n\r\nSimilar to whey protein isolate, isolate powders are high in protein (90 percent protein) with the bonus (for some) of being low in carbs and fat. "A lot of protein powders that you see on the market likely will be in isolate form, such as whey isolate or soy isolate," explains Ehsani. Another type of protein is hydrolyzed protein powder—which "means that the protein has been broken into smaller chained amino acids, therefore are ultra quick to digest," she adds. This type of protein is considered the "crème de la crème." Why? Because this type contains smaller peptides compared to non-hydrolyzed protein that are rapidly absorbed into the gut, accelerating post-workout recovery. However, this additional step can be costly, resulting in a more expensive product.\r\n\r\nFor vegans, vegetarians, or people with dietary restrictions, plant-based protein powders are another great option. Some are made of natural ingredients and "contain a collection of amino acids that complement each other," says Laura Simmons, MS, RDN, CD, a registered dietitian at RET Physical Therapy and Healthcare Specialists based in Washington state.\r\n\r\nSimmons also recommends amino acids, aka the "building blocks of life." "Leucine, isoleucine, and valine are three of the nine essential amino acids that play a particularly strong role in muscle protein synthesis (muscle growth)," explains Simmons. She adds that it is essential to obtain these amino acids throughout the day and recommends between 3 and 4 grams of leucine for maximum muscle protein synthesis.\r\n\r\nNow that you've gotten a quick breakdown of different types of protein powders (although we still recommend reading our in-depth guide if you're still unsure!), let's get to products themselves. We tested a dozen protein powders and rounded up the best tasting ones, so you don't have to play that old game of "Hit or Miss." From Chips Ahoy-flavored protein powder to chocolate peanut butter, rest assured, there's a flavor for whatever your taste buds are tickling for post-workout.	0	2	\N
\.


--
-- Data for Name: blog_blogparagraph_step_by_step_guide; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_blogparagraph_step_by_step_guide (id, blogparagraph_id, blogstepbystepguide_id) FROM stdin;
\.


--
-- Data for Name: blog_blogpostimage; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_blogpostimage (id, images) FROM stdin;
\.


--
-- Data for Name: blog_category; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_category (id, category_name) FROM stdin;
1	SKIN-CARE TIPS
2	food-and-nutrition
\.


--
-- Data for Name: blog_comment; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_comment (id, created_date, updated_at, comment_text, author_id, post_id) FROM stdin;
\.


--
-- Data for Name: blog_posts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_posts (id, title, content, status, slug, cover_image, quote, quote_writer, created_at, updated_at, most_recent_posts, featured_posts, older_posts, author_id, category_id, topic_type_id) FROM stdin;
1	Discoloration Forms in 3 Ways—And This Derm-Developed Product Line Targets Them All	The first time I met board-certified dermatologist Shereene Idriss, MD, in 2016, she was lasering off my acne scarring in her Manhattan office. I hadn't started writing about beauty yet, and it would be another two years before she filmed the first of the "PillowtalkDerm" videos that have turned her into an internet superstar (or "dermfluencer," as they're called in the biz). It felt like kismet when our paths crossed again this week to chat about the launch of her upcoming skin-care line, which is specifically designed to treat the type of discoloration that brought us together in the first place.\r\nUsing glycolic, lactic, and tranaxemic acid, this chemically exfoliating mask sloughs away dead skin cells. Use it at night, leave it on for 10-15 minutes, and rinse with water. \r\nDr. Idriss started creating content on Instagram in 2018 after her 10th patient in a week walked into her office and asked if jade rollers really worked. "I was so sick of hearing the same BS questions over and over," she says. So she got into bed one night and filmed herself venting—literally, pillow-talk style—as a way to debunk the skin-care misconceptions that run rampant on social media. By 2020, her following had grown to the hundreds of thousands (as of this writing, it sits squarely at 468,000), and when she put out a poll asking if she should start a skin-care brand of her own, 98 percent of respondents said "yes." Thus, the PillowtalkDerm product line was born.\r\n"I thought there was something missing in the market that spoke to people from a place of authority," says Dr. Idriss. "I wanted to take what was out there and make it better."\r\n\r\nThe brand's "Major Fade" line—which launched on Monday and features an exfoliant, a serum, and a moisturizer—is solely focused on fading discoloration. "Discoloration can really play a huge part in people looking grubby, worn out, and tired, and evening out your skin tone is the easiest, biggest bang for your buck way to [change] your skin," says Dr. Idriss.\r\n\r\nThe formulas were inspired, in part, by her personal experience dealing with post-partum melasma after the birth of her son. "I remember looking at my face and feeling devastated—it literally came up overnight, and I looked like the crypt keeper," she says. "I went down this path of having this ridiculous 10-step routine... and I thought to myself, 'This is so obnoxiously long, there has to be another way.'"\r\nDiscoloration, particularly in darker skin tones, is notoriously hard to treat—which explains why Dr. Idriss initially needed 10 steps to manage hers. "The problem is, it has always been a single-ingredient story, but the reality is it should be a multi-ingredient story," she says. "When you're talking about hyperpigmentation and discoloration, we now understand how pigment is made and spread, and there's no one-size-fits-all. Vitamin C is part of the picture, but its' not going to be the whole answer. You definitely need to be using a combination of different ingredients in order to get the results."\r\n\r\nAccording to Dr. Idriss, hyperpigmentation is created via a three-part process in our cells. First, the melanocyte cells makes the pigmentation (aka melanin); then, the melanin gets put into little parcels called melanosomes; and finally, those melanosomes are distributed into our keratinocytes (aka skin cells), which determines how the pigment appears on our skin. Using pigment-regulating actives like vitamin C, alpha arbutin, and a laundry list of exfoliating acids (glycolic, lactic, kojic, and tranexamic) PillowtalkDerm's formulas fight discoloration at every step.\r\n\r\n"If you look at the products, each one hits it at a different level, and all of the ingredients target different points throughout the pathway," says Dr. Idriss. "The Flash Mask targets the melanocytes and also helps on the superficial level by getting rid of all of the dead skin cells living on the top of your skin, the serum minimizes melanin production, and the moisturizer works to slow down how [the melanin] is spread throughout your skin cells. Each one on its own is a hero product, but the trio is a powerhouse."\r\n\r\nBefore launching the line, Dr. Idriss conducted what she calls a "nerd study" with 100 of her followers. She asked them to quit their usual skin-care routines and use only the PillowtalkDerm products (and their SPF, of course) every day for a month. "I'm the founder, and I was genuinely shocked when they told me that they saw results within two weeks—I usually tell people they need to stay on a regimen for 6-8 weeks before they'll start to notice anything," she says. "I knew in theory how well it works, but I was surprised at how effective it was in the real world as people were using it."\r\nI got my hands on the products just last week, which was perfectly timed to help me deal with the discoloration that showed up on my skin after a summer of too much sun and not enough SPF. The acne scars that had been lasered away all those years ago started to peek through (because discoloration is, apparently, relentless), and after using the serum and moisturizer every morning and night for seven days (and trying the mask three times), I can see a visible difference in my skin. Though there's still a ways to go, considering my complexion already looks brighter and more even, I have very high hopes for what it will look like in three more weeks.\r\nOver the past century, women have made significant strides in the labor market. Starting in the 1920s, they began shucking traditional social mores that said women (particularly married women) belonged in the home by taking on factory work, and between the 1930s and 1970s, amid the advent of new technologies, they took on clerical work, too. Since then, a combination of greater access to higher education, the availability of birth control, shifting cultural attitudes, and anti-discrimination legislation has allowed women to enter the workforce en masse. Indeed, women now represent the majority of the college-educated labor force in the United States—and yet, the journey to playing catch-up is far from complete. Case in point: the continued lack of gender equity at work.\r\nTo be clear, equal access to work among people of different gender identities is not the same thing as gender equity at work, which involves the different experiences that people have once they get to the workplace, in terms of growth opportunities and compensation. Breaking down this gender inequity is a key part of the conversation on this week's episode of The Well+Good Podcast. In it, Well+Good director of podcasts Taylor Camille speaks with financial expert Farnoosh Torabi, host of the So Money podcast, about how and why women still lag behind men in the workplace and the societal and personal shifts that can help close the gap.\r\nPerhaps the clearest indication of this lack of gender equity at work is the gender pay gap: As of 2022, women made 82 cents for every dollar earned by men (a statistic that also fails to account for the full spectrum of gender identities). This earnings gap is the genesis of Equal Pay Day, which falls on March 14 to reflect how far into the year women would need to work to earn what men earned the year prior.\r\n\r\nAccording to Torabi, a major part of the continued challenge for women is that, "as active participants in the workplace, we're still new to this scene," she says, in the episode. Despite all of the progress that's been made, it's important to remember that as recently as 50 years ago, we weren't "invited to rise through the ranks of corporate America," she says, "so we're relatively new to the politics and the systems at work, which have largely been designed by men." In turn, we're still making up for lost time when it comes to things like networking and mentorship, which have long been a part of the experience for men in the workplace.\r\nRather than trying to simply follow in men's footsteps, however, Torabi argues that women should help blaze a new trail forward. “It shouldn’t be about playing by these established rules because then we’re just saying the old rules are [correct], and they need to persist,” says Torabi. "Let’s be more creative and think a little more inclusively and have everyone write these rules, and not just the folks who’ve been there the longest and are the loudest."	0	any-slug	blog-images/GettyImage.jpg	\N	\N	2023-03-21 15:48:23+00	2023-03-21 15:56:34.237211+00	t	f	f	1	1	\N
2	‘I’m a Weightlifter, and These Are the 6 Best Tasting Protein Powders I Drink To Build Muscle’	Protein is key to building and repairing muscle, and for those who are actively weight-lifting and looking to see “gains” will probably want to make sure they’re getting enough. Kacie Vavrek, MS, RD, LD, a registered dietitian at the Ohio State University Wexner Medical Center, says that the American College of Sports Medicine-recommended amount falls somewhere between 1.2 and 2 grams per kilogram of bodyweight. "For muscle building, athletes may need as high as 1.6 to 2.2 grams [of protein] per kilogram of body weight with strength athletes being on the higher end of this range," says Vavrek.\r\n\r\nAs a weightlifter, my main goal is to build muscle, so I usually aim for a higher protein intake between 100 and 140 grams of protein; however, reaching my protein intake goal is not always feasible through my meals. After eating breakfast, lunch, and dinner, my protein intake usually sits around 80 or 90 grams of protein for the day, which is why protein drinks can help me reach my goals.\r\n\r\nOne easy way for me to ensure I'm meeting my protein intake is by consuming protein powders—which have been shown to increase physical performance and advance recovery. My only gripe with some protein powders is that they're not flavorful enough, or taste too chalky, so I set out on a quest to find and test the best tasting protein powders on the market.	1	best-tasting-protein-powders	blog-images/Milk.jpg	\N	\N	2023-03-21 16:23:48+00	2023-03-21 16:30:54.814199+00	t	f	f	1	2	\N
\.


--
-- Data for Name: blog_posts_paragraphs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_posts_paragraphs (id, blogpost_id, blogparagraph_id) FROM stdin;
\.


--
-- Data for Name: blog_posts_post_images; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_posts_post_images (id, blogpost_id, blogpostimage_id) FROM stdin;
\.


--
-- Data for Name: blog_reply; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_reply (id, created_at, updated_at, reply_text, author_id, comment_id_id) FROM stdin;
\.


--
-- Data for Name: blog_topictype; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.blog_topictype (id, topic) FROM stdin;
\.


--
-- Data for Name: contact_us; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.contact_us (id, title, content, created_at, updated_at, author_id) FROM stdin;
1	Contact Us		2023-03-21 15:59:35+00	2023-03-21 16:03:19.942163+00	1
\.


--
-- Data for Name: contact_us_paragraphs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.contact_us_paragraphs (id, contactus_id, paragraph_id) FROM stdin;
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2023-03-20 15:28:58.865101+00	1	SENIOR BEAUTY EDITOR	1	[{"added": {}}]	14	1
2	2023-03-20 15:30:09.135918+00	1	qandeel haider's Profile	1	[{"added": {}}]	15	1
3	2023-03-21 15:55:14.201352+00	1	SKIN-CARE TIPS	1	[{"added": {}}]	20	1
4	2023-03-21 15:56:05.30271+00	1	Discoloration Forms in 3 Ways—And This Derm-Developed Product Line Targets Them All	1	[{"added": {}}, {"added": {"name": "blog paragraph", "object": "Why financial expert Farnoosh Torabi says we need to create a new workplace playbook to achieve gender equity at work"}}]	18	1
5	2023-03-21 15:56:34.242412+00	1	Discoloration Forms in 3 Ways—And This Derm-Developed Product Line Targets Them All	2	[{"changed": {"fields": ["Cover image"]}}]	18	1
6	2023-03-21 16:03:19.966123+00	1	Contact Us	1	[{"added": {}}, {"added": {"name": "paragraph", "object": "Looking to advertise?"}}, {"added": {"name": "paragraph", "object": "Are you a publicist looking for coverage of your product or client?"}}, {"added": {"name": "paragraph", "object": "Are you a journalist or a writer who wants to contribute to Well+Good?"}}, {"added": {"name": "paragraph", "object": "Do you have a media request?"}}, {"added": {"name": "paragraph", "object": "Do you have a question regarding your subscription to a Well+Good newsletter?"}}, {"added": {"name": "paragraph", "object": "Are you looking to license or reuse content published by Well+Good?"}}, {"added": {"name": "paragraph", "object": "Due to the COVID-19 pandemic, we are not currently accepting unsolicited packages by mail."}}]	11	1
7	2023-03-21 16:05:26.729409+00	1	StepByStepGuide object (1)	1	[{"added": {}}]	13	1
8	2023-03-21 16:06:04.384729+00	1	StepByStepGuide object (1)	2	[]	13	1
9	2023-03-21 16:06:32.537051+00	2	StepByStepGuide object (2)	1	[{"added": {}}]	13	1
10	2023-03-21 16:07:26.546409+00	3	StepByStepGuide object (3)	1	[{"added": {}}]	13	1
11	2023-03-21 16:07:52.750583+00	3	StepByStepGuide object (3)	2	[{"changed": {"fields": ["Sub heading", "Sub content"]}}]	13	1
12	2023-03-21 16:07:58.273784+00	3	StepByStepGuide object (3)	2	[]	13	1
13	2023-03-21 16:08:47.097762+00	4	StepByStepGuide object (4)	1	[{"added": {}}]	13	1
14	2023-03-21 16:09:39.160406+00	5	StepByStepGuide object (5)	1	[{"added": {}}]	13	1
15	2023-03-21 16:10:29.172871+00	6	StepByStepGuide object (6)	1	[{"added": {}}]	13	1
16	2023-03-21 16:12:54.299142+00	1	Terms and Conditions	1	[{"added": {}}]	25	1
17	2023-03-21 16:19:08.025634+00	1	Terms and Conditions	2	[{"added": {"name": "clause", "object": "User Conduct"}}, {"added": {"name": "clause", "object": "Restrictions On Use of Material"}}, {"added": {"name": "clause", "object": "Unsolicited Materials"}}, {"added": {"name": "clause", "object": "User\\u2019s Grant Of Limited License"}}, {"added": {"name": "clause", "object": "Linked Sites"}}, {"added": {"name": "clause", "object": "Contests, Promotions, Simulations or Games"}}, {"added": {"name": "clause", "object": "Advertising Policy, Affiliate Disclosure and Third Party Websites"}}, {"added": {"name": "clause", "object": "Intellectual Property Rights"}}, {"added": {"name": "clause", "object": "Parental Permission"}}, {"added": {"name": "clause", "object": "#iamwellandgood FOOD Recipe Submissions"}}]	25	1
18	2023-03-21 16:28:40.826951+00	2	Food	1	[{"added": {}}]	20	1
19	2023-03-21 16:29:31.077578+00	2	food-and-nutrition	2	[{"changed": {"fields": ["Category name"]}}]	20	1
20	2023-03-21 16:30:54.824489+00	2	‘I’m a Weightlifter, and These Are the 6 Best Tasting Protein Powders I Drink To Build Muscle’	1	[{"added": {}}, {"added": {"name": "blog paragraph", "object": "What to look for in best tasting protein powders"}}]	18	1
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	contenttypes	contenttype
5	sessions	session
6	silk	profile
7	silk	request
8	silk	response
9	silk	sqlquery
10	ContactUs	advertisewithwellplusgood
11	ContactUs	contactus
12	ContactUs	paragraph
13	ContactUs	stepbystepguide
14	UserProfile	role
15	UserProfile	userprofile
16	UserManagement	user
17	blog	blogparagraph
18	blog	blogpost
19	blog	blogpostimage
20	blog	category
21	blog	comment
22	blog	topictype
23	blog	reply
24	blog	blogstepbystepguide
25	legal	termsandconditions
26	legal	useragreement
27	legal	clause
28	ContactUs	privacypolicy
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	UserManagement	0001_initial	2023-03-20 15:03:05.464054+00
2	UserProfile	0001_initial	2023-03-20 15:03:08.639096+00
3	blog	0001_initial	2023-03-20 15:03:12.316472+00
4	blog	0002_blogstepbystepguide_list_style	2023-03-20 15:03:12.332707+00
5	blog	0003_alter_blogstepbystepguide_list_style	2023-03-20 15:03:12.35405+00
6	ContactUs	0001_initial	2023-03-20 15:03:16.515731+00
7	contenttypes	0001_initial	2023-03-20 15:03:20.039856+00
8	admin	0001_initial	2023-03-20 15:03:20.087524+00
9	admin	0002_logentry_remove_auto_add	2023-03-20 15:03:20.108849+00
10	admin	0003_logentry_add_action_flag_choices	2023-03-20 15:03:20.155503+00
11	contenttypes	0002_remove_content_type_name	2023-03-20 15:03:20.195124+00
12	auth	0001_initial	2023-03-20 15:03:20.322752+00
13	auth	0002_alter_permission_name_max_length	2023-03-20 15:03:20.34899+00
14	auth	0003_alter_user_email_max_length	2023-03-20 15:03:20.359283+00
15	auth	0004_alter_user_username_opts	2023-03-20 15:03:20.367012+00
16	auth	0005_alter_user_last_login_null	2023-03-20 15:03:20.40001+00
17	auth	0006_require_contenttypes_0002	2023-03-20 15:03:20.406296+00
18	auth	0007_alter_validators_add_error_messages	2023-03-20 15:03:20.419013+00
19	auth	0008_alter_user_username_max_length	2023-03-20 15:03:20.428727+00
20	auth	0009_alter_user_last_name_max_length	2023-03-20 15:03:20.436541+00
21	auth	0010_alter_group_name_max_length	2023-03-20 15:03:20.467713+00
22	auth	0011_update_proxy_permissions	2023-03-20 15:03:20.521308+00
23	auth	0012_alter_user_first_name_max_length	2023-03-20 15:03:20.529877+00
24	legal	0001_initial	2023-03-20 15:03:20.607415+00
25	sessions	0001_initial	2023-03-20 15:03:20.654843+00
26	silk	0001_initial	2023-03-20 15:03:20.794916+00
27	silk	0002_auto_update_uuid4_id_field	2023-03-20 15:03:20.811468+00
28	silk	0003_request_prof_file	2023-03-20 15:03:20.82519+00
29	silk	0004_request_prof_file_storage	2023-03-20 15:03:20.834551+00
30	silk	0005_increase_request_prof_file_length	2023-03-20 15:03:20.84687+00
31	silk	0006_fix_request_prof_file_blank	2023-03-20 15:03:20.886878+00
32	silk	0007_sqlquery_identifier	2023-03-20 15:03:20.900035+00
33	silk	0008_sqlquery_analysis	2023-03-20 15:03:20.911483+00
34	ContactUs	0002_alter_stepbystepguide_list_style	2023-03-20 15:07:54.378004+00
35	ContactUs	0003_alter_stepbystepguide_contact_us_privacypolicy_and_more	2023-03-20 15:24:42.529928+00
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
ajotuuuzze3ycf7ok6d8iv6x1f7bw75s	.eJxVjE0OwiAYBe_C2hCgJRSX7j0D4fuTqoGktCvj3bVJF7p9M_NeKuVtLWnrvKSZ1FlZdfrdIOOD6w7onuutaWx1XWbQu6IP2vW1ET8vh_t3UHIv35ohRgLK0dAgk4BhKx6JBiOTtd7IaBGdMFJ2no0HlgDGhSAWxyhOvT8jWDlH:1peH42:EYj7dycz-oJOTK27ASoEZ5oWxufFdBnB7IKDmlZLBVI	2023-04-03 15:04:46.879041+00
\.


--
-- Data for Name: legal_clause; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.legal_clause (id, clue_title, clue_content, "order", terms_and_conditions_id) FROM stdin;
1	User Conduct	This Web Site and any communications service, including the capability to contribute material through the contribution form (each such submission, a ” Contribution”), chat room, message board, newsgroup, or other interactive service that may be available to you on or through this site (collectively, the “Services”) are provided to you solely for entertainment purposes. By using the Web Site and Services you agree: (a) to provide true, accurate, current and complete information about yourself as prompted by the subscription form, contribution form and any registration form. If any information provided by you is untrue, inaccurate, not current or incomplete, Well+Good reserves the right to terminate your subscription and refuse any and all current or future use of the Services.\r\n\r\nWithout limitation of the foregoing, you agree to not use the Web Site or Services to:\r\n\r\n* Upload, post, publish, email, reproduce, distribute or otherwise transmit any information, data, text, music, sound, photographs, graphics, video, messages or other materials, including any Contribution, (collectively, ” Content”), that is unlawful, harmful, threatening, embarrassing, abusive, harassing, defamatory, vulgar, obscene, libelous, deceptive, fraudulent, contains explicit or graphic descriptions or accounts of sexual acts, invasive of another’s privacy, or hateful;\r\n* “Stalk” another;\r\n* Upload, post, publish, email, reproduce, distribute or otherwise transmit any Content that victimizes, harasses, degrades, or intimidates an individual or group of individuals on the basis of religion, gender, sexual orientation, race, ethnicity, age, or disability;\r\n* Harm minors in any way;\r\n* Impersonate any person or entity, including, but not limited to, a Well+Good official, or falsely state or otherwise misrepresent your affiliation with a person or entity;\r\n* Forge headers or otherwise manipulate identifiers in order to disguise the origin of any Content transmitted to or through the Web Site;\r\n* Upload, post, publish, email, reproduce, distribute or otherwise transmit any Content that you do not have a right to transmit under any law or under contractual or fiduciary relationships (such as inside information, proprietary and confidential information learned or disclosed as part of employment relationships or under nondisclosure agreements);\r\n* Upload, post, publish, email, reproduce, distribute or otherwise transmit any Content that infringes any patent, trademark, trade secret, copyright or other proprietary rights of any party;\r\n* Upload, post, publish, email, reproduce, distribute or otherwise transmit any unsolicited or unauthorized advertising, promotional materials, “junk mail,” “Spam,” “chain letters,” “pyramid schemes,” or any other form of solicitation;\r\n* Upload, post, publish, email, reproduce, distribute or otherwise transmit any material that contains software viruses, Trojan horses, worms, time bombs, cancelbots, or any other computer code, files or programs designed to interrupt, destroy, or limit the functionality of any computer software or hardware or telecommunications equipment or any other similarly destructive activity, or surreptitiously intercept or expropriate any system, data or personal information;\r\n* Act in a manner that negatively affects other users’ ability to engage in the Web Site or Services;\r\n* Engage in any activity that is contrary to or which would adversely affect the purpose or intention of the Web Site or Services, including but not limited to, actually or attempting to manipulate, corrupt or otherwise affect the outcome of the Services, in whole or part, by, among other methods, subscribing another party without their authorization or registering multiple subscriptions under the same or different names;\r\n* Interfere with or disrupt the Service or servers or networks connected to the Service, or disobey any requirements, procedures, policies or regulations of networks connected to the Service; or\r\n* Intentionally or unintentionally violate any applicable local, state, national or international law.\r\n\r\nYou also agree that you will not harvest, collect or store information about the users of this Web Site or the Content posted by others on this Web Site or use such information for any purpose inconsistent with the purpose of this Web Site or for the purpose of transmitting or facilitating transmission of unsolicited bulk electronic mail or communications.\r\n\r\nYou acknowledge that Well+Good is not responsible for material submitted to Well+Good or posted to the Web Site by users. Well+Good does not pre-screen, monitor, review or edit the Content posted by users. However, Well+Good and its designees have the right (but not the obligation) at their sole discretion to refuse or remove any Content, in whole or part, that, in Well+Good’s judgment, does not comply with these Terms and Conditions or is otherwise undesirable, inappropriate or inaccurate. Well+Good is not responsible for any failure, non-failure or delay in removing such Content. You will remain responsible for the accuracy, copyright compliance, legality, decency, or any other aspect of such submitted material, including any Contribution or part thereof, or other communication to Well+Good. You agree to immediately notify Well+Good of any unauthorized use of the Service or any other breach of security known or suspected by you.\r\nYou acknowledge and agree that Well+Good may preserve Content and may also disclose Content if required to do so by law or in the good faith belief that such preservation or disclosure is reasonably necessary to: (a) comply with legal process; (b) enforce these Terms and Conditions; (c) respond to claims that any Content violates the rights of third-parties; or (d) protect the rights, property, or personal safety of Well+Good, its users or the public.\r\nYou understand that the technical processing and transmission of the Web Site, including your Content, may involve (a) transmissions over various networks; and (b) changes to conform and adapt to technical requirements of connecting networks or devices. Well+Good assumes no responsibility for the deletion or failure to store postings, Contributions or other information submitted by you or other users to www.wellandgoodnyc.com.\r\n\r\nAny or all Content on the Web Site may be purged periodically in Well+Good’s sole discretion. You acknowledge and agree that Content you view, submit or post is at your own discretion and risk, including any reliance on the accuracy, completeness, or usefulness of such Content. You acknowledge that you may not rely on any information, data, text, music, sound, photographs, graphics, video, messages or other materials created by Well+Good or submitted to Well+Good, including Content. You further acknowledge and agree that the views expressed on the Web Site do not necessarily reflect the views of Well+Good, and Well+Good does not support or endorse Content (including any Contribution, whether or not edited by Well+Good or its designee or presented on the Web Site edited or unedited, in whole or in part, or alone or with other content) posted or submitted by you or any User.	0	1
2	Restrictions On Use of Material	The content on this Web Site is intended for entertainment purposes only. Except as expressly permitted, you agree not to use the Web Site for sale, trade or other commercial purposes, and, you may not modify, copy, publish, display, transmit, adapt or in any way exploit the content of the Web Site. Only if you obtain prior written consent from us — and from all other entities with an interest in the relevant intellectual property — may you publish, display or commercially exploit any material from the Web Site. To seek our permission, you may write to us at our address provided below. If permission is granted by us and by all other entities with an interest in the relevant intellectual property, you may not change or delete any author attribution, trademark, legend or copyright notice.\r\nYou must abide by all additional copyright notices or other restrictions contained on the Web Site.	0	1
3	Unsolicited Materials	In operating this site, Well+Good does not solicit nor does it wish to receive any confidential, secret or proprietary information or other material from you through the Web Site or Well+Good mail and email addresses, or in any other way. Any information or material submitted or sent to Well+Good, will be deemed not to be confidential or secret. By submitting or sending information or other material to Well+Good you represent and warrant that the information is original to you and that no other party has any rights to the material.	0	1
4	User’s Grant Of Limited License	By communicating with Well+Good, including submitting or sending Content, a Contribution or other information or material to www.wellandgoodnyc.com, you grant Well+Good the royalty-free, unrestricted, world-wide, perpetual, irrevocable, non-exclusive and fully sub-licensable right and license to use, reproduce, modify, adapt, publish, translate, create derivative works from, distribute, perform and display such Content (in whole or part), including any information, suggestions, ideas, drawings or concepts contained in such Content, worldwide and/or to incorporate it in other works in any form, media, or technology now known or later developed. Such license includes incorporating a Contribution, in whole or in part, into a Well+Good feature. You will remain responsible for the accuracy, copyright compliance, legality, decency, or any other aspect of such submitted material, including any Contribution or part thereof, or other communication to Well+Good.\r\nYou also warrant that any “moral rights” in posted materials have been waived.	0	1
5	Linked Sites	You may be able to link to third parties’ Web Sites (“Linked Sites”) from the Well+Good Web Site. Linked Sites are not, however, reviewed, controlled, or examined by Well+Good in any way and Well+Good is not responsible for the content, availability, advertising, products or other materials of any such Linked Sites, or any additional links contained therein. These links do not imply Well+Good’s endorsement of or association with the Linked Sites. It is your sole responsibility to comply with the appropriate terms of service of the Linked Sites as well as with any other obligation under copyright, secrecy, defamation, decency, privacy, security and export laws related to the use of such Linked Sites and any content contained thereon. In no event shall Well+Good be liable, directly or indirectly, to anyone for any loss or damage arising from or occasioned by the creation or use of the Linked Sites or the information or material accessed-through these Linked Sites. You should direct any concerns to that site’s administrator or webmaster. Well+Good reserves the exclusive right, at its sole discretion, to add, change, decline or remove, without notice, any feature or link to any of the Linked Sites from the Web Site and/or introduce different features or links to different users.\r\n\r\nSPECIAL NOTICE: THE LINKED SITES MAY CONTAIN CONTENT AND GRAPHICS THAT CONTAIN SEXUALLY EXPLICIT MATERIAL UNSUITABLE FOR MINORS, OR THAT MAY OTHERWISE BE OFFENSIVE. IF YOU ENTER THESE LINKED SITES, YOU ASSERT THAT YOU ARE OF LEGAL ADULT AGE IN YOUR JURISDICTION TO VIEW SUCH MATERIALS AND THAT THE VIEWING, READING, AND/OR DOWNLOADING OF CONTENT FROM THESE LINKED SITES DOES NOT VIOLATE THE COMMUNITY STANDARDS OF YOUR LOCALITY, CITY, TOWN, COUNTY, STATE, PROVINCE, COUNTRY OR OTHER COMMUNITY TO WHICH YOU BELONG, AND/OR FROM WHICH YOU ACCESS THESE LINKED SITES.\r\nPermission must be granted by us for any type of link to www.wellandgoodnyc.com. To seek our permission, you may write to alexia@wellandgoodnyc.com. We reserve the right, however, to rescind any permission granted by us to link through any type of link, and to require termination of any such link to the Web Site, at our discretion at any time.	0	1
6	Contests, Promotions, Simulations or Games	>From time to time, Well+Good may offer as part of the Services, either on or through the Web Site, contests, promotions, simulations or games (collectively, “Contests”). To participate in Contests, subscribers may be required to complete a registration form. Upon submission, all registrations become the exclusive property of Well+Good. Registered users (each, a “Registered User”) are permitted only one account. Registered Users with more than one account are subject to immediate disqualification from any Contest, unless the description of the Contest expressly invites a user to register multiple times. Well+Good, at its sole discretion, may suspend or revoke the registration of any Registered User.\r\nRegistered Users agree to release Well+Good and its agents, advertisers, sponsors or promotional partners, from all liability arising from participation in any Contest located on, or accessed through, the Web Site. Well+Good is not responsible for technical, hardware or software failures of any kind, lost or unavailable network connections, or failed, incomplete, garbled or delayed computer transmissions which may limit any Registered User’s ability to participate in any Game.\r\nEach Registered User agrees to be bound by the rules of any Contest and by the rules of fair play and consideration of fellow Registered User. A Registered User who violates any of the rules or guidelines for behavior published on the Web Site, or the site where the Contest is conducted, are subject to immediate disqualification and revocation of their registration. Well+Good is under no obligation to award any prize to any Registered User who violates a published rule or guideline.\r\nSome Contest may offer prizes to Registered Users. All prizes are subject to the official game or contest rules published with that Contest. Well+Good reserves the right to cancel, terminate or alter any Contest or the rules thereof at any time without prior notification.	0	1
7	Advertising Policy, Affiliate Disclosure and Third Party Websites	Well+Good accepts paid advertisements including but not limited to CPC (cost-per-click) advertisements and banner advertisements; furthermore, Well+Good does, from time to time, participate in affiliate programs.   When you click on some, but not all, links at Well+Good or purchase from some, but not all, companies mentioned at Well+Good, Well+Good and its administrator will earn money from these programs.   Well+Good does not conduct paid reviews; however, Well+Good will accept product to review.\r\n\r\nWell+Good does not endorse, make claim to or verify any of the information found on third-party websites including advertisers and affiliates.   Your use of third party sites is at your own risk.	0	1
8	Intellectual Property Rights	All materials contained in this Web Site are the copyrighted property of Well+Good and its affiliates or licensors. As between Well+Good and you, Well+Good is the sole owner of all content on the Web Site, including without limitation, all applicable U.S. and non-U.S. copyrights, patents, trademarks, and trade secrets, and other intellectual property rights thereto. Except as otherwise specifically provided in these Terms and Conditions, you may not download or save a copy of the Web Site or any portion thereof, for any purpose. You may, however, print a copy of individual screens appearing as part of the Web Site solely for your personal, non-commercial use or records, provided that any marks, logos or other legends that appear on the copied screens remain on, and are not removed from the printed or stored images of such screens. All title and intellectual property rights in and to the content of the Linked Sites is the property of the respective content owner and may be protected by applicable copyright or other intellectual property laws and treaties.	0	1
9	Parental Permission	This Web Site is not intended to be a children’s site, therefore, some of the available information may concern certain topics that may not be appropriate for children. Well+Good may, at its discretion, require users under 18 to obtain the consent of a parent or guardian to view certain content, and Well+Good may limit access to certain content to users above a specified age. You agree to abide by any such restrictions, and not to help anyone avoid these restrictions.	0	1
10	#iamwellandgood FOOD Recipe Submissions	By submitting your recipe and photo to wellandgood.com, you are representing that you are the author and copyright owner of the submission and/or have all rights necessary to provide this submission (including images) to wellandgood.com and you have granted wellandgood.com, a non-exclusive, irrevocable, worldwide, perpetual, fully-paid up, royalty-free transferable right and license, with right to sub-license, publish, republish, resell, distribute, copy and edit the submission an unlimited number of times in all forms and all media whether now known or to become known in the future.	0	1
\.


--
-- Data for Name: legal_termsandconditions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.legal_termsandconditions (id, title, content, date_created, date_updated) FROM stdin;
1	Terms and Conditions	PLEASE READ THE FOLLOWING TERMS AND CONDITIONS CAREFULLY. The www.wellandgoodnyc.com Web site (the “Web Site” or “www.wellandgoodnyc.com”) is provided by Well + GoodNYC (“Well + Good”) and/or its affiliates and subsidiaries for your and others’ personal, non-commercial enjoyment, subject to the terms of these terms and conditions of use and all modifications thereto (“Terms and Conditions”), and the rules that may be published from time to time by Well+Good. By using this site, you are deemed to have agreed to these terms and conditions of use. Well+Good may change the Terms and Conditions from time to time and at any time, and without actual notice to you. All such changes to these Terms and Conditions will appear on www.wellandgoodnyc.com. By using this site after we post any changes, you agree to accept those changes, whether or not you have reviewed them. If at any time you choose not to accept these Terms and Conditions of use, please do not use this site.	2023-03-21 16:12:54.294786+00	2023-03-21 16:19:08.013687+00
\.


--
-- Data for Name: legal_useragreement; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.legal_useragreement (id, agreed_date, terms_and_conditions_id, user_id) FROM stdin;
\.


--
-- Data for Name: silk_profile; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.silk_profile (id, name, start_time, end_time, time_taken, file_path, line_num, end_line_num, func_name, exception_raised, dynamic, request_id) FROM stdin;
\.


--
-- Data for Name: silk_profile_queries; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.silk_profile_queries (id, profile_id, sqlquery_id) FROM stdin;
\.


--
-- Data for Name: silk_request; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.silk_request (id, path, query_params, raw_body, body, method, start_time, view_name, end_time, time_taken, encoded_headers, meta_time, meta_num_queries, meta_time_spent_queries, pyprofile, num_sql_queries, prof_file) FROM stdin;
\.


--
-- Data for Name: silk_response; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.silk_response (id, status_code, raw_body, body, encoded_headers, request_id) FROM stdin;
\.


--
-- Data for Name: silk_sqlquery; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.silk_sqlquery (id, query, start_time, end_time, time_taken, traceback, request_id, identifier, analysis) FROM stdin;
\.


--
-- Data for Name: step_by_step_guides; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.step_by_step_guides (id, sbs_guide_number, sub_heading, sub_content, sbs_index, blog_paragraphs_id, blog_post_id, sbs_self_refer_id, list_style) FROM stdin;
\.


--
-- Data for Name: step_by_step_guides_contact_us_specific; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.step_by_step_guides_contact_us_specific (id, list_style, sbs_guide_number, sub_heading, sub_content, sbs_index, blog_paragraphs_id, contact_us_id, sbs_self_refer_id, privacy_policy_id) FROM stdin;
1	simple	0	Beauty	Senior Beauty Editor Zoe Weiner (zoe.weiner@wellandgood.com) and/or Senior Commerce Editor Gina Vaynshteyn (gina.vaynshteyn@wellandgood.com)	0	2	1	\N	\N
2	simple	0	Fitness:	Senior Fitness Editor Jennifer Heimlick (jennifer.heimlich@wellandgood.com)	0	\N	1	\N	\N
3	simple	0	Health:	Senior Health Editor Allison Tsai (allison.tsai@wellandgood.com)	0	2	1	\N	\N
4	simple	0	Lifestyle	(including Sex and Relationships, Travel, Personal Finance, Mindfulness): Deputy Editor Alexis Berger (alexis.berger@wellandgood.com)	0	2	1	\N	\N
5	simple	0	Any other product or client pitches	Senior Commerce Editor Gina Vaynshteyn (gina.vaynshteyn@wellandgood.com) or Deputy Editor Samantha Leal (samantha.leal@wellandgood.com)	0	2	1	\N	\N
6	simple	0	Talent for Events	com.qandeelhaider@gmail.com	0	2	1	\N	\N
\.


--
-- Name: Advertise-with-well-plus-good_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."Advertise-with-well-plus-good_id_seq"', 1, false);


--
-- Name: Advertise-with-well-plus-good_paragraphs_advertise_well__id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."Advertise-with-well-plus-good_paragraphs_advertise_well__id_seq"', 1, false);


--
-- Name: ContactUs_paragraph_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."ContactUs_paragraph_id_seq"', 7, true);


--
-- Name: ContactUs_paragraph_step_by_step_guide_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."ContactUs_paragraph_step_by_step_guide_id_seq"', 1, false);


--
-- Name: PrivacyPolicy_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."PrivacyPolicy_id_seq"', 1, false);


--
-- Name: PrivacyPolicy_paragraphs_privacy_policy_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."PrivacyPolicy_paragraphs_privacy_policy_id_seq"', 1, false);


--
-- Name: UserManagement_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."UserManagement_user_id_seq"', 1, true);


--
-- Name: UserProfile_role_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."UserProfile_role_id_seq"', 1, true);


--
-- Name: UserProfile_userprofile_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."UserProfile_userprofile_id_seq"', 1, true);


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 112, true);


--
-- Name: blog_blogparagraph_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_blogparagraph_id_seq', 2, true);


--
-- Name: blog_blogparagraph_step_by_step_guide_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_blogparagraph_step_by_step_guide_id_seq', 1, false);


--
-- Name: blog_blogpostimage_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_blogpostimage_id_seq', 1, false);


--
-- Name: blog_category_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_category_id_seq', 2, true);


--
-- Name: blog_comment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_comment_id_seq', 1, false);


--
-- Name: blog_posts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_posts_id_seq', 2, true);


--
-- Name: blog_posts_paragraphs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_posts_paragraphs_id_seq', 1, false);


--
-- Name: blog_posts_post_images_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_posts_post_images_id_seq', 1, false);


--
-- Name: blog_reply_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_reply_id_seq', 1, false);


--
-- Name: blog_topictype_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.blog_topictype_id_seq', 1, false);


--
-- Name: contact_us_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.contact_us_id_seq', 1, true);


--
-- Name: contact_us_paragraphs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.contact_us_paragraphs_id_seq', 1, false);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 20, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 28, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 35, true);


--
-- Name: legal_clause_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.legal_clause_id_seq', 10, true);


--
-- Name: legal_termsandconditions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.legal_termsandconditions_id_seq', 1, true);


--
-- Name: legal_useragreement_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.legal_useragreement_id_seq', 1, false);


--
-- Name: silk_profile_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.silk_profile_id_seq', 1, false);


--
-- Name: silk_profile_queries_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.silk_profile_queries_id_seq', 1, false);


--
-- Name: silk_sqlquery_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.silk_sqlquery_id_seq', 1, false);


--
-- Name: step_by_step_guides_contact_us_specific_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.step_by_step_guides_contact_us_specific_id_seq', 6, true);


--
-- Name: step_by_step_guides_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.step_by_step_guides_id_seq', 1, false);


--
-- Name: Advertise-with-well-plus-good_paragraphs_advertise_well_good Advertise-with-well-plus-good_paragraphs_advertise_well_go_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Advertise-with-well-plus-good_paragraphs_advertise_well_good"
    ADD CONSTRAINT "Advertise-with-well-plus-good_paragraphs_advertise_well_go_pkey" PRIMARY KEY (id);


--
-- Name: Advertise-with-well-plus-good Advertise-with-well-plus-good_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Advertise-with-well-plus-good"
    ADD CONSTRAINT "Advertise-with-well-plus-good_pkey" PRIMARY KEY (id);


--
-- Name: Advertise-with-well-plus-good_paragraphs_advertise_well_good Advertise-with-well-plus_advertisewithwellplusgoo_0035f0f5_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Advertise-with-well-plus-good_paragraphs_advertise_well_good"
    ADD CONSTRAINT "Advertise-with-well-plus_advertisewithwellplusgoo_0035f0f5_uniq" UNIQUE (advertisewithwellplusgood_id, paragraph_id);


--
-- Name: ContactUs_paragraph ContactUs_paragraph_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ContactUs_paragraph"
    ADD CONSTRAINT "ContactUs_paragraph_pkey" PRIMARY KEY (id);


--
-- Name: ContactUs_paragraph_step_by_step_guide ContactUs_paragraph_step_by_step_guide_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ContactUs_paragraph_step_by_step_guide"
    ADD CONSTRAINT "ContactUs_paragraph_step_by_step_guide_pkey" PRIMARY KEY (id);


--
-- Name: ContactUs_paragraph_step_by_step_guide ContactUs_paragraph_step_paragraph_id_stepbystepg_316b4871_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ContactUs_paragraph_step_by_step_guide"
    ADD CONSTRAINT "ContactUs_paragraph_step_paragraph_id_stepbystepg_316b4871_uniq" UNIQUE (paragraph_id, stepbystepguide_id);


--
-- Name: PrivacyPolicy_paragraphs_privacy_policy PrivacyPolicy_paragraphs_privacy_policy_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."PrivacyPolicy_paragraphs_privacy_policy"
    ADD CONSTRAINT "PrivacyPolicy_paragraphs_privacy_policy_pkey" PRIMARY KEY (id);


--
-- Name: PrivacyPolicy_paragraphs_privacy_policy PrivacyPolicy_paragraphs_privacypolicy_id_paragra_012f2caa_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."PrivacyPolicy_paragraphs_privacy_policy"
    ADD CONSTRAINT "PrivacyPolicy_paragraphs_privacypolicy_id_paragra_012f2caa_uniq" UNIQUE (privacypolicy_id, paragraph_id);


--
-- Name: PrivacyPolicy PrivacyPolicy_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."PrivacyPolicy"
    ADD CONSTRAINT "PrivacyPolicy_pkey" PRIMARY KEY (id);


--
-- Name: UserManagement_user UserManagement_user_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserManagement_user"
    ADD CONSTRAINT "UserManagement_user_email_key" UNIQUE (email);


--
-- Name: UserManagement_user UserManagement_user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserManagement_user"
    ADD CONSTRAINT "UserManagement_user_pkey" PRIMARY KEY (id);


--
-- Name: UserProfile_role UserProfile_role_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserProfile_role"
    ADD CONSTRAINT "UserProfile_role_pkey" PRIMARY KEY (id);


--
-- Name: UserProfile_userprofile UserProfile_userprofile_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserProfile_userprofile"
    ADD CONSTRAINT "UserProfile_userprofile_pkey" PRIMARY KEY (id);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: blog_blogparagraph blog_blogparagraph_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_blogparagraph
    ADD CONSTRAINT blog_blogparagraph_pkey PRIMARY KEY (id);


--
-- Name: blog_blogparagraph_step_by_step_guide blog_blogparagraph_step__blogparagraph_id_blogste_a1c9acad_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_blogparagraph_step_by_step_guide
    ADD CONSTRAINT blog_blogparagraph_step__blogparagraph_id_blogste_a1c9acad_uniq UNIQUE (blogparagraph_id, blogstepbystepguide_id);


--
-- Name: blog_blogparagraph_step_by_step_guide blog_blogparagraph_step_by_step_guide_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_blogparagraph_step_by_step_guide
    ADD CONSTRAINT blog_blogparagraph_step_by_step_guide_pkey PRIMARY KEY (id);


--
-- Name: blog_blogpostimage blog_blogpostimage_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_blogpostimage
    ADD CONSTRAINT blog_blogpostimage_pkey PRIMARY KEY (id);


--
-- Name: blog_category blog_category_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_category
    ADD CONSTRAINT blog_category_pkey PRIMARY KEY (id);


--
-- Name: blog_comment blog_comment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_comment
    ADD CONSTRAINT blog_comment_pkey PRIMARY KEY (id);


--
-- Name: blog_posts_paragraphs blog_posts_paragraphs_blogpost_id_blogparagrap_293720d1_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts_paragraphs
    ADD CONSTRAINT blog_posts_paragraphs_blogpost_id_blogparagrap_293720d1_uniq UNIQUE (blogpost_id, blogparagraph_id);


--
-- Name: blog_posts_paragraphs blog_posts_paragraphs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts_paragraphs
    ADD CONSTRAINT blog_posts_paragraphs_pkey PRIMARY KEY (id);


--
-- Name: blog_posts blog_posts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts
    ADD CONSTRAINT blog_posts_pkey PRIMARY KEY (id);


--
-- Name: blog_posts_post_images blog_posts_post_images_blogpost_id_blogpostimag_ee4f6bc8_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts_post_images
    ADD CONSTRAINT blog_posts_post_images_blogpost_id_blogpostimag_ee4f6bc8_uniq UNIQUE (blogpost_id, blogpostimage_id);


--
-- Name: blog_posts_post_images blog_posts_post_images_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts_post_images
    ADD CONSTRAINT blog_posts_post_images_pkey PRIMARY KEY (id);


--
-- Name: blog_posts blog_posts_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts
    ADD CONSTRAINT blog_posts_slug_key UNIQUE (slug);


--
-- Name: blog_reply blog_reply_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_reply
    ADD CONSTRAINT blog_reply_pkey PRIMARY KEY (id);


--
-- Name: blog_topictype blog_topictype_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_topictype
    ADD CONSTRAINT blog_topictype_pkey PRIMARY KEY (id);


--
-- Name: contact_us_paragraphs contact_us_paragraphs_contactus_id_paragraph_id_9871ed5d_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_us_paragraphs
    ADD CONSTRAINT contact_us_paragraphs_contactus_id_paragraph_id_9871ed5d_uniq UNIQUE (contactus_id, paragraph_id);


--
-- Name: contact_us_paragraphs contact_us_paragraphs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_us_paragraphs
    ADD CONSTRAINT contact_us_paragraphs_pkey PRIMARY KEY (id);


--
-- Name: contact_us contact_us_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_us
    ADD CONSTRAINT contact_us_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: legal_clause legal_clause_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.legal_clause
    ADD CONSTRAINT legal_clause_pkey PRIMARY KEY (id);


--
-- Name: legal_termsandconditions legal_termsandconditions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.legal_termsandconditions
    ADD CONSTRAINT legal_termsandconditions_pkey PRIMARY KEY (id);


--
-- Name: legal_useragreement legal_useragreement_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.legal_useragreement
    ADD CONSTRAINT legal_useragreement_pkey PRIMARY KEY (id);


--
-- Name: silk_profile silk_profile_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_profile
    ADD CONSTRAINT silk_profile_pkey PRIMARY KEY (id);


--
-- Name: silk_profile_queries silk_profile_queries_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_profile_queries
    ADD CONSTRAINT silk_profile_queries_pkey PRIMARY KEY (id);


--
-- Name: silk_profile_queries silk_profile_queries_profile_id_sqlquery_id_b2403d9b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_profile_queries
    ADD CONSTRAINT silk_profile_queries_profile_id_sqlquery_id_b2403d9b_uniq UNIQUE (profile_id, sqlquery_id);


--
-- Name: silk_request silk_request_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_request
    ADD CONSTRAINT silk_request_pkey PRIMARY KEY (id);


--
-- Name: silk_response silk_response_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_response
    ADD CONSTRAINT silk_response_pkey PRIMARY KEY (id);


--
-- Name: silk_response silk_response_request_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_response
    ADD CONSTRAINT silk_response_request_id_key UNIQUE (request_id);


--
-- Name: silk_sqlquery silk_sqlquery_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_sqlquery
    ADD CONSTRAINT silk_sqlquery_pkey PRIMARY KEY (id);


--
-- Name: step_by_step_guides_contact_us_specific step_by_step_guides_contact_us_specific_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.step_by_step_guides_contact_us_specific
    ADD CONSTRAINT step_by_step_guides_contact_us_specific_pkey PRIMARY KEY (id);


--
-- Name: step_by_step_guides step_by_step_guides_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.step_by_step_guides
    ADD CONSTRAINT step_by_step_guides_pkey PRIMARY KEY (id);


--
-- Name: Advertise-with-well-plus-g_advertisewithwellplusgood__acb0181f; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "Advertise-with-well-plus-g_advertisewithwellplusgood__acb0181f" ON public."Advertise-with-well-plus-good_paragraphs_advertise_well_good" USING btree (advertisewithwellplusgood_id);


--
-- Name: Advertise-with-well-plus-g_author_advertise_well_good_1d6b4089; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "Advertise-with-well-plus-g_author_advertise_well_good_1d6b4089" ON public."Advertise-with-well-plus-good" USING btree (author_advertise_well_good_id);


--
-- Name: Advertise-with-well-plus-g_paragraph_id_b73260b6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "Advertise-with-well-plus-g_paragraph_id_b73260b6" ON public."Advertise-with-well-plus-good_paragraphs_advertise_well_good" USING btree (paragraph_id);


--
-- Name: ContactUs_paragraph_advertise_with_us_id_831f2a83; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "ContactUs_paragraph_advertise_with_us_id_831f2a83" ON public."ContactUs_paragraph" USING btree (advertise_with_us_id);


--
-- Name: ContactUs_paragraph_contact_us_id_ebbe2d78; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "ContactUs_paragraph_contact_us_id_ebbe2d78" ON public."ContactUs_paragraph" USING btree (contact_us_id);


--
-- Name: ContactUs_paragraph_step_b_stepbystepguide_id_58b10e85; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "ContactUs_paragraph_step_b_stepbystepguide_id_58b10e85" ON public."ContactUs_paragraph_step_by_step_guide" USING btree (stepbystepguide_id);


--
-- Name: ContactUs_paragraph_step_by_step_guide_paragraph_id_311e4cfa; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "ContactUs_paragraph_step_by_step_guide_paragraph_id_311e4cfa" ON public."ContactUs_paragraph_step_by_step_guide" USING btree (paragraph_id);


--
-- Name: PrivacyPolicy_author_privacy_policy_id_4095f766; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "PrivacyPolicy_author_privacy_policy_id_4095f766" ON public."PrivacyPolicy" USING btree (author_privacy_policy_id);


--
-- Name: PrivacyPolicy_paragraphs_p_privacypolicy_id_f81daa91; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "PrivacyPolicy_paragraphs_p_privacypolicy_id_f81daa91" ON public."PrivacyPolicy_paragraphs_privacy_policy" USING btree (privacypolicy_id);


--
-- Name: PrivacyPolicy_paragraphs_privacy_policy_paragraph_id_7fc7e3a9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "PrivacyPolicy_paragraphs_privacy_policy_paragraph_id_7fc7e3a9" ON public."PrivacyPolicy_paragraphs_privacy_policy" USING btree (paragraph_id);


--
-- Name: UserManagement_user_email_6674a52f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "UserManagement_user_email_6674a52f_like" ON public."UserManagement_user" USING btree (email varchar_pattern_ops);


--
-- Name: UserProfile_userprofile_role_id_78ffcdd4; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "UserProfile_userprofile_role_id_78ffcdd4" ON public."UserProfile_userprofile" USING btree (role_id);


--
-- Name: UserProfile_userprofile_user_id_28edbd3a; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "UserProfile_userprofile_user_id_28edbd3a" ON public."UserProfile_userprofile" USING btree (user_id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: blog_blogparagraph_blog_post_id_eeb81534; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_blogparagraph_blog_post_id_eeb81534 ON public.blog_blogparagraph USING btree (blog_post_id);


--
-- Name: blog_blogparagraph_paragraphs_self_refer_id_46301407; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_blogparagraph_paragraphs_self_refer_id_46301407 ON public.blog_blogparagraph USING btree (paragraphs_self_refer_id);


--
-- Name: blog_blogparagraph_step_by_blogstepbystepguide_id_62ef3a47; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_blogparagraph_step_by_blogstepbystepguide_id_62ef3a47 ON public.blog_blogparagraph_step_by_step_guide USING btree (blogstepbystepguide_id);


--
-- Name: blog_blogparagraph_step_by_step_guide_blogparagraph_id_726fe9db; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_blogparagraph_step_by_step_guide_blogparagraph_id_726fe9db ON public.blog_blogparagraph_step_by_step_guide USING btree (blogparagraph_id);


--
-- Name: blog_comment_author_id_4f11e2e0; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_comment_author_id_4f11e2e0 ON public.blog_comment USING btree (author_id);


--
-- Name: blog_comment_post_id_580e96ef; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_comment_post_id_580e96ef ON public.blog_comment USING btree (post_id);


--
-- Name: blog_posts_author_id_6f561d00; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_posts_author_id_6f561d00 ON public.blog_posts USING btree (author_id);


--
-- Name: blog_posts_category_id_4316690d; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_posts_category_id_4316690d ON public.blog_posts USING btree (category_id);


--
-- Name: blog_posts_paragraphs_blogparagraph_id_b41e2b18; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_posts_paragraphs_blogparagraph_id_b41e2b18 ON public.blog_posts_paragraphs USING btree (blogparagraph_id);


--
-- Name: blog_posts_paragraphs_blogpost_id_c2fc2394; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_posts_paragraphs_blogpost_id_c2fc2394 ON public.blog_posts_paragraphs USING btree (blogpost_id);


--
-- Name: blog_posts_post_images_blogpost_id_2c233c46; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_posts_post_images_blogpost_id_2c233c46 ON public.blog_posts_post_images USING btree (blogpost_id);


--
-- Name: blog_posts_post_images_blogpostimage_id_08331e5c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_posts_post_images_blogpostimage_id_08331e5c ON public.blog_posts_post_images USING btree (blogpostimage_id);


--
-- Name: blog_posts_slug_93227477_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_posts_slug_93227477_like ON public.blog_posts USING btree (slug varchar_pattern_ops);


--
-- Name: blog_posts_topic_type_id_685a025e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_posts_topic_type_id_685a025e ON public.blog_posts USING btree (topic_type_id);


--
-- Name: blog_reply_author_id_7641dac7; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_reply_author_id_7641dac7 ON public.blog_reply USING btree (author_id);


--
-- Name: blog_reply_comment_id_id_4d0f35cc; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX blog_reply_comment_id_id_4d0f35cc ON public.blog_reply USING btree (comment_id_id);


--
-- Name: contact_us_author_id_3da91a74; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX contact_us_author_id_3da91a74 ON public.contact_us USING btree (author_id);


--
-- Name: contact_us_paragraphs_contactus_id_9f9cdc14; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX contact_us_paragraphs_contactus_id_9f9cdc14 ON public.contact_us_paragraphs USING btree (contactus_id);


--
-- Name: contact_us_paragraphs_paragraph_id_e28b4597; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX contact_us_paragraphs_paragraph_id_e28b4597 ON public.contact_us_paragraphs USING btree (paragraph_id);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: legal_clause_terms_and_conditions_id_b6d04351; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX legal_clause_terms_and_conditions_id_b6d04351 ON public.legal_clause USING btree (terms_and_conditions_id);


--
-- Name: legal_useragreement_terms_and_conditions_id_516ae9e2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX legal_useragreement_terms_and_conditions_id_516ae9e2 ON public.legal_useragreement USING btree (terms_and_conditions_id);


--
-- Name: legal_useragreement_user_id_f4497ea0; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX legal_useragreement_user_id_f4497ea0 ON public.legal_useragreement USING btree (user_id);


--
-- Name: silk_profile_queries_profile_id_a3d76db8; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_profile_queries_profile_id_a3d76db8 ON public.silk_profile_queries USING btree (profile_id);


--
-- Name: silk_profile_queries_sqlquery_id_155df455; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_profile_queries_sqlquery_id_155df455 ON public.silk_profile_queries USING btree (sqlquery_id);


--
-- Name: silk_profile_request_id_7b81bd69; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_profile_request_id_7b81bd69 ON public.silk_profile USING btree (request_id);


--
-- Name: silk_profile_request_id_7b81bd69_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_profile_request_id_7b81bd69_like ON public.silk_profile USING btree (request_id varchar_pattern_ops);


--
-- Name: silk_request_id_5a356c4f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_request_id_5a356c4f_like ON public.silk_request USING btree (id varchar_pattern_ops);


--
-- Name: silk_request_path_9f3d798e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_request_path_9f3d798e ON public.silk_request USING btree (path);


--
-- Name: silk_request_path_9f3d798e_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_request_path_9f3d798e_like ON public.silk_request USING btree (path varchar_pattern_ops);


--
-- Name: silk_request_start_time_1300bc58; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_request_start_time_1300bc58 ON public.silk_request USING btree (start_time);


--
-- Name: silk_request_view_name_68559f7b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_request_view_name_68559f7b ON public.silk_request USING btree (view_name);


--
-- Name: silk_request_view_name_68559f7b_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_request_view_name_68559f7b_like ON public.silk_request USING btree (view_name varchar_pattern_ops);


--
-- Name: silk_response_id_dda88710_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_response_id_dda88710_like ON public.silk_response USING btree (id varchar_pattern_ops);


--
-- Name: silk_response_request_id_1e8e2776_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_response_request_id_1e8e2776_like ON public.silk_response USING btree (request_id varchar_pattern_ops);


--
-- Name: silk_sqlquery_request_id_6f8f0527; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_sqlquery_request_id_6f8f0527 ON public.silk_sqlquery USING btree (request_id);


--
-- Name: silk_sqlquery_request_id_6f8f0527_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX silk_sqlquery_request_id_6f8f0527_like ON public.silk_sqlquery USING btree (request_id varchar_pattern_ops);


--
-- Name: step_by_step_guides_blog_paragraphs_id_a2568528; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX step_by_step_guides_blog_paragraphs_id_a2568528 ON public.step_by_step_guides USING btree (blog_paragraphs_id);


--
-- Name: step_by_step_guides_blog_post_id_61ddf0a6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX step_by_step_guides_blog_post_id_61ddf0a6 ON public.step_by_step_guides USING btree (blog_post_id);


--
-- Name: step_by_step_guides_contac_blog_paragraphs_id_4aa7b4a8; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX step_by_step_guides_contac_blog_paragraphs_id_4aa7b4a8 ON public.step_by_step_guides_contact_us_specific USING btree (blog_paragraphs_id);


--
-- Name: step_by_step_guides_contac_privacy_policy_id_c604c3c7; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX step_by_step_guides_contac_privacy_policy_id_c604c3c7 ON public.step_by_step_guides_contact_us_specific USING btree (privacy_policy_id);


--
-- Name: step_by_step_guides_contac_sbs_self_refer_id_c988fb55; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX step_by_step_guides_contac_sbs_self_refer_id_c988fb55 ON public.step_by_step_guides_contact_us_specific USING btree (sbs_self_refer_id);


--
-- Name: step_by_step_guides_contact_us_specific_contact_us_id_6e48cae2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX step_by_step_guides_contact_us_specific_contact_us_id_6e48cae2 ON public.step_by_step_guides_contact_us_specific USING btree (contact_us_id);


--
-- Name: step_by_step_guides_sbs_self_refer_id_ce29408e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX step_by_step_guides_sbs_self_refer_id_ce29408e ON public.step_by_step_guides USING btree (sbs_self_refer_id);


--
-- Name: Advertise-with-well-plus-good_paragraphs_advertise_well_good Advertise-with-well-_advertisewithwellplu_acb0181f_fk_Advertise; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Advertise-with-well-plus-good_paragraphs_advertise_well_good"
    ADD CONSTRAINT "Advertise-with-well-_advertisewithwellplu_acb0181f_fk_Advertise" FOREIGN KEY (advertisewithwellplusgood_id) REFERENCES public."Advertise-with-well-plus-good"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: Advertise-with-well-plus-good Advertise-with-well-_author_advertise_wel_1d6b4089_fk_UserManag; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Advertise-with-well-plus-good"
    ADD CONSTRAINT "Advertise-with-well-_author_advertise_wel_1d6b4089_fk_UserManag" FOREIGN KEY (author_advertise_well_good_id) REFERENCES public."UserManagement_user"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: Advertise-with-well-plus-good_paragraphs_advertise_well_good Advertise-with-well-_paragraph_id_b73260b6_fk_ContactUs; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Advertise-with-well-plus-good_paragraphs_advertise_well_good"
    ADD CONSTRAINT "Advertise-with-well-_paragraph_id_b73260b6_fk_ContactUs" FOREIGN KEY (paragraph_id) REFERENCES public."ContactUs_paragraph"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ContactUs_paragraph_step_by_step_guide ContactUs_paragraph__paragraph_id_311e4cfa_fk_ContactUs; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ContactUs_paragraph_step_by_step_guide"
    ADD CONSTRAINT "ContactUs_paragraph__paragraph_id_311e4cfa_fk_ContactUs" FOREIGN KEY (paragraph_id) REFERENCES public."ContactUs_paragraph"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ContactUs_paragraph_step_by_step_guide ContactUs_paragraph__stepbystepguide_id_58b10e85_fk_step_by_s; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ContactUs_paragraph_step_by_step_guide"
    ADD CONSTRAINT "ContactUs_paragraph__stepbystepguide_id_58b10e85_fk_step_by_s" FOREIGN KEY (stepbystepguide_id) REFERENCES public.step_by_step_guides_contact_us_specific(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ContactUs_paragraph ContactUs_paragraph_advertise_with_us_id_831f2a83_fk_Advertise; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ContactUs_paragraph"
    ADD CONSTRAINT "ContactUs_paragraph_advertise_with_us_id_831f2a83_fk_Advertise" FOREIGN KEY (advertise_with_us_id) REFERENCES public."Advertise-with-well-plus-good"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: ContactUs_paragraph ContactUs_paragraph_contact_us_id_ebbe2d78_fk_contact_us_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ContactUs_paragraph"
    ADD CONSTRAINT "ContactUs_paragraph_contact_us_id_ebbe2d78_fk_contact_us_id" FOREIGN KEY (contact_us_id) REFERENCES public.contact_us(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: PrivacyPolicy PrivacyPolicy_author_privacy_polic_4095f766_fk_UserManag; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."PrivacyPolicy"
    ADD CONSTRAINT "PrivacyPolicy_author_privacy_polic_4095f766_fk_UserManag" FOREIGN KEY (author_privacy_policy_id) REFERENCES public."UserManagement_user"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: PrivacyPolicy_paragraphs_privacy_policy PrivacyPolicy_paragr_paragraph_id_7fc7e3a9_fk_ContactUs; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."PrivacyPolicy_paragraphs_privacy_policy"
    ADD CONSTRAINT "PrivacyPolicy_paragr_paragraph_id_7fc7e3a9_fk_ContactUs" FOREIGN KEY (paragraph_id) REFERENCES public."ContactUs_paragraph"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: PrivacyPolicy_paragraphs_privacy_policy PrivacyPolicy_paragr_privacypolicy_id_f81daa91_fk_PrivacyPo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."PrivacyPolicy_paragraphs_privacy_policy"
    ADD CONSTRAINT "PrivacyPolicy_paragr_privacypolicy_id_f81daa91_fk_PrivacyPo" FOREIGN KEY (privacypolicy_id) REFERENCES public."PrivacyPolicy"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: UserProfile_userprofile UserProfile_userprof_user_id_28edbd3a_fk_UserManag; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserProfile_userprofile"
    ADD CONSTRAINT "UserProfile_userprof_user_id_28edbd3a_fk_UserManag" FOREIGN KEY (user_id) REFERENCES public."UserManagement_user"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: UserProfile_userprofile UserProfile_userprofile_role_id_78ffcdd4_fk_UserProfile_role_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserProfile_userprofile"
    ADD CONSTRAINT "UserProfile_userprofile_role_id_78ffcdd4_fk_UserProfile_role_id" FOREIGN KEY (role_id) REFERENCES public."UserProfile_role"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_blogparagraph blog_blogparagraph_blog_post_id_eeb81534_fk_blog_posts_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_blogparagraph
    ADD CONSTRAINT blog_blogparagraph_blog_post_id_eeb81534_fk_blog_posts_id FOREIGN KEY (blog_post_id) REFERENCES public.blog_posts(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_blogparagraph blog_blogparagraph_paragraphs_self_refe_46301407_fk_blog_blog; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_blogparagraph
    ADD CONSTRAINT blog_blogparagraph_paragraphs_self_refe_46301407_fk_blog_blog FOREIGN KEY (paragraphs_self_refer_id) REFERENCES public.blog_blogparagraph(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_blogparagraph_step_by_step_guide blog_blogparagraph_s_blogparagraph_id_726fe9db_fk_blog_blog; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_blogparagraph_step_by_step_guide
    ADD CONSTRAINT blog_blogparagraph_s_blogparagraph_id_726fe9db_fk_blog_blog FOREIGN KEY (blogparagraph_id) REFERENCES public.blog_blogparagraph(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_blogparagraph_step_by_step_guide blog_blogparagraph_s_blogstepbystepguide__62ef3a47_fk_step_by_s; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_blogparagraph_step_by_step_guide
    ADD CONSTRAINT blog_blogparagraph_s_blogstepbystepguide__62ef3a47_fk_step_by_s FOREIGN KEY (blogstepbystepguide_id) REFERENCES public.step_by_step_guides(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_comment blog_comment_author_id_4f11e2e0_fk_UserManagement_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_comment
    ADD CONSTRAINT "blog_comment_author_id_4f11e2e0_fk_UserManagement_user_id" FOREIGN KEY (author_id) REFERENCES public."UserManagement_user"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_comment blog_comment_post_id_580e96ef_fk_blog_posts_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_comment
    ADD CONSTRAINT blog_comment_post_id_580e96ef_fk_blog_posts_id FOREIGN KEY (post_id) REFERENCES public.blog_posts(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_posts blog_posts_author_id_6f561d00_fk_UserManagement_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts
    ADD CONSTRAINT "blog_posts_author_id_6f561d00_fk_UserManagement_user_id" FOREIGN KEY (author_id) REFERENCES public."UserManagement_user"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_posts blog_posts_category_id_4316690d_fk_blog_category_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts
    ADD CONSTRAINT blog_posts_category_id_4316690d_fk_blog_category_id FOREIGN KEY (category_id) REFERENCES public.blog_category(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_posts_paragraphs blog_posts_paragraph_blogparagraph_id_b41e2b18_fk_blog_blog; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts_paragraphs
    ADD CONSTRAINT blog_posts_paragraph_blogparagraph_id_b41e2b18_fk_blog_blog FOREIGN KEY (blogparagraph_id) REFERENCES public.blog_blogparagraph(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_posts_paragraphs blog_posts_paragraphs_blogpost_id_c2fc2394_fk_blog_posts_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts_paragraphs
    ADD CONSTRAINT blog_posts_paragraphs_blogpost_id_c2fc2394_fk_blog_posts_id FOREIGN KEY (blogpost_id) REFERENCES public.blog_posts(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_posts_post_images blog_posts_post_imag_blogpostimage_id_08331e5c_fk_blog_blog; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts_post_images
    ADD CONSTRAINT blog_posts_post_imag_blogpostimage_id_08331e5c_fk_blog_blog FOREIGN KEY (blogpostimage_id) REFERENCES public.blog_blogpostimage(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_posts_post_images blog_posts_post_images_blogpost_id_2c233c46_fk_blog_posts_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts_post_images
    ADD CONSTRAINT blog_posts_post_images_blogpost_id_2c233c46_fk_blog_posts_id FOREIGN KEY (blogpost_id) REFERENCES public.blog_posts(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_posts blog_posts_topic_type_id_685a025e_fk_blog_topictype_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_posts
    ADD CONSTRAINT blog_posts_topic_type_id_685a025e_fk_blog_topictype_id FOREIGN KEY (topic_type_id) REFERENCES public.blog_topictype(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_reply blog_reply_author_id_7641dac7_fk_UserManagement_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_reply
    ADD CONSTRAINT "blog_reply_author_id_7641dac7_fk_UserManagement_user_id" FOREIGN KEY (author_id) REFERENCES public."UserManagement_user"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: blog_reply blog_reply_comment_id_id_4d0f35cc_fk_blog_comment_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.blog_reply
    ADD CONSTRAINT blog_reply_comment_id_id_4d0f35cc_fk_blog_comment_id FOREIGN KEY (comment_id_id) REFERENCES public.blog_comment(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: contact_us contact_us_author_id_3da91a74_fk_UserManagement_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_us
    ADD CONSTRAINT "contact_us_author_id_3da91a74_fk_UserManagement_user_id" FOREIGN KEY (author_id) REFERENCES public."UserManagement_user"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: contact_us_paragraphs contact_us_paragraph_paragraph_id_e28b4597_fk_ContactUs; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_us_paragraphs
    ADD CONSTRAINT "contact_us_paragraph_paragraph_id_e28b4597_fk_ContactUs" FOREIGN KEY (paragraph_id) REFERENCES public."ContactUs_paragraph"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: contact_us_paragraphs contact_us_paragraphs_contactus_id_9f9cdc14_fk_contact_us_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contact_us_paragraphs
    ADD CONSTRAINT contact_us_paragraphs_contactus_id_9f9cdc14_fk_contact_us_id FOREIGN KEY (contactus_id) REFERENCES public.contact_us(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_UserManagement_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_UserManagement_user_id" FOREIGN KEY (user_id) REFERENCES public."UserManagement_user"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: legal_clause legal_clause_terms_and_conditions_b6d04351_fk_legal_ter; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.legal_clause
    ADD CONSTRAINT legal_clause_terms_and_conditions_b6d04351_fk_legal_ter FOREIGN KEY (terms_and_conditions_id) REFERENCES public.legal_termsandconditions(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: legal_useragreement legal_useragreement_terms_and_conditions_516ae9e2_fk_legal_ter; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.legal_useragreement
    ADD CONSTRAINT legal_useragreement_terms_and_conditions_516ae9e2_fk_legal_ter FOREIGN KEY (terms_and_conditions_id) REFERENCES public.legal_termsandconditions(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: legal_useragreement legal_useragreement_user_id_f4497ea0_fk_UserManagement_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.legal_useragreement
    ADD CONSTRAINT "legal_useragreement_user_id_f4497ea0_fk_UserManagement_user_id" FOREIGN KEY (user_id) REFERENCES public."UserManagement_user"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: silk_profile_queries silk_profile_queries_profile_id_a3d76db8_fk_silk_profile_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_profile_queries
    ADD CONSTRAINT silk_profile_queries_profile_id_a3d76db8_fk_silk_profile_id FOREIGN KEY (profile_id) REFERENCES public.silk_profile(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: silk_profile_queries silk_profile_queries_sqlquery_id_155df455_fk_silk_sqlquery_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_profile_queries
    ADD CONSTRAINT silk_profile_queries_sqlquery_id_155df455_fk_silk_sqlquery_id FOREIGN KEY (sqlquery_id) REFERENCES public.silk_sqlquery(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: silk_profile silk_profile_request_id_7b81bd69_fk_silk_request_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_profile
    ADD CONSTRAINT silk_profile_request_id_7b81bd69_fk_silk_request_id FOREIGN KEY (request_id) REFERENCES public.silk_request(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: silk_response silk_response_request_id_1e8e2776_fk_silk_request_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_response
    ADD CONSTRAINT silk_response_request_id_1e8e2776_fk_silk_request_id FOREIGN KEY (request_id) REFERENCES public.silk_request(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: silk_sqlquery silk_sqlquery_request_id_6f8f0527_fk_silk_request_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.silk_sqlquery
    ADD CONSTRAINT silk_sqlquery_request_id_6f8f0527_fk_silk_request_id FOREIGN KEY (request_id) REFERENCES public.silk_request(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: step_by_step_guides_contact_us_specific step_by_step_guides__blog_paragraphs_id_4aa7b4a8_fk_ContactUs; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.step_by_step_guides_contact_us_specific
    ADD CONSTRAINT "step_by_step_guides__blog_paragraphs_id_4aa7b4a8_fk_ContactUs" FOREIGN KEY (blog_paragraphs_id) REFERENCES public."ContactUs_paragraph"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: step_by_step_guides_contact_us_specific step_by_step_guides__contact_us_id_6e48cae2_fk_contact_u; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.step_by_step_guides_contact_us_specific
    ADD CONSTRAINT step_by_step_guides__contact_us_id_6e48cae2_fk_contact_u FOREIGN KEY (contact_us_id) REFERENCES public.contact_us(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: step_by_step_guides_contact_us_specific step_by_step_guides__privacy_policy_id_c604c3c7_fk_PrivacyPo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.step_by_step_guides_contact_us_specific
    ADD CONSTRAINT "step_by_step_guides__privacy_policy_id_c604c3c7_fk_PrivacyPo" FOREIGN KEY (privacy_policy_id) REFERENCES public."PrivacyPolicy"(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: step_by_step_guides_contact_us_specific step_by_step_guides__sbs_self_refer_id_c988fb55_fk_step_by_s; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.step_by_step_guides_contact_us_specific
    ADD CONSTRAINT step_by_step_guides__sbs_self_refer_id_c988fb55_fk_step_by_s FOREIGN KEY (sbs_self_refer_id) REFERENCES public.step_by_step_guides_contact_us_specific(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: step_by_step_guides step_by_step_guides_blog_paragraphs_id_a2568528_fk_blog_blog; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.step_by_step_guides
    ADD CONSTRAINT step_by_step_guides_blog_paragraphs_id_a2568528_fk_blog_blog FOREIGN KEY (blog_paragraphs_id) REFERENCES public.blog_blogparagraph(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: step_by_step_guides step_by_step_guides_blog_post_id_61ddf0a6_fk_blog_posts_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.step_by_step_guides
    ADD CONSTRAINT step_by_step_guides_blog_post_id_61ddf0a6_fk_blog_posts_id FOREIGN KEY (blog_post_id) REFERENCES public.blog_posts(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: step_by_step_guides step_by_step_guides_sbs_self_refer_id_ce29408e_fk_step_by_s; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.step_by_step_guides
    ADD CONSTRAINT step_by_step_guides_sbs_self_refer_id_ce29408e_fk_step_by_s FOREIGN KEY (sbs_self_refer_id) REFERENCES public.step_by_step_guides(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database cluster dump complete
--

